Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 3     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 4     require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 5     require_key_lst -> require_key require_key_lst
Rule 6     require_key_lst -> require_key
Rule 7     require_key -> STRIPS_KEY
Rule 8     require_key -> EQUALITY_KEY
Rule 9     require_key -> TYPING_KEY
Rule 10    require_key -> ADL_KEY
Rule 11    require_key -> ND_KEY
Rule 12    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 13    names_lst -> NAME names_lst
Rule 14    names_lst -> NAME
Rule 15    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 16    predicate_def_lst -> predicate_def predicate_def_lst
Rule 17    predicate_def_lst -> predicate_def
Rule 18    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 19    predicate_def -> LPAREN NAME RPAREN
Rule 20    action_def_lst -> action_def action_def_lst
Rule 21    action_def_lst -> action_def
Rule 22    action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN
Rule 23    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 24    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 25    precond_def -> PRECONDITION_KEY LPAREN formula RPAREN
Rule 26    formula -> literal
Rule 27    formula -> AND_KEY formula_lst
Rule 28    formula -> OR_KEY formula_lst
Rule 29    formula -> NOT_KEY formula
Rule 30    formula -> IMPLY_KEY formula formula
Rule 31    formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
Rule 32    formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula
Rule 33    formula -> LPAREN AND_KEY formula_lst RPAREN
Rule 34    formula -> LPAREN OR_KEY formula_lst RPAREN
Rule 35    formula -> LPAREN NOT_KEY formula RPAREN
Rule 36    formula -> LPAREN IMPLY_KEY formula formula RPAREN
Rule 37    formula -> LPAREN literal RPAREN
Rule 38    formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 39    formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 40    formula_lst -> formula formula_lst
Rule 41    formula_lst -> formula
Rule 42    effects_def -> EFFECT_KEY LPAREN eff_formula RPAREN
Rule 43    eff_formula -> one_eff_formula
Rule 44    eff_formula -> ONEOF_KEY one_eff_formula_lst
Rule 45    one_eff_formula -> literal
Rule 46    one_eff_formula -> AND_KEY formula_lst
Rule 47    one_eff_formula -> LPAREN ONEOF_KEY one_eff_formula_lst RPAREN
Rule 48    one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN
Rule 49    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
Rule 50    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
Rule 51    one_eff_formula_lst -> one_eff_formula one_eff_formula_lst
Rule 52    one_eff_formula_lst -> one_eff_formula
Rule 53    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 54    literal -> predicate
Rule 55    predicate -> LPAREN NAME variables_lst RPAREN
Rule 56    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 57    predicate -> LPAREN NAME RPAREN
Rule 58    predicate -> NAME variables_lst
Rule 59    predicate -> EQUALS VARIABLE VARIABLE
Rule 60    predicate -> NAME
Rule 61    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 62    typed_variables_lst -> variables_lst HYPHEN type
Rule 63    variables_lst -> VARIABLE variables_lst
Rule 64    variables_lst -> VARIABLE
Rule 65    type -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 22
ADL_KEY              : 10
AND_KEY              : 27 33 46
DEFINE_KEY           : 2
DOMAIN_KEY           : 3
EFFECT_KEY           : 42
EQUALITY_KEY         : 8
EQUALS               : 56 59
EXISTS_KEY           : 31 38
FORALL_KEY           : 32 39 49 50
HYPHEN               : 61 62
IMPLY_KEY            : 30 36
LPAREN               : 2 3 4 12 15 18 19 22 23 24 25 31 32 33 34 35 36 37 38 38 39 39 42 47 48 49 49 50 50 50 53 55 56 57
NAME                 : 3 13 14 18 19 22 55 57 58 60 65
ND_KEY               : 11
NOT_KEY              : 29 35 53
ONEOF_KEY            : 44 47
OR_KEY               : 28 34
PARAMETERS_KEY       : 23 24
PRECONDITION_KEY     : 25
PREDICATES_KEY       : 15
REQUIREMENTS_KEY     : 4
RPAREN               : 2 3 4 12 15 18 19 22 23 24 25 31 32 33 34 35 36 37 38 38 39 39 42 47 48 49 49 50 50 50 53 55 56 57
STRIPS_KEY           : 7
TYPES_KEY            : 12
TYPING_KEY           : 9
VARIABLE             : 56 56 59 59 63 64
WHEN_KEY             : 48 50
error                : 

Nonterminals, with rules where they appear

action_def           : 20 21
action_def_lst       : 2 20
domain               : 1
domain_def           : 2
eff_formula          : 42
effects_def          : 22
formula              : 25 29 30 30 31 32 35 36 36 38 39 40 41 48 50
formula_lst          : 27 28 33 34 40 46
literal              : 26 37 45
names_lst            : 12 13
one_eff_formula      : 43 48 49 50 51 52
one_eff_formula_lst  : 44 47 51
parameters_def       : 22
pddl                 : 0
precond_def          : 22
predicate            : 53 54
predicate_def        : 16 17
predicate_def_lst    : 15 16
predicates_def       : 2
require_def          : 2
require_key          : 5 6
require_key_lst      : 4 5
type                 : 61 62
typed_variables_lst  : 18 23 31 32 38 39 49 50 61
types_def            : 2
variables_lst        : 55 58 61 62 63

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN

    LPAREN          shift and go to state 3

    pddl                           shift and go to state 1
    domain                         shift and go to state 2

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN

    DEFINE_KEY      shift and go to state 4


state 4

    (2) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (3) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 5

    domain_def                     shift and go to state 6

state 5

    (3) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 7


state 6

    (2) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (4) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 8

    require_def                    shift and go to state 9

state 7

    (3) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 10


state 8

    (4) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 11


state 9

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (12) types_def -> . LPAREN TYPES_KEY names_lst RPAREN

    LPAREN          shift and go to state 12

    types_def                      shift and go to state 13

state 10

    (3) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 14


state 11

    (4) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (5) require_key_lst -> . require_key require_key_lst
    (6) require_key_lst -> . require_key
    (7) require_key -> . STRIPS_KEY
    (8) require_key -> . EQUALITY_KEY
    (9) require_key -> . TYPING_KEY
    (10) require_key -> . ADL_KEY
    (11) require_key -> . ND_KEY

    STRIPS_KEY      shift and go to state 17
    EQUALITY_KEY    shift and go to state 18
    TYPING_KEY      shift and go to state 19
    ADL_KEY         shift and go to state 20
    ND_KEY          shift and go to state 21

    require_key_lst                shift and go to state 15
    require_key                    shift and go to state 16

state 12

    (12) types_def -> LPAREN . TYPES_KEY names_lst RPAREN

    TYPES_KEY       shift and go to state 22


state 13

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (15) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 23

    predicates_def                 shift and go to state 24

state 14

    (3) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 3 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 15

    (4) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 25


state 16

    (5) require_key_lst -> require_key . require_key_lst
    (6) require_key_lst -> require_key .
    (5) require_key_lst -> . require_key require_key_lst
    (6) require_key_lst -> . require_key
    (7) require_key -> . STRIPS_KEY
    (8) require_key -> . EQUALITY_KEY
    (9) require_key -> . TYPING_KEY
    (10) require_key -> . ADL_KEY
    (11) require_key -> . ND_KEY

    RPAREN          reduce using rule 6 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 17
    EQUALITY_KEY    shift and go to state 18
    TYPING_KEY      shift and go to state 19
    ADL_KEY         shift and go to state 20
    ND_KEY          shift and go to state 21

    require_key                    shift and go to state 16
    require_key_lst                shift and go to state 26

state 17

    (7) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 7 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 7 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 7 (require_key -> STRIPS_KEY .)
    ADL_KEY         reduce using rule 7 (require_key -> STRIPS_KEY .)
    ND_KEY          reduce using rule 7 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 7 (require_key -> STRIPS_KEY .)


state 18

    (8) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 8 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 8 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 8 (require_key -> EQUALITY_KEY .)
    ADL_KEY         reduce using rule 8 (require_key -> EQUALITY_KEY .)
    ND_KEY          reduce using rule 8 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 8 (require_key -> EQUALITY_KEY .)


state 19

    (9) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 9 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 9 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 9 (require_key -> TYPING_KEY .)
    ADL_KEY         reduce using rule 9 (require_key -> TYPING_KEY .)
    ND_KEY          reduce using rule 9 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 9 (require_key -> TYPING_KEY .)


state 20

    (10) require_key -> ADL_KEY .

    STRIPS_KEY      reduce using rule 10 (require_key -> ADL_KEY .)
    EQUALITY_KEY    reduce using rule 10 (require_key -> ADL_KEY .)
    TYPING_KEY      reduce using rule 10 (require_key -> ADL_KEY .)
    ADL_KEY         reduce using rule 10 (require_key -> ADL_KEY .)
    ND_KEY          reduce using rule 10 (require_key -> ADL_KEY .)
    RPAREN          reduce using rule 10 (require_key -> ADL_KEY .)


state 21

    (11) require_key -> ND_KEY .

    STRIPS_KEY      reduce using rule 11 (require_key -> ND_KEY .)
    EQUALITY_KEY    reduce using rule 11 (require_key -> ND_KEY .)
    TYPING_KEY      reduce using rule 11 (require_key -> ND_KEY .)
    ADL_KEY         reduce using rule 11 (require_key -> ND_KEY .)
    ND_KEY          reduce using rule 11 (require_key -> ND_KEY .)
    RPAREN          reduce using rule 11 (require_key -> ND_KEY .)


state 22

    (12) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (13) names_lst -> . NAME names_lst
    (14) names_lst -> . NAME

    NAME            shift and go to state 28

    names_lst                      shift and go to state 27

state 23

    (15) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 29


state 24

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (20) action_def_lst -> . action_def action_def_lst
    (21) action_def_lst -> . action_def
    (22) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 30

    action_def_lst                 shift and go to state 31
    action_def                     shift and go to state 32

state 25

    (4) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 4 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 26

    (5) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 5 (require_key_lst -> require_key require_key_lst .)


state 27

    (12) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 33


state 28

    (13) names_lst -> NAME . names_lst
    (14) names_lst -> NAME .
    (13) names_lst -> . NAME names_lst
    (14) names_lst -> . NAME

    RPAREN          reduce using rule 14 (names_lst -> NAME .)
    NAME            shift and go to state 28

    names_lst                      shift and go to state 34

state 29

    (15) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (16) predicate_def_lst -> . predicate_def predicate_def_lst
    (17) predicate_def_lst -> . predicate_def
    (18) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (19) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 35

    predicate_def_lst              shift and go to state 36
    predicate_def                  shift and go to state 37

state 30

    (22) action_def -> LPAREN . ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    ACTION_KEY      shift and go to state 38


state 31

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 39


state 32

    (20) action_def_lst -> action_def . action_def_lst
    (21) action_def_lst -> action_def .
    (20) action_def_lst -> . action_def action_def_lst
    (21) action_def_lst -> . action_def
    (22) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    RPAREN          reduce using rule 21 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 30

    action_def                     shift and go to state 32
    action_def_lst                 shift and go to state 40

state 33

    (12) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 12 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 34

    (13) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 13 (names_lst -> NAME names_lst .)


state 35

    (18) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (19) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 41


state 36

    (15) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 42


state 37

    (16) predicate_def_lst -> predicate_def . predicate_def_lst
    (17) predicate_def_lst -> predicate_def .
    (16) predicate_def_lst -> . predicate_def predicate_def_lst
    (17) predicate_def_lst -> . predicate_def
    (18) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (19) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 17 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 35

    predicate_def                  shift and go to state 37
    predicate_def_lst              shift and go to state 43

state 38

    (22) action_def -> LPAREN ACTION_KEY . NAME parameters_def precond_def effects_def RPAREN

    NAME            shift and go to state 44


state 39

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 2 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 40

    (20) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 20 (action_def_lst -> action_def action_def_lst .)


state 41

    (18) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (19) predicate_def -> LPAREN NAME . RPAREN
    (61) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> . variables_lst HYPHEN type
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 46
    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 45
    variables_lst                  shift and go to state 47

state 42

    (15) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 15 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 43

    (16) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 16 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 44

    (22) action_def -> LPAREN ACTION_KEY NAME . parameters_def precond_def effects_def RPAREN
    (23) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (24) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 50

    parameters_def                 shift and go to state 49

state 45

    (18) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 51


state 46

    (19) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 19 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 19 (predicate_def -> LPAREN NAME RPAREN .)


state 47

    (61) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 52


state 48

    (63) variables_lst -> VARIABLE . variables_lst
    (64) variables_lst -> VARIABLE .
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 64 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 64 (variables_lst -> VARIABLE .)
    AND_KEY         reduce using rule 64 (variables_lst -> VARIABLE .)
    OR_KEY          reduce using rule 64 (variables_lst -> VARIABLE .)
    NOT_KEY         reduce using rule 64 (variables_lst -> VARIABLE .)
    IMPLY_KEY       reduce using rule 64 (variables_lst -> VARIABLE .)
    EXISTS_KEY      reduce using rule 64 (variables_lst -> VARIABLE .)
    FORALL_KEY      reduce using rule 64 (variables_lst -> VARIABLE .)
    LPAREN          reduce using rule 64 (variables_lst -> VARIABLE .)
    NAME            reduce using rule 64 (variables_lst -> VARIABLE .)
    EQUALS          reduce using rule 64 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 48

    variables_lst                  shift and go to state 53

state 49

    (22) action_def -> LPAREN ACTION_KEY NAME parameters_def . precond_def effects_def RPAREN
    (25) precond_def -> . PRECONDITION_KEY LPAREN formula RPAREN

    PRECONDITION_KEY shift and go to state 55

    precond_def                    shift and go to state 54

state 50

    (23) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (24) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 56


state 51

    (18) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 18 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 18 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 52

    (61) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (62) typed_variables_lst -> variables_lst HYPHEN . type
    (65) type -> . NAME

    NAME            shift and go to state 58

    type                           shift and go to state 57

state 53

    (63) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    AND_KEY         reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    OR_KEY          reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    NOT_KEY         reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    IMPLY_KEY       reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    EXISTS_KEY      reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    FORALL_KEY      reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    LPAREN          reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    NAME            reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)
    EQUALS          reduce using rule 63 (variables_lst -> VARIABLE variables_lst .)


state 54

    (22) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def . effects_def RPAREN
    (42) effects_def -> . EFFECT_KEY LPAREN eff_formula RPAREN

    EFFECT_KEY      shift and go to state 60

    effects_def                    shift and go to state 59

state 55

    (25) precond_def -> PRECONDITION_KEY . LPAREN formula RPAREN

    LPAREN          shift and go to state 61


state 56

    (23) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (24) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (61) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> . variables_lst HYPHEN type
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 63
    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 62
    variables_lst                  shift and go to state 47

state 57

    (61) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (62) typed_variables_lst -> variables_lst HYPHEN type .
    (61) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> . variables_lst HYPHEN type
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 62 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 48

    variables_lst                  shift and go to state 47
    typed_variables_lst            shift and go to state 64

state 58

    (65) type -> NAME .

    VARIABLE        reduce using rule 65 (type -> NAME .)
    RPAREN          reduce using rule 65 (type -> NAME .)


state 59

    (22) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def . RPAREN

    RPAREN          shift and go to state 65


state 60

    (42) effects_def -> EFFECT_KEY . LPAREN eff_formula RPAREN

    LPAREN          shift and go to state 66


state 61

    (25) precond_def -> PRECONDITION_KEY LPAREN . formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 68
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 62

    (23) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 79


state 63

    (24) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 24 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 64

    (61) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 61 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 65

    (22) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .

    LPAREN          reduce using rule 22 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)
    RPAREN          reduce using rule 22 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)


state 66

    (42) effects_def -> EFFECT_KEY LPAREN . eff_formula RPAREN
    (43) eff_formula -> . one_eff_formula
    (44) eff_formula -> . ONEOF_KEY one_eff_formula_lst
    (45) one_eff_formula -> . literal
    (46) one_eff_formula -> . AND_KEY formula_lst
    (47) one_eff_formula -> . LPAREN ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> . LPAREN WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    ONEOF_KEY       shift and go to state 83
    AND_KEY         shift and go to state 85
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    eff_formula                    shift and go to state 81
    one_eff_formula                shift and go to state 82
    literal                        shift and go to state 84
    predicate                      shift and go to state 76

state 67

    (33) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (34) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (35) formula -> LPAREN . NOT_KEY formula RPAREN
    (36) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (37) formula -> LPAREN . literal RPAREN
    (38) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> LPAREN . NOT_KEY predicate RPAREN
    (55) predicate -> LPAREN . NAME variables_lst RPAREN
    (56) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> LPAREN . NAME RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 87
    OR_KEY          shift and go to state 88
    NOT_KEY         shift and go to state 89
    IMPLY_KEY       shift and go to state 90
    EXISTS_KEY      shift and go to state 92
    FORALL_KEY      shift and go to state 93
    NAME            shift and go to state 94
    EQUALS          shift and go to state 95
    LPAREN          shift and go to state 86

    literal                        shift and go to state 91
    predicate                      shift and go to state 76

state 68

    (25) precond_def -> PRECONDITION_KEY LPAREN formula . RPAREN

    RPAREN          shift and go to state 96


state 69

    (26) formula -> literal .

    RPAREN          reduce using rule 26 (formula -> literal .)
    AND_KEY         reduce using rule 26 (formula -> literal .)
    OR_KEY          reduce using rule 26 (formula -> literal .)
    NOT_KEY         reduce using rule 26 (formula -> literal .)
    IMPLY_KEY       reduce using rule 26 (formula -> literal .)
    EXISTS_KEY      reduce using rule 26 (formula -> literal .)
    FORALL_KEY      reduce using rule 26 (formula -> literal .)
    LPAREN          reduce using rule 26 (formula -> literal .)
    NAME            reduce using rule 26 (formula -> literal .)
    EQUALS          reduce using rule 26 (formula -> literal .)


state 70

    (27) formula -> AND_KEY . formula_lst
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 97
    formula                        shift and go to state 98
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 71

    (28) formula -> OR_KEY . formula_lst
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 99
    formula                        shift and go to state 98
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 72

    (29) formula -> NOT_KEY . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 100
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 73

    (30) formula -> IMPLY_KEY . formula formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 101
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 74

    (31) formula -> EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 102


state 75

    (32) formula -> FORALL_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 103


state 76

    (54) literal -> predicate .

    RPAREN          reduce using rule 54 (literal -> predicate .)
    AND_KEY         reduce using rule 54 (literal -> predicate .)
    OR_KEY          reduce using rule 54 (literal -> predicate .)
    NOT_KEY         reduce using rule 54 (literal -> predicate .)
    IMPLY_KEY       reduce using rule 54 (literal -> predicate .)
    EXISTS_KEY      reduce using rule 54 (literal -> predicate .)
    FORALL_KEY      reduce using rule 54 (literal -> predicate .)
    LPAREN          reduce using rule 54 (literal -> predicate .)
    NAME            reduce using rule 54 (literal -> predicate .)
    EQUALS          reduce using rule 54 (literal -> predicate .)


state 77

    (58) predicate -> NAME . variables_lst
    (60) predicate -> NAME .
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 60 (predicate -> NAME .)
    AND_KEY         reduce using rule 60 (predicate -> NAME .)
    OR_KEY          reduce using rule 60 (predicate -> NAME .)
    NOT_KEY         reduce using rule 60 (predicate -> NAME .)
    IMPLY_KEY       reduce using rule 60 (predicate -> NAME .)
    EXISTS_KEY      reduce using rule 60 (predicate -> NAME .)
    FORALL_KEY      reduce using rule 60 (predicate -> NAME .)
    LPAREN          reduce using rule 60 (predicate -> NAME .)
    NAME            reduce using rule 60 (predicate -> NAME .)
    EQUALS          reduce using rule 60 (predicate -> NAME .)
    VARIABLE        shift and go to state 48

    variables_lst                  shift and go to state 104

state 78

    (59) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 105


state 79

    (23) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 23 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 80

    (47) one_eff_formula -> LPAREN . ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> LPAREN . WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> LPAREN . NOT_KEY predicate RPAREN
    (55) predicate -> LPAREN . NAME variables_lst RPAREN
    (56) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> LPAREN . NAME RPAREN

    ONEOF_KEY       shift and go to state 106
    WHEN_KEY        shift and go to state 107
    FORALL_KEY      shift and go to state 108
    NOT_KEY         shift and go to state 109
    NAME            shift and go to state 110
    EQUALS          shift and go to state 111


state 81

    (42) effects_def -> EFFECT_KEY LPAREN eff_formula . RPAREN

    RPAREN          shift and go to state 112


state 82

    (43) eff_formula -> one_eff_formula .

    RPAREN          reduce using rule 43 (eff_formula -> one_eff_formula .)


state 83

    (44) eff_formula -> ONEOF_KEY . one_eff_formula_lst
    (51) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (52) one_eff_formula_lst -> . one_eff_formula
    (45) one_eff_formula -> . literal
    (46) one_eff_formula -> . AND_KEY formula_lst
    (47) one_eff_formula -> . LPAREN ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> . LPAREN WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 85
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    one_eff_formula_lst            shift and go to state 113
    one_eff_formula                shift and go to state 114
    literal                        shift and go to state 84
    predicate                      shift and go to state 76

state 84

    (45) one_eff_formula -> literal .

    RPAREN          reduce using rule 45 (one_eff_formula -> literal .)
    AND_KEY         reduce using rule 45 (one_eff_formula -> literal .)
    LPAREN          reduce using rule 45 (one_eff_formula -> literal .)
    NAME            reduce using rule 45 (one_eff_formula -> literal .)
    EQUALS          reduce using rule 45 (one_eff_formula -> literal .)


state 85

    (46) one_eff_formula -> AND_KEY . formula_lst
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 115
    formula                        shift and go to state 98
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 86

    (53) literal -> LPAREN . NOT_KEY predicate RPAREN
    (55) predicate -> LPAREN . NAME variables_lst RPAREN
    (56) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 109
    NAME            shift and go to state 110
    EQUALS          shift and go to state 111


state 87

    (33) formula -> LPAREN AND_KEY . formula_lst RPAREN
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 116
    formula                        shift and go to state 98
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 88

    (34) formula -> LPAREN OR_KEY . formula_lst RPAREN
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 117
    formula                        shift and go to state 98
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 89

    (35) formula -> LPAREN NOT_KEY . formula RPAREN
    (53) literal -> LPAREN NOT_KEY . predicate RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 118
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 119
    predicate                      shift and go to state 120
    literal                        shift and go to state 69

state 90

    (36) formula -> LPAREN IMPLY_KEY . formula formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 121
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 91

    (37) formula -> LPAREN literal . RPAREN

    RPAREN          shift and go to state 122


state 92

    (38) formula -> LPAREN EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 123


state 93

    (39) formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 124


state 94

    (55) predicate -> LPAREN NAME . variables_lst RPAREN
    (57) predicate -> LPAREN NAME . RPAREN
    (58) predicate -> NAME . variables_lst
    (60) predicate -> NAME .
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 126
    VARIABLE        shift and go to state 48

  ! RPAREN          [ reduce using rule 60 (predicate -> NAME .) ]

    variables_lst                  shift and go to state 125

state 95

    (56) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN
    (59) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 127


state 96

    (25) precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .

    EFFECT_KEY      reduce using rule 25 (precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .)


state 97

    (27) formula -> AND_KEY formula_lst .

    RPAREN          reduce using rule 27 (formula -> AND_KEY formula_lst .)
    AND_KEY         reduce using rule 27 (formula -> AND_KEY formula_lst .)
    OR_KEY          reduce using rule 27 (formula -> AND_KEY formula_lst .)
    NOT_KEY         reduce using rule 27 (formula -> AND_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 27 (formula -> AND_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 27 (formula -> AND_KEY formula_lst .)
    FORALL_KEY      reduce using rule 27 (formula -> AND_KEY formula_lst .)
    LPAREN          reduce using rule 27 (formula -> AND_KEY formula_lst .)
    NAME            reduce using rule 27 (formula -> AND_KEY formula_lst .)
    EQUALS          reduce using rule 27 (formula -> AND_KEY formula_lst .)


state 98

    (40) formula_lst -> formula . formula_lst
    (41) formula_lst -> formula .
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for OR_KEY resolved as shift
  ! shift/reduce conflict for NOT_KEY resolved as shift
  ! shift/reduce conflict for IMPLY_KEY resolved as shift
  ! shift/reduce conflict for EXISTS_KEY resolved as shift
  ! shift/reduce conflict for FORALL_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 41 (formula_lst -> formula .)
    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

  ! AND_KEY         [ reduce using rule 41 (formula_lst -> formula .) ]
  ! OR_KEY          [ reduce using rule 41 (formula_lst -> formula .) ]
  ! NOT_KEY         [ reduce using rule 41 (formula_lst -> formula .) ]
  ! IMPLY_KEY       [ reduce using rule 41 (formula_lst -> formula .) ]
  ! EXISTS_KEY      [ reduce using rule 41 (formula_lst -> formula .) ]
  ! FORALL_KEY      [ reduce using rule 41 (formula_lst -> formula .) ]
  ! LPAREN          [ reduce using rule 41 (formula_lst -> formula .) ]
  ! NAME            [ reduce using rule 41 (formula_lst -> formula .) ]
  ! EQUALS          [ reduce using rule 41 (formula_lst -> formula .) ]

    formula                        shift and go to state 98
    formula_lst                    shift and go to state 128
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 99

    (28) formula -> OR_KEY formula_lst .

    RPAREN          reduce using rule 28 (formula -> OR_KEY formula_lst .)
    AND_KEY         reduce using rule 28 (formula -> OR_KEY formula_lst .)
    OR_KEY          reduce using rule 28 (formula -> OR_KEY formula_lst .)
    NOT_KEY         reduce using rule 28 (formula -> OR_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 28 (formula -> OR_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 28 (formula -> OR_KEY formula_lst .)
    FORALL_KEY      reduce using rule 28 (formula -> OR_KEY formula_lst .)
    LPAREN          reduce using rule 28 (formula -> OR_KEY formula_lst .)
    NAME            reduce using rule 28 (formula -> OR_KEY formula_lst .)
    EQUALS          reduce using rule 28 (formula -> OR_KEY formula_lst .)


state 100

    (29) formula -> NOT_KEY formula .

    RPAREN          reduce using rule 29 (formula -> NOT_KEY formula .)
    AND_KEY         reduce using rule 29 (formula -> NOT_KEY formula .)
    OR_KEY          reduce using rule 29 (formula -> NOT_KEY formula .)
    NOT_KEY         reduce using rule 29 (formula -> NOT_KEY formula .)
    IMPLY_KEY       reduce using rule 29 (formula -> NOT_KEY formula .)
    EXISTS_KEY      reduce using rule 29 (formula -> NOT_KEY formula .)
    FORALL_KEY      reduce using rule 29 (formula -> NOT_KEY formula .)
    LPAREN          reduce using rule 29 (formula -> NOT_KEY formula .)
    NAME            reduce using rule 29 (formula -> NOT_KEY formula .)
    EQUALS          reduce using rule 29 (formula -> NOT_KEY formula .)


state 101

    (30) formula -> IMPLY_KEY formula . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 129
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 102

    (31) formula -> EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula
    (61) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> . variables_lst HYPHEN type
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 130
    variables_lst                  shift and go to state 47

state 103

    (32) formula -> FORALL_KEY LPAREN . typed_variables_lst RPAREN formula
    (61) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> . variables_lst HYPHEN type
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 131
    variables_lst                  shift and go to state 47

state 104

    (58) predicate -> NAME variables_lst .

    RPAREN          reduce using rule 58 (predicate -> NAME variables_lst .)
    AND_KEY         reduce using rule 58 (predicate -> NAME variables_lst .)
    OR_KEY          reduce using rule 58 (predicate -> NAME variables_lst .)
    NOT_KEY         reduce using rule 58 (predicate -> NAME variables_lst .)
    IMPLY_KEY       reduce using rule 58 (predicate -> NAME variables_lst .)
    EXISTS_KEY      reduce using rule 58 (predicate -> NAME variables_lst .)
    FORALL_KEY      reduce using rule 58 (predicate -> NAME variables_lst .)
    LPAREN          reduce using rule 58 (predicate -> NAME variables_lst .)
    NAME            reduce using rule 58 (predicate -> NAME variables_lst .)
    EQUALS          reduce using rule 58 (predicate -> NAME variables_lst .)


state 105

    (59) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 132


state 106

    (47) one_eff_formula -> LPAREN ONEOF_KEY . one_eff_formula_lst RPAREN
    (51) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (52) one_eff_formula_lst -> . one_eff_formula
    (45) one_eff_formula -> . literal
    (46) one_eff_formula -> . AND_KEY formula_lst
    (47) one_eff_formula -> . LPAREN ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> . LPAREN WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 85
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    one_eff_formula_lst            shift and go to state 133
    one_eff_formula                shift and go to state 114
    literal                        shift and go to state 84
    predicate                      shift and go to state 76

state 107

    (48) one_eff_formula -> LPAREN WHEN_KEY . formula one_eff_formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 134
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 108

    (49) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN

    LPAREN          shift and go to state 135


state 109

    (53) literal -> LPAREN NOT_KEY . predicate RPAREN
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    LPAREN          shift and go to state 136
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    predicate                      shift and go to state 137

state 110

    (55) predicate -> LPAREN NAME . variables_lst RPAREN
    (57) predicate -> LPAREN NAME . RPAREN
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 126
    VARIABLE        shift and go to state 48

    variables_lst                  shift and go to state 138

state 111

    (56) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 139


state 112

    (42) effects_def -> EFFECT_KEY LPAREN eff_formula RPAREN .

    RPAREN          reduce using rule 42 (effects_def -> EFFECT_KEY LPAREN eff_formula RPAREN .)


state 113

    (44) eff_formula -> ONEOF_KEY one_eff_formula_lst .

    RPAREN          reduce using rule 44 (eff_formula -> ONEOF_KEY one_eff_formula_lst .)


state 114

    (51) one_eff_formula_lst -> one_eff_formula . one_eff_formula_lst
    (52) one_eff_formula_lst -> one_eff_formula .
    (51) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (52) one_eff_formula_lst -> . one_eff_formula
    (45) one_eff_formula -> . literal
    (46) one_eff_formula -> . AND_KEY formula_lst
    (47) one_eff_formula -> . LPAREN ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> . LPAREN WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    RPAREN          reduce using rule 52 (one_eff_formula_lst -> one_eff_formula .)
    AND_KEY         shift and go to state 85
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    one_eff_formula                shift and go to state 114
    one_eff_formula_lst            shift and go to state 140
    literal                        shift and go to state 84
    predicate                      shift and go to state 76

state 115

    (46) one_eff_formula -> AND_KEY formula_lst .

    RPAREN          reduce using rule 46 (one_eff_formula -> AND_KEY formula_lst .)
    AND_KEY         reduce using rule 46 (one_eff_formula -> AND_KEY formula_lst .)
    LPAREN          reduce using rule 46 (one_eff_formula -> AND_KEY formula_lst .)
    NAME            reduce using rule 46 (one_eff_formula -> AND_KEY formula_lst .)
    EQUALS          reduce using rule 46 (one_eff_formula -> AND_KEY formula_lst .)


state 116

    (33) formula -> LPAREN AND_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 141


state 117

    (34) formula -> LPAREN OR_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 142


state 118

    (33) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (34) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (35) formula -> LPAREN . NOT_KEY formula RPAREN
    (36) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (37) formula -> LPAREN . literal RPAREN
    (38) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) predicate -> LPAREN . NAME variables_lst RPAREN
    (56) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> LPAREN . NAME RPAREN
    (53) literal -> LPAREN . NOT_KEY predicate RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 87
    OR_KEY          shift and go to state 88
    NOT_KEY         shift and go to state 89
    IMPLY_KEY       shift and go to state 90
    EXISTS_KEY      shift and go to state 92
    FORALL_KEY      shift and go to state 93
    NAME            shift and go to state 94
    EQUALS          shift and go to state 95
    LPAREN          shift and go to state 86

    literal                        shift and go to state 91
    predicate                      shift and go to state 76

state 119

    (35) formula -> LPAREN NOT_KEY formula . RPAREN

    RPAREN          shift and go to state 143


state 120

    (53) literal -> LPAREN NOT_KEY predicate . RPAREN
    (54) literal -> predicate .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 144

  ! RPAREN          [ reduce using rule 54 (literal -> predicate .) ]


state 121

    (36) formula -> LPAREN IMPLY_KEY formula . formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 145
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 122

    (37) formula -> LPAREN literal RPAREN .

    RPAREN          reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    AND_KEY         reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    OR_KEY          reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    NOT_KEY         reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    IMPLY_KEY       reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    EXISTS_KEY      reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    FORALL_KEY      reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    LPAREN          reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    NAME            reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    EQUALS          reduce using rule 37 (formula -> LPAREN literal RPAREN .)


state 123

    (38) formula -> LPAREN EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (61) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> . variables_lst HYPHEN type
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 146
    variables_lst                  shift and go to state 47

state 124

    (39) formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (61) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> . variables_lst HYPHEN type
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 147
    variables_lst                  shift and go to state 47

state 125

    (55) predicate -> LPAREN NAME variables_lst . RPAREN
    (58) predicate -> NAME variables_lst .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 148

  ! RPAREN          [ reduce using rule 58 (predicate -> NAME variables_lst .) ]


state 126

    (57) predicate -> LPAREN NAME RPAREN .

    RPAREN          reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    AND_KEY         reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    OR_KEY          reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    NOT_KEY         reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    IMPLY_KEY       reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    EXISTS_KEY      reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    FORALL_KEY      reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    NAME            reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)
    EQUALS          reduce using rule 57 (predicate -> LPAREN NAME RPAREN .)


state 127

    (56) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN
    (59) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 149


state 128

    (40) formula_lst -> formula formula_lst .

    AND_KEY         reduce using rule 40 (formula_lst -> formula formula_lst .)
    OR_KEY          reduce using rule 40 (formula_lst -> formula formula_lst .)
    NOT_KEY         reduce using rule 40 (formula_lst -> formula formula_lst .)
    IMPLY_KEY       reduce using rule 40 (formula_lst -> formula formula_lst .)
    EXISTS_KEY      reduce using rule 40 (formula_lst -> formula formula_lst .)
    FORALL_KEY      reduce using rule 40 (formula_lst -> formula formula_lst .)
    LPAREN          reduce using rule 40 (formula_lst -> formula formula_lst .)
    NAME            reduce using rule 40 (formula_lst -> formula formula_lst .)
    EQUALS          reduce using rule 40 (formula_lst -> formula formula_lst .)
    RPAREN          reduce using rule 40 (formula_lst -> formula formula_lst .)


state 129

    (30) formula -> IMPLY_KEY formula formula .

    RPAREN          reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    AND_KEY         reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    OR_KEY          reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    NOT_KEY         reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    IMPLY_KEY       reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    EXISTS_KEY      reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    FORALL_KEY      reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    LPAREN          reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    NAME            reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    EQUALS          reduce using rule 30 (formula -> IMPLY_KEY formula formula .)


state 130

    (31) formula -> EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 150


state 131

    (32) formula -> FORALL_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 151


state 132

    (59) predicate -> EQUALS VARIABLE VARIABLE .

    RPAREN          reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    AND_KEY         reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    OR_KEY          reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    NOT_KEY         reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    IMPLY_KEY       reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    EXISTS_KEY      reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    FORALL_KEY      reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    LPAREN          reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    NAME            reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)
    EQUALS          reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .)


state 133

    (47) one_eff_formula -> LPAREN ONEOF_KEY one_eff_formula_lst . RPAREN

    RPAREN          shift and go to state 152


state 134

    (48) one_eff_formula -> LPAREN WHEN_KEY formula . one_eff_formula RPAREN
    (45) one_eff_formula -> . literal
    (46) one_eff_formula -> . AND_KEY formula_lst
    (47) one_eff_formula -> . LPAREN ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> . LPAREN WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 85
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    one_eff_formula                shift and go to state 153
    literal                        shift and go to state 84
    predicate                      shift and go to state 76

state 135

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (61) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (62) typed_variables_lst -> . variables_lst HYPHEN type
    (63) variables_lst -> . VARIABLE variables_lst
    (64) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 154
    variables_lst                  shift and go to state 47

state 136

    (55) predicate -> LPAREN . NAME variables_lst RPAREN
    (56) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 110
    EQUALS          shift and go to state 111


state 137

    (53) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 144


state 138

    (55) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 148


state 139

    (56) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 155


state 140

    (51) one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .

    RPAREN          reduce using rule 51 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)


state 141

    (33) formula -> LPAREN AND_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NAME            reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)


state 142

    (34) formula -> LPAREN OR_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NAME            reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)


state 143

    (35) formula -> LPAREN NOT_KEY formula RPAREN .

    RPAREN          reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    AND_KEY         reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    OR_KEY          reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NOT_KEY         reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    IMPLY_KEY       reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EXISTS_KEY      reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    FORALL_KEY      reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    LPAREN          reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NAME            reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EQUALS          reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)


state 144

    (53) literal -> LPAREN NOT_KEY predicate RPAREN .

    RPAREN          reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    AND_KEY         reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    OR_KEY          reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NOT_KEY         reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    IMPLY_KEY       reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EXISTS_KEY      reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    FORALL_KEY      reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NAME            reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EQUALS          reduce using rule 53 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 145

    (36) formula -> LPAREN IMPLY_KEY formula formula . RPAREN

    RPAREN          shift and go to state 156


state 146

    (38) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 157


state 147

    (39) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 158


state 148

    (55) predicate -> LPAREN NAME variables_lst RPAREN .

    RPAREN          reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    AND_KEY         reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    OR_KEY          reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NOT_KEY         reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    IMPLY_KEY       reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EXISTS_KEY      reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    FORALL_KEY      reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NAME            reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EQUALS          reduce using rule 55 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 149

    (56) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN
    (59) predicate -> EQUALS VARIABLE VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 159

  ! RPAREN          [ reduce using rule 59 (predicate -> EQUALS VARIABLE VARIABLE .) ]


state 150

    (31) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 160
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 151

    (32) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 161
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 152

    (47) one_eff_formula -> LPAREN ONEOF_KEY one_eff_formula_lst RPAREN .

    RPAREN          reduce using rule 47 (one_eff_formula -> LPAREN ONEOF_KEY one_eff_formula_lst RPAREN .)
    AND_KEY         reduce using rule 47 (one_eff_formula -> LPAREN ONEOF_KEY one_eff_formula_lst RPAREN .)
    LPAREN          reduce using rule 47 (one_eff_formula -> LPAREN ONEOF_KEY one_eff_formula_lst RPAREN .)
    NAME            reduce using rule 47 (one_eff_formula -> LPAREN ONEOF_KEY one_eff_formula_lst RPAREN .)
    EQUALS          reduce using rule 47 (one_eff_formula -> LPAREN ONEOF_KEY one_eff_formula_lst RPAREN .)


state 153

    (48) one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula . RPAREN

    RPAREN          shift and go to state 162


state 154

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN

    RPAREN          shift and go to state 163


state 155

    (56) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 159


state 156

    (36) formula -> LPAREN IMPLY_KEY formula formula RPAREN .

    RPAREN          reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    AND_KEY         reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    OR_KEY          reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NOT_KEY         reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    IMPLY_KEY       reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EXISTS_KEY      reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    FORALL_KEY      reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    LPAREN          reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NAME            reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EQUALS          reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)


state 157

    (38) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 164
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 158

    (39) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 165
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 159

    (56) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    RPAREN          reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    AND_KEY         reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    OR_KEY          reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NOT_KEY         reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    IMPLY_KEY       reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EXISTS_KEY      reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    FORALL_KEY      reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NAME            reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EQUALS          reduce using rule 56 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 160

    (31) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)


state 161

    (32) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)


state 162

    (48) one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN .

    RPAREN          reduce using rule 48 (one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN .)
    AND_KEY         reduce using rule 48 (one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN .)
    LPAREN          reduce using rule 48 (one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN .)
    NAME            reduce using rule 48 (one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN .)
    EQUALS          reduce using rule 48 (one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN .)


state 163

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . one_eff_formula RPAREN
    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (45) one_eff_formula -> . literal
    (46) one_eff_formula -> . AND_KEY formula_lst
    (47) one_eff_formula -> . LPAREN ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> . LPAREN WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    LPAREN          shift and go to state 166
    AND_KEY         shift and go to state 85
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    one_eff_formula                shift and go to state 167
    literal                        shift and go to state 84
    predicate                      shift and go to state 76

state 164

    (38) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 168


state 165

    (39) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 169


state 166

    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN . WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (47) one_eff_formula -> LPAREN . ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> LPAREN . WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> LPAREN . NOT_KEY predicate RPAREN
    (55) predicate -> LPAREN . NAME variables_lst RPAREN
    (56) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> LPAREN . NAME RPAREN

    WHEN_KEY        shift and go to state 170
    ONEOF_KEY       shift and go to state 106
    FORALL_KEY      shift and go to state 108
    NOT_KEY         shift and go to state 109
    NAME            shift and go to state 110
    EQUALS          shift and go to state 111


state 167

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula . RPAREN

    RPAREN          shift and go to state 171


state 168

    (38) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 169

    (39) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 170

    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY . formula one_eff_formula RPAREN RPAREN
    (48) one_eff_formula -> LPAREN WHEN_KEY . formula one_eff_formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 172
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 171

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN .

    RPAREN          reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN .)
    AND_KEY         reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN .)
    LPAREN          reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN .)
    NAME            reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN .)
    EQUALS          reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN .)


state 172

    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula . one_eff_formula RPAREN RPAREN
    (48) one_eff_formula -> LPAREN WHEN_KEY formula . one_eff_formula RPAREN
    (45) one_eff_formula -> . literal
    (46) one_eff_formula -> . AND_KEY formula_lst
    (47) one_eff_formula -> . LPAREN ONEOF_KEY one_eff_formula_lst RPAREN
    (48) one_eff_formula -> . LPAREN WHEN_KEY formula one_eff_formula RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN one_eff_formula RPAREN
    (50) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN
    (53) literal -> . LPAREN NOT_KEY predicate RPAREN
    (54) literal -> . predicate
    (55) predicate -> . LPAREN NAME variables_lst RPAREN
    (56) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (57) predicate -> . LPAREN NAME RPAREN
    (58) predicate -> . NAME variables_lst
    (59) predicate -> . EQUALS VARIABLE VARIABLE
    (60) predicate -> . NAME

    AND_KEY         shift and go to state 85
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    one_eff_formula                shift and go to state 173
    literal                        shift and go to state 84
    predicate                      shift and go to state 76

state 173

    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula . RPAREN RPAREN
    (48) one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula . RPAREN

    RPAREN          shift and go to state 174


state 174

    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN . RPAREN
    (48) one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 175

  ! RPAREN          [ reduce using rule 48 (one_eff_formula -> LPAREN WHEN_KEY formula one_eff_formula RPAREN .) ]


state 175

    (50) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN .

    RPAREN          reduce using rule 50 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN .)
    AND_KEY         reduce using rule 50 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN .)
    LPAREN          reduce using rule 50 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN .)
    NAME            reduce using rule 50 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN .)
    EQUALS          reduce using rule 50 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula one_eff_formula RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 94 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 98 resolved as shift
WARNING: shift/reduce conflict for OR_KEY in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT_KEY in state 98 resolved as shift
WARNING: shift/reduce conflict for IMPLY_KEY in state 98 resolved as shift
WARNING: shift/reduce conflict for EXISTS_KEY in state 98 resolved as shift
WARNING: shift/reduce conflict for FORALL_KEY in state 98 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 98 resolved as shift
WARNING: shift/reduce conflict for NAME in state 98 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 120 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 125 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 149 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 174 resolved as shift
