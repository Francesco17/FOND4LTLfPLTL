Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
Rule 4     domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 5     problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
Rule 6     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 7     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 8     objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 9     init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 10    init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 11    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 12    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 13    require_key_lst -> require_key require_key_lst
Rule 14    require_key_lst -> require_key
Rule 15    require_key -> STRIPS_KEY
Rule 16    require_key -> EQUALITY_KEY
Rule 17    require_key -> TYPING_KEY
Rule 18    require_key -> ADL_KEY
Rule 19    require_key -> ND_KEY
Rule 20    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 21    constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
Rule 22    constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN
Rule 23    names_lst -> NAME names_lst
Rule 24    names_lst -> NAME
Rule 25    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 26    predicate_def_lst -> predicate_def predicate_def_lst
Rule 27    predicate_def_lst -> predicate_def
Rule 28    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 29    predicate_def -> LPAREN NAME RPAREN
Rule 30    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 31    ground_predicates_lst -> ground_predicate
Rule 32    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 33    ground_predicate -> LPAREN NAME RPAREN
Rule 34    constants_lst -> constant constants_lst
Rule 35    constants_lst -> constant
Rule 36    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 37    typed_constants_lst -> constants_lst HYPHEN type
Rule 38    action_def_lst -> action_def action_def_lst
Rule 39    action_def_lst -> action_def
Rule 40    action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN
Rule 41    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 42    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 43    precond_def -> PRECONDITION_KEY LPAREN formula RPAREN
Rule 44    formula -> literal
Rule 45    formula -> AND_KEY formula_lst
Rule 46    formula -> OR_KEY formula_lst
Rule 47    formula -> NOT_KEY formula
Rule 48    formula -> IMPLY_KEY formula formula
Rule 49    formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
Rule 50    formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula
Rule 51    formula -> LPAREN AND_KEY formula_lst RPAREN
Rule 52    formula -> LPAREN OR_KEY formula_lst RPAREN
Rule 53    formula -> LPAREN NOT_KEY formula RPAREN
Rule 54    formula -> LPAREN IMPLY_KEY formula formula RPAREN
Rule 55    formula -> LPAREN literal RPAREN
Rule 56    formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 57    formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 58    formula_lst -> formula formula_lst
Rule 59    formula_lst -> formula
Rule 60    effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN
Rule 61    one_eff_formula -> literal
Rule 62    one_eff_formula -> AND_KEY one_eff_formula_lst
Rule 63    one_eff_formula -> ONEOF_KEY atomic_eff_lst
Rule 64    one_eff_formula -> WHEN_KEY formula atomic_eff
Rule 65    one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN
Rule 66    one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 67    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
Rule 68    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
Rule 69    one_eff_formula_lst -> one_eff_formula one_eff_formula_lst
Rule 70    one_eff_formula_lst -> one_eff_formula
Rule 71    atomic_eff_lst -> atomic_eff atomic_eff_lst
Rule 72    atomic_eff_lst -> atomic_eff
Rule 73    atomic_eff -> literal
Rule 74    atomic_eff -> AND_KEY literal_lst
Rule 75    atomic_eff -> LPAREN AND_KEY literal_lst RPAREN
Rule 76    atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 77    literal_lst -> literal literal_lst
Rule 78    literal_lst -> literal
Rule 79    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 80    literal -> predicate
Rule 81    predicate -> LPAREN NAME variables_lst RPAREN
Rule 82    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 83    predicate -> LPAREN NAME RPAREN
Rule 84    predicate -> NAME variables_lst
Rule 85    predicate -> EQUALS VARIABLE VARIABLE
Rule 86    predicate -> NAME
Rule 87    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 88    typed_variables_lst -> variables_lst HYPHEN type
Rule 89    variables_lst -> VARIABLE variables_lst
Rule 90    variables_lst -> VARIABLE
Rule 91    type -> NAME
Rule 92    constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 40
ADL_KEY              : 18
AND_KEY              : 9 11 45 51 62 74 75
CONSTANTS_KEY        : 21 22
DEFINE_KEY           : 3 4 5
DOMAIN_KEY           : 6
EFFECT_KEY           : 60
EQUALITY_KEY         : 16
EQUALS               : 82 85
EXISTS_KEY           : 49 56
FORALL_KEY           : 50 57 67 68
GOAL_KEY             : 11
HYPHEN               : 36 37 87 88
IMPLY_KEY            : 48 54
INIT_KEY             : 9 10
LPAREN               : 3 4 5 6 7 8 9 9 10 11 11 12 20 21 22 25 28 29 32 33 40 41 42 43 49 50 51 52 53 54 55 56 56 57 57 60 65 66 67 67 68 68 68 75 76 79 81 82 83
NAME                 : 6 7 23 24 28 29 32 33 40 81 83 84 86 91 92
ND_KEY               : 19
NOT_KEY              : 47 53 79
OBJECTS_KEY          : 8
ONEOF_KEY            : 63 65
OR_KEY               : 46 52
PARAMETERS_KEY       : 41 42
PRECONDITION_KEY     : 43
PREDICATES_KEY       : 25
PROBLEM_KEY          : 7
REQUIREMENTS_KEY     : 12
RPAREN               : 3 4 5 6 7 8 9 9 10 11 11 12 20 21 22 25 28 29 32 33 40 41 42 43 49 50 51 52 53 54 55 56 56 57 57 60 65 66 67 67 68 68 68 75 76 79 81 82 83
STRIPS_KEY           : 15
TYPES_KEY            : 20
TYPING_KEY           : 17
VARIABLE             : 82 82 85 85 89 90
WHEN_KEY             : 64 66 68 76
error                : 

Nonterminals, with rules where they appear

action_def           : 38 39
action_def_lst       : 3 4 38
atomic_eff           : 64 66 67 68 71 72 76
atomic_eff_lst       : 63 65 71
constant             : 34 35
constants_def        : 3
constants_lst        : 32 34 36 37
domain               : 1
domain_def           : 3 4 5
effects_def          : 40
formula              : 43 47 48 48 49 50 53 54 54 56 57 58 59 64 66 68 76
formula_lst          : 45 46 51 52 58
goal_def             : 5
ground_predicate     : 30 31
ground_predicates_lst : 9 10 11 30
init_def             : 5
literal              : 44 55 61 73 77 78
literal_lst          : 74 75 77
names_lst            : 20 22 23
objects_def          : 5
one_eff_formula      : 60 69 70
one_eff_formula_lst  : 62 69
parameters_def       : 40
pddl                 : 0
precond_def          : 40
predicate            : 79 80
predicate_def        : 26 27
predicate_def_lst    : 25 26
predicates_def       : 3 4
problem              : 2
problem_def          : 5
require_def          : 3 4
require_key          : 13 14
require_key_lst      : 12 13
type                 : 36 37 87 88
typed_constants_lst  : 8 21 36
typed_variables_lst  : 28 41 49 50 56 57 67 68 87
types_def            : 3 4
variables_lst        : 81 84 87 88 89

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (3) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) problem -> . LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN

    LPAREN          shift and go to state 4

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 3

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 4

    (3) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) problem -> LPAREN . DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 5

    (3) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) problem -> LPAREN DEFINE_KEY . problem_def domain_def objects_def init_def goal_def RPAREN
    (6) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (7) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (6) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (7) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (3) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (12) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 11

    require_def                    shift and go to state 12

state 8

    (5) problem -> LPAREN DEFINE_KEY problem_def . domain_def objects_def init_def goal_def RPAREN
    (6) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 13

    domain_def                     shift and go to state 14

state 9

    (6) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 15


state 10

    (7) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 16


state 11

    (12) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 17


state 12

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (20) types_def -> . LPAREN TYPES_KEY names_lst RPAREN

    LPAREN          shift and go to state 18

    types_def                      shift and go to state 19

state 13

    (6) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9


state 14

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def . objects_def init_def goal_def RPAREN
    (8) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN

    LPAREN          shift and go to state 20

    objects_def                    shift and go to state 21

state 15

    (6) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 22


state 16

    (7) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 23


state 17

    (12) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (13) require_key_lst -> . require_key require_key_lst
    (14) require_key_lst -> . require_key
    (15) require_key -> . STRIPS_KEY
    (16) require_key -> . EQUALITY_KEY
    (17) require_key -> . TYPING_KEY
    (18) require_key -> . ADL_KEY
    (19) require_key -> . ND_KEY

    STRIPS_KEY      shift and go to state 26
    EQUALITY_KEY    shift and go to state 27
    TYPING_KEY      shift and go to state 28
    ADL_KEY         shift and go to state 29
    ND_KEY          shift and go to state 30

    require_key_lst                shift and go to state 24
    require_key                    shift and go to state 25

state 18

    (20) types_def -> LPAREN . TYPES_KEY names_lst RPAREN

    TYPES_KEY       shift and go to state 31


state 19

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (21) constants_def -> . LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
    (22) constants_def -> . LPAREN CONSTANTS_KEY names_lst RPAREN
    (25) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 32

    constants_def                  shift and go to state 33
    predicates_def                 shift and go to state 34

state 20

    (8) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN

    OBJECTS_KEY     shift and go to state 35


state 21

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def . init_def goal_def RPAREN
    (9) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (10) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 36

    init_def                       shift and go to state 37

state 22

    (6) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 6 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 23

    (7) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 7 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 24

    (12) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 38


state 25

    (13) require_key_lst -> require_key . require_key_lst
    (14) require_key_lst -> require_key .
    (13) require_key_lst -> . require_key require_key_lst
    (14) require_key_lst -> . require_key
    (15) require_key -> . STRIPS_KEY
    (16) require_key -> . EQUALITY_KEY
    (17) require_key -> . TYPING_KEY
    (18) require_key -> . ADL_KEY
    (19) require_key -> . ND_KEY

    RPAREN          reduce using rule 14 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 26
    EQUALITY_KEY    shift and go to state 27
    TYPING_KEY      shift and go to state 28
    ADL_KEY         shift and go to state 29
    ND_KEY          shift and go to state 30

    require_key                    shift and go to state 25
    require_key_lst                shift and go to state 39

state 26

    (15) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 15 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 15 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 15 (require_key -> STRIPS_KEY .)
    ADL_KEY         reduce using rule 15 (require_key -> STRIPS_KEY .)
    ND_KEY          reduce using rule 15 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 15 (require_key -> STRIPS_KEY .)


state 27

    (16) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 16 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 16 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 16 (require_key -> EQUALITY_KEY .)
    ADL_KEY         reduce using rule 16 (require_key -> EQUALITY_KEY .)
    ND_KEY          reduce using rule 16 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 16 (require_key -> EQUALITY_KEY .)


state 28

    (17) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 17 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 17 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 17 (require_key -> TYPING_KEY .)
    ADL_KEY         reduce using rule 17 (require_key -> TYPING_KEY .)
    ND_KEY          reduce using rule 17 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 17 (require_key -> TYPING_KEY .)


state 29

    (18) require_key -> ADL_KEY .

    STRIPS_KEY      reduce using rule 18 (require_key -> ADL_KEY .)
    EQUALITY_KEY    reduce using rule 18 (require_key -> ADL_KEY .)
    TYPING_KEY      reduce using rule 18 (require_key -> ADL_KEY .)
    ADL_KEY         reduce using rule 18 (require_key -> ADL_KEY .)
    ND_KEY          reduce using rule 18 (require_key -> ADL_KEY .)
    RPAREN          reduce using rule 18 (require_key -> ADL_KEY .)


state 30

    (19) require_key -> ND_KEY .

    STRIPS_KEY      reduce using rule 19 (require_key -> ND_KEY .)
    EQUALITY_KEY    reduce using rule 19 (require_key -> ND_KEY .)
    TYPING_KEY      reduce using rule 19 (require_key -> ND_KEY .)
    ADL_KEY         reduce using rule 19 (require_key -> ND_KEY .)
    ND_KEY          reduce using rule 19 (require_key -> ND_KEY .)
    RPAREN          reduce using rule 19 (require_key -> ND_KEY .)


state 31

    (20) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (23) names_lst -> . NAME names_lst
    (24) names_lst -> . NAME

    NAME            shift and go to state 41

    names_lst                      shift and go to state 40

state 32

    (21) constants_def -> LPAREN . CONSTANTS_KEY typed_constants_lst RPAREN
    (22) constants_def -> LPAREN . CONSTANTS_KEY names_lst RPAREN
    (25) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    CONSTANTS_KEY   shift and go to state 42
    PREDICATES_KEY  shift and go to state 43


state 33

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def . predicates_def action_def_lst RPAREN
    (25) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 44

    predicates_def                 shift and go to state 45

state 34

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (38) action_def_lst -> . action_def action_def_lst
    (39) action_def_lst -> . action_def
    (40) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 46

    action_def_lst                 shift and go to state 47
    action_def                     shift and go to state 48

state 35

    (8) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (36) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (37) typed_constants_lst -> . constants_lst HYPHEN type
    (34) constants_lst -> . constant constants_lst
    (35) constants_lst -> . constant
    (92) constant -> . NAME

    NAME            shift and go to state 52

    typed_constants_lst            shift and go to state 49
    constants_lst                  shift and go to state 50
    constant                       shift and go to state 51

state 36

    (9) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (10) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    INIT_KEY        shift and go to state 53


state 37

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def . goal_def RPAREN
    (11) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 54

    goal_def                       shift and go to state 55

state 38

    (12) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 12 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 39

    (13) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 13 (require_key_lst -> require_key require_key_lst .)


state 40

    (20) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 56


state 41

    (23) names_lst -> NAME . names_lst
    (24) names_lst -> NAME .
    (23) names_lst -> . NAME names_lst
    (24) names_lst -> . NAME

    RPAREN          reduce using rule 24 (names_lst -> NAME .)
    NAME            shift and go to state 41

    names_lst                      shift and go to state 57

state 42

    (21) constants_def -> LPAREN CONSTANTS_KEY . typed_constants_lst RPAREN
    (22) constants_def -> LPAREN CONSTANTS_KEY . names_lst RPAREN
    (36) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (37) typed_constants_lst -> . constants_lst HYPHEN type
    (23) names_lst -> . NAME names_lst
    (24) names_lst -> . NAME
    (34) constants_lst -> . constant constants_lst
    (35) constants_lst -> . constant
    (92) constant -> . NAME

    NAME            shift and go to state 60

    typed_constants_lst            shift and go to state 58
    names_lst                      shift and go to state 59
    constants_lst                  shift and go to state 50
    constant                       shift and go to state 51

state 43

    (25) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (26) predicate_def_lst -> . predicate_def predicate_def_lst
    (27) predicate_def_lst -> . predicate_def
    (28) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (29) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 61

    predicate_def_lst              shift and go to state 62
    predicate_def                  shift and go to state 63

state 44

    (25) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 43


state 45

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def . action_def_lst RPAREN
    (38) action_def_lst -> . action_def action_def_lst
    (39) action_def_lst -> . action_def
    (40) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 46

    action_def_lst                 shift and go to state 64
    action_def                     shift and go to state 48

state 46

    (40) action_def -> LPAREN . ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    ACTION_KEY      shift and go to state 65


state 47

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 66


state 48

    (38) action_def_lst -> action_def . action_def_lst
    (39) action_def_lst -> action_def .
    (38) action_def_lst -> . action_def action_def_lst
    (39) action_def_lst -> . action_def
    (40) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    RPAREN          reduce using rule 39 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 46

    action_def                     shift and go to state 48
    action_def_lst                 shift and go to state 67

state 49

    (8) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 68


state 50

    (36) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (37) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 69


state 51

    (34) constants_lst -> constant . constants_lst
    (35) constants_lst -> constant .
    (34) constants_lst -> . constant constants_lst
    (35) constants_lst -> . constant
    (92) constant -> . NAME

    HYPHEN          reduce using rule 35 (constants_lst -> constant .)
    RPAREN          reduce using rule 35 (constants_lst -> constant .)
    NAME            shift and go to state 52

    constant                       shift and go to state 51
    constants_lst                  shift and go to state 70

state 52

    (92) constant -> NAME .

    NAME            reduce using rule 92 (constant -> NAME .)
    HYPHEN          reduce using rule 92 (constant -> NAME .)
    RPAREN          reduce using rule 92 (constant -> NAME .)


state 53

    (9) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (10) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (30) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (31) ground_predicates_lst -> . ground_predicate
    (32) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (33) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 71

    ground_predicates_lst          shift and go to state 72
    ground_predicate               shift and go to state 73

state 54

    (11) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    GOAL_KEY        shift and go to state 74


state 55

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 75


state 56

    (20) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 20 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 57

    (23) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 23 (names_lst -> NAME names_lst .)


state 58

    (21) constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 76


state 59

    (22) constants_def -> LPAREN CONSTANTS_KEY names_lst . RPAREN

    RPAREN          shift and go to state 77


state 60

    (23) names_lst -> NAME . names_lst
    (24) names_lst -> NAME .
    (92) constant -> NAME .
    (23) names_lst -> . NAME names_lst
    (24) names_lst -> . NAME

  ! shift/reduce conflict for NAME resolved as shift
    RPAREN          reduce using rule 24 (names_lst -> NAME .)
    HYPHEN          reduce using rule 92 (constant -> NAME .)
    NAME            shift and go to state 41

  ! NAME            [ reduce using rule 92 (constant -> NAME .) ]

    names_lst                      shift and go to state 57

state 61

    (28) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (29) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 78


state 62

    (25) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 79


state 63

    (26) predicate_def_lst -> predicate_def . predicate_def_lst
    (27) predicate_def_lst -> predicate_def .
    (26) predicate_def_lst -> . predicate_def predicate_def_lst
    (27) predicate_def_lst -> . predicate_def
    (28) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (29) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 27 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 61

    predicate_def                  shift and go to state 63
    predicate_def_lst              shift and go to state 80

state 64

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 81


state 65

    (40) action_def -> LPAREN ACTION_KEY . NAME parameters_def precond_def effects_def RPAREN

    NAME            shift and go to state 82


state 66

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 4 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 67

    (38) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 38 (action_def_lst -> action_def action_def_lst .)


state 68

    (8) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 8 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 69

    (36) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (37) typed_constants_lst -> constants_lst HYPHEN . type
    (91) type -> . NAME

    NAME            shift and go to state 84

    type                           shift and go to state 83

state 70

    (34) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 34 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 34 (constants_lst -> constant constants_lst .)


state 71

    (9) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (32) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (33) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 85
    NAME            shift and go to state 86


state 72

    (10) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 87


state 73

    (30) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (31) ground_predicates_lst -> ground_predicate .
    (30) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (31) ground_predicates_lst -> . ground_predicate
    (32) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (33) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 31 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 89

    ground_predicate               shift and go to state 73
    ground_predicates_lst          shift and go to state 88

state 74

    (11) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 90


state 75

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .

    $end            reduce using rule 5 (problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .)


state 76

    (21) constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 21 (constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .)


state 77

    (22) constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN .

    LPAREN          reduce using rule 22 (constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN .)


state 78

    (28) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (29) predicate_def -> LPAREN NAME . RPAREN
    (87) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> . variables_lst HYPHEN type
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 92
    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 91
    variables_lst                  shift and go to state 93

state 79

    (25) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 25 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 80

    (26) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 26 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 81

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 3 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN .)


state 82

    (40) action_def -> LPAREN ACTION_KEY NAME . parameters_def precond_def effects_def RPAREN
    (41) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (42) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 96

    parameters_def                 shift and go to state 95

state 83

    (36) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (37) typed_constants_lst -> constants_lst HYPHEN type .
    (36) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (37) typed_constants_lst -> . constants_lst HYPHEN type
    (34) constants_lst -> . constant constants_lst
    (35) constants_lst -> . constant
    (92) constant -> . NAME

    RPAREN          reduce using rule 37 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 52

    constants_lst                  shift and go to state 50
    typed_constants_lst            shift and go to state 97
    constant                       shift and go to state 51

state 84

    (91) type -> NAME .

    NAME            reduce using rule 91 (type -> NAME .)
    RPAREN          reduce using rule 91 (type -> NAME .)
    VARIABLE        reduce using rule 91 (type -> NAME .)


state 85

    (9) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (30) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (31) ground_predicates_lst -> . ground_predicate
    (32) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (33) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 89

    ground_predicates_lst          shift and go to state 98
    ground_predicate               shift and go to state 73

state 86

    (32) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (33) ground_predicate -> LPAREN NAME . RPAREN
    (34) constants_lst -> . constant constants_lst
    (35) constants_lst -> . constant
    (92) constant -> . NAME

    RPAREN          shift and go to state 100
    NAME            shift and go to state 52

    constants_lst                  shift and go to state 99
    constant                       shift and go to state 51

state 87

    (10) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 10 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 88

    (30) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 30 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 89

    (32) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (33) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 86


state 90

    (11) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN

    AND_KEY         shift and go to state 101


state 91

    (28) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 102


state 92

    (29) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 29 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 29 (predicate_def -> LPAREN NAME RPAREN .)


state 93

    (87) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 103


state 94

    (89) variables_lst -> VARIABLE . variables_lst
    (90) variables_lst -> VARIABLE .
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 90 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 90 (variables_lst -> VARIABLE .)
    AND_KEY         reduce using rule 90 (variables_lst -> VARIABLE .)
    OR_KEY          reduce using rule 90 (variables_lst -> VARIABLE .)
    NOT_KEY         reduce using rule 90 (variables_lst -> VARIABLE .)
    IMPLY_KEY       reduce using rule 90 (variables_lst -> VARIABLE .)
    EXISTS_KEY      reduce using rule 90 (variables_lst -> VARIABLE .)
    FORALL_KEY      reduce using rule 90 (variables_lst -> VARIABLE .)
    LPAREN          reduce using rule 90 (variables_lst -> VARIABLE .)
    NAME            reduce using rule 90 (variables_lst -> VARIABLE .)
    EQUALS          reduce using rule 90 (variables_lst -> VARIABLE .)
    ONEOF_KEY       reduce using rule 90 (variables_lst -> VARIABLE .)
    WHEN_KEY        reduce using rule 90 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 94

    variables_lst                  shift and go to state 104

state 95

    (40) action_def -> LPAREN ACTION_KEY NAME parameters_def . precond_def effects_def RPAREN
    (43) precond_def -> . PRECONDITION_KEY LPAREN formula RPAREN

    PRECONDITION_KEY shift and go to state 106

    precond_def                    shift and go to state 105

state 96

    (41) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (42) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 107


state 97

    (36) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 36 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 98

    (9) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 108


state 99

    (32) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 109


state 100

    (33) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 33 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 33 (ground_predicate -> LPAREN NAME RPAREN .)


state 101

    (11) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (30) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (31) ground_predicates_lst -> . ground_predicate
    (32) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (33) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 89

    ground_predicates_lst          shift and go to state 110
    ground_predicate               shift and go to state 73

state 102

    (28) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 28 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 28 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 103

    (87) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (88) typed_variables_lst -> variables_lst HYPHEN . type
    (91) type -> . NAME

    NAME            shift and go to state 84

    type                           shift and go to state 111

state 104

    (89) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    AND_KEY         reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    OR_KEY          reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    NOT_KEY         reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    IMPLY_KEY       reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    EXISTS_KEY      reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    FORALL_KEY      reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    LPAREN          reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    NAME            reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    EQUALS          reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    ONEOF_KEY       reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)
    WHEN_KEY        reduce using rule 89 (variables_lst -> VARIABLE variables_lst .)


state 105

    (40) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def . effects_def RPAREN
    (60) effects_def -> . EFFECT_KEY LPAREN one_eff_formula RPAREN

    EFFECT_KEY      shift and go to state 113

    effects_def                    shift and go to state 112

state 106

    (43) precond_def -> PRECONDITION_KEY . LPAREN formula RPAREN

    LPAREN          shift and go to state 114


state 107

    (41) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (42) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (87) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> . variables_lst HYPHEN type
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 116
    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 115
    variables_lst                  shift and go to state 93

state 108

    (9) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 117


state 109

    (32) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 32 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 32 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 110

    (11) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 118


state 111

    (87) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (88) typed_variables_lst -> variables_lst HYPHEN type .
    (87) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> . variables_lst HYPHEN type
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 88 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 94

    variables_lst                  shift and go to state 93
    typed_variables_lst            shift and go to state 119

state 112

    (40) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def . RPAREN

    RPAREN          shift and go to state 120


state 113

    (60) effects_def -> EFFECT_KEY . LPAREN one_eff_formula RPAREN

    LPAREN          shift and go to state 121


state 114

    (43) precond_def -> PRECONDITION_KEY LPAREN . formula RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 123
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 115

    (41) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 134


state 116

    (42) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 42 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 117

    (9) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 9 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 118

    (11) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 135


state 119

    (87) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 87 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 120

    (40) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .

    LPAREN          reduce using rule 40 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)
    RPAREN          reduce using rule 40 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)


state 121

    (60) effects_def -> EFFECT_KEY LPAREN . one_eff_formula RPAREN
    (61) one_eff_formula -> . literal
    (62) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (63) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (64) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (65) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (66) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (67) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (68) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 139
    ONEOF_KEY       shift and go to state 140
    WHEN_KEY        shift and go to state 141
    LPAREN          shift and go to state 136
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    one_eff_formula                shift and go to state 137
    literal                        shift and go to state 138
    predicate                      shift and go to state 131

state 122

    (51) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (52) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (53) formula -> LPAREN . NOT_KEY formula RPAREN
    (54) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (55) formula -> LPAREN . literal RPAREN
    (56) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> LPAREN . NOT_KEY predicate RPAREN
    (81) predicate -> LPAREN . NAME variables_lst RPAREN
    (82) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> LPAREN . NAME RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 143
    OR_KEY          shift and go to state 144
    NOT_KEY         shift and go to state 145
    IMPLY_KEY       shift and go to state 146
    EXISTS_KEY      shift and go to state 148
    FORALL_KEY      shift and go to state 149
    NAME            shift and go to state 150
    EQUALS          shift and go to state 151
    LPAREN          shift and go to state 142

    literal                        shift and go to state 147
    predicate                      shift and go to state 131

state 123

    (43) precond_def -> PRECONDITION_KEY LPAREN formula . RPAREN

    RPAREN          shift and go to state 152


state 124

    (44) formula -> literal .

    RPAREN          reduce using rule 44 (formula -> literal .)
    AND_KEY         reduce using rule 44 (formula -> literal .)
    OR_KEY          reduce using rule 44 (formula -> literal .)
    NOT_KEY         reduce using rule 44 (formula -> literal .)
    IMPLY_KEY       reduce using rule 44 (formula -> literal .)
    EXISTS_KEY      reduce using rule 44 (formula -> literal .)
    FORALL_KEY      reduce using rule 44 (formula -> literal .)
    LPAREN          reduce using rule 44 (formula -> literal .)
    NAME            reduce using rule 44 (formula -> literal .)
    EQUALS          reduce using rule 44 (formula -> literal .)


state 125

    (45) formula -> AND_KEY . formula_lst
    (58) formula_lst -> . formula formula_lst
    (59) formula_lst -> . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula_lst                    shift and go to state 153
    formula                        shift and go to state 154
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 126

    (46) formula -> OR_KEY . formula_lst
    (58) formula_lst -> . formula formula_lst
    (59) formula_lst -> . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula_lst                    shift and go to state 155
    formula                        shift and go to state 154
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 127

    (47) formula -> NOT_KEY . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 156
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 128

    (48) formula -> IMPLY_KEY . formula formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 157
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 129

    (49) formula -> EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 158


state 130

    (50) formula -> FORALL_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 159


state 131

    (80) literal -> predicate .

    RPAREN          reduce using rule 80 (literal -> predicate .)
    AND_KEY         reduce using rule 80 (literal -> predicate .)
    OR_KEY          reduce using rule 80 (literal -> predicate .)
    NOT_KEY         reduce using rule 80 (literal -> predicate .)
    IMPLY_KEY       reduce using rule 80 (literal -> predicate .)
    EXISTS_KEY      reduce using rule 80 (literal -> predicate .)
    FORALL_KEY      reduce using rule 80 (literal -> predicate .)
    LPAREN          reduce using rule 80 (literal -> predicate .)
    NAME            reduce using rule 80 (literal -> predicate .)
    EQUALS          reduce using rule 80 (literal -> predicate .)
    ONEOF_KEY       reduce using rule 80 (literal -> predicate .)
    WHEN_KEY        reduce using rule 80 (literal -> predicate .)


state 132

    (84) predicate -> NAME . variables_lst
    (86) predicate -> NAME .
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 86 (predicate -> NAME .)
    AND_KEY         reduce using rule 86 (predicate -> NAME .)
    OR_KEY          reduce using rule 86 (predicate -> NAME .)
    NOT_KEY         reduce using rule 86 (predicate -> NAME .)
    IMPLY_KEY       reduce using rule 86 (predicate -> NAME .)
    EXISTS_KEY      reduce using rule 86 (predicate -> NAME .)
    FORALL_KEY      reduce using rule 86 (predicate -> NAME .)
    LPAREN          reduce using rule 86 (predicate -> NAME .)
    NAME            reduce using rule 86 (predicate -> NAME .)
    EQUALS          reduce using rule 86 (predicate -> NAME .)
    ONEOF_KEY       reduce using rule 86 (predicate -> NAME .)
    WHEN_KEY        reduce using rule 86 (predicate -> NAME .)
    VARIABLE        shift and go to state 94

    variables_lst                  shift and go to state 160

state 133

    (85) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 161


state 134

    (41) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 41 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 135

    (11) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 11 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 136

    (65) one_eff_formula -> LPAREN . ONEOF_KEY atomic_eff_lst RPAREN
    (66) one_eff_formula -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (67) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (68) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (79) literal -> LPAREN . NOT_KEY predicate RPAREN
    (81) predicate -> LPAREN . NAME variables_lst RPAREN
    (82) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> LPAREN . NAME RPAREN

    ONEOF_KEY       shift and go to state 162
    WHEN_KEY        shift and go to state 163
    FORALL_KEY      shift and go to state 164
    NOT_KEY         shift and go to state 165
    NAME            shift and go to state 166
    EQUALS          shift and go to state 167


state 137

    (60) effects_def -> EFFECT_KEY LPAREN one_eff_formula . RPAREN

    RPAREN          shift and go to state 168


state 138

    (61) one_eff_formula -> literal .

    RPAREN          reduce using rule 61 (one_eff_formula -> literal .)
    AND_KEY         reduce using rule 61 (one_eff_formula -> literal .)
    ONEOF_KEY       reduce using rule 61 (one_eff_formula -> literal .)
    WHEN_KEY        reduce using rule 61 (one_eff_formula -> literal .)
    LPAREN          reduce using rule 61 (one_eff_formula -> literal .)
    NAME            reduce using rule 61 (one_eff_formula -> literal .)
    EQUALS          reduce using rule 61 (one_eff_formula -> literal .)


state 139

    (62) one_eff_formula -> AND_KEY . one_eff_formula_lst
    (69) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (70) one_eff_formula_lst -> . one_eff_formula
    (61) one_eff_formula -> . literal
    (62) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (63) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (64) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (65) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (66) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (67) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (68) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 139
    ONEOF_KEY       shift and go to state 140
    WHEN_KEY        shift and go to state 141
    LPAREN          shift and go to state 136
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    one_eff_formula_lst            shift and go to state 169
    one_eff_formula                shift and go to state 170
    literal                        shift and go to state 138
    predicate                      shift and go to state 131

state 140

    (63) one_eff_formula -> ONEOF_KEY . atomic_eff_lst
    (71) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (72) atomic_eff_lst -> . atomic_eff
    (73) atomic_eff -> . literal
    (74) atomic_eff -> . AND_KEY literal_lst
    (75) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (76) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 174
    LPAREN          shift and go to state 175
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    atomic_eff_lst                 shift and go to state 171
    atomic_eff                     shift and go to state 172
    literal                        shift and go to state 173
    predicate                      shift and go to state 131

state 141

    (64) one_eff_formula -> WHEN_KEY . formula atomic_eff
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 176
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 142

    (79) literal -> LPAREN . NOT_KEY predicate RPAREN
    (81) predicate -> LPAREN . NAME variables_lst RPAREN
    (82) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 165
    NAME            shift and go to state 166
    EQUALS          shift and go to state 167


state 143

    (51) formula -> LPAREN AND_KEY . formula_lst RPAREN
    (58) formula_lst -> . formula formula_lst
    (59) formula_lst -> . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula_lst                    shift and go to state 177
    formula                        shift and go to state 154
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 144

    (52) formula -> LPAREN OR_KEY . formula_lst RPAREN
    (58) formula_lst -> . formula formula_lst
    (59) formula_lst -> . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula_lst                    shift and go to state 178
    formula                        shift and go to state 154
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 145

    (53) formula -> LPAREN NOT_KEY . formula RPAREN
    (79) literal -> LPAREN NOT_KEY . predicate RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 179
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 180
    predicate                      shift and go to state 181
    literal                        shift and go to state 124

state 146

    (54) formula -> LPAREN IMPLY_KEY . formula formula RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 182
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 147

    (55) formula -> LPAREN literal . RPAREN

    RPAREN          shift and go to state 183


state 148

    (56) formula -> LPAREN EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 184


state 149

    (57) formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 185


state 150

    (81) predicate -> LPAREN NAME . variables_lst RPAREN
    (83) predicate -> LPAREN NAME . RPAREN
    (84) predicate -> NAME . variables_lst
    (86) predicate -> NAME .
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 187
    VARIABLE        shift and go to state 94

  ! RPAREN          [ reduce using rule 86 (predicate -> NAME .) ]

    variables_lst                  shift and go to state 186

state 151

    (82) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN
    (85) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 188


state 152

    (43) precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .

    EFFECT_KEY      reduce using rule 43 (precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .)


state 153

    (45) formula -> AND_KEY formula_lst .

    RPAREN          reduce using rule 45 (formula -> AND_KEY formula_lst .)
    AND_KEY         reduce using rule 45 (formula -> AND_KEY formula_lst .)
    OR_KEY          reduce using rule 45 (formula -> AND_KEY formula_lst .)
    NOT_KEY         reduce using rule 45 (formula -> AND_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 45 (formula -> AND_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 45 (formula -> AND_KEY formula_lst .)
    FORALL_KEY      reduce using rule 45 (formula -> AND_KEY formula_lst .)
    LPAREN          reduce using rule 45 (formula -> AND_KEY formula_lst .)
    NAME            reduce using rule 45 (formula -> AND_KEY formula_lst .)
    EQUALS          reduce using rule 45 (formula -> AND_KEY formula_lst .)


state 154

    (58) formula_lst -> formula . formula_lst
    (59) formula_lst -> formula .
    (58) formula_lst -> . formula formula_lst
    (59) formula_lst -> . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for OR_KEY resolved as shift
  ! shift/reduce conflict for NOT_KEY resolved as shift
  ! shift/reduce conflict for IMPLY_KEY resolved as shift
  ! shift/reduce conflict for EXISTS_KEY resolved as shift
  ! shift/reduce conflict for FORALL_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 59 (formula_lst -> formula .)
    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

  ! AND_KEY         [ reduce using rule 59 (formula_lst -> formula .) ]
  ! OR_KEY          [ reduce using rule 59 (formula_lst -> formula .) ]
  ! NOT_KEY         [ reduce using rule 59 (formula_lst -> formula .) ]
  ! IMPLY_KEY       [ reduce using rule 59 (formula_lst -> formula .) ]
  ! EXISTS_KEY      [ reduce using rule 59 (formula_lst -> formula .) ]
  ! FORALL_KEY      [ reduce using rule 59 (formula_lst -> formula .) ]
  ! LPAREN          [ reduce using rule 59 (formula_lst -> formula .) ]
  ! NAME            [ reduce using rule 59 (formula_lst -> formula .) ]
  ! EQUALS          [ reduce using rule 59 (formula_lst -> formula .) ]

    formula                        shift and go to state 154
    formula_lst                    shift and go to state 189
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 155

    (46) formula -> OR_KEY formula_lst .

    RPAREN          reduce using rule 46 (formula -> OR_KEY formula_lst .)
    AND_KEY         reduce using rule 46 (formula -> OR_KEY formula_lst .)
    OR_KEY          reduce using rule 46 (formula -> OR_KEY formula_lst .)
    NOT_KEY         reduce using rule 46 (formula -> OR_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 46 (formula -> OR_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 46 (formula -> OR_KEY formula_lst .)
    FORALL_KEY      reduce using rule 46 (formula -> OR_KEY formula_lst .)
    LPAREN          reduce using rule 46 (formula -> OR_KEY formula_lst .)
    NAME            reduce using rule 46 (formula -> OR_KEY formula_lst .)
    EQUALS          reduce using rule 46 (formula -> OR_KEY formula_lst .)


state 156

    (47) formula -> NOT_KEY formula .

    RPAREN          reduce using rule 47 (formula -> NOT_KEY formula .)
    AND_KEY         reduce using rule 47 (formula -> NOT_KEY formula .)
    OR_KEY          reduce using rule 47 (formula -> NOT_KEY formula .)
    NOT_KEY         reduce using rule 47 (formula -> NOT_KEY formula .)
    IMPLY_KEY       reduce using rule 47 (formula -> NOT_KEY formula .)
    EXISTS_KEY      reduce using rule 47 (formula -> NOT_KEY formula .)
    FORALL_KEY      reduce using rule 47 (formula -> NOT_KEY formula .)
    LPAREN          reduce using rule 47 (formula -> NOT_KEY formula .)
    NAME            reduce using rule 47 (formula -> NOT_KEY formula .)
    EQUALS          reduce using rule 47 (formula -> NOT_KEY formula .)


state 157

    (48) formula -> IMPLY_KEY formula . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 190
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 158

    (49) formula -> EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula
    (87) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> . variables_lst HYPHEN type
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 191
    variables_lst                  shift and go to state 93

state 159

    (50) formula -> FORALL_KEY LPAREN . typed_variables_lst RPAREN formula
    (87) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> . variables_lst HYPHEN type
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 192
    variables_lst                  shift and go to state 93

state 160

    (84) predicate -> NAME variables_lst .

    RPAREN          reduce using rule 84 (predicate -> NAME variables_lst .)
    AND_KEY         reduce using rule 84 (predicate -> NAME variables_lst .)
    OR_KEY          reduce using rule 84 (predicate -> NAME variables_lst .)
    NOT_KEY         reduce using rule 84 (predicate -> NAME variables_lst .)
    IMPLY_KEY       reduce using rule 84 (predicate -> NAME variables_lst .)
    EXISTS_KEY      reduce using rule 84 (predicate -> NAME variables_lst .)
    FORALL_KEY      reduce using rule 84 (predicate -> NAME variables_lst .)
    LPAREN          reduce using rule 84 (predicate -> NAME variables_lst .)
    NAME            reduce using rule 84 (predicate -> NAME variables_lst .)
    EQUALS          reduce using rule 84 (predicate -> NAME variables_lst .)
    ONEOF_KEY       reduce using rule 84 (predicate -> NAME variables_lst .)
    WHEN_KEY        reduce using rule 84 (predicate -> NAME variables_lst .)


state 161

    (85) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 193


state 162

    (65) one_eff_formula -> LPAREN ONEOF_KEY . atomic_eff_lst RPAREN
    (71) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (72) atomic_eff_lst -> . atomic_eff
    (73) atomic_eff -> . literal
    (74) atomic_eff -> . AND_KEY literal_lst
    (75) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (76) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 174
    LPAREN          shift and go to state 175
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    atomic_eff_lst                 shift and go to state 194
    atomic_eff                     shift and go to state 172
    literal                        shift and go to state 173
    predicate                      shift and go to state 131

state 163

    (66) one_eff_formula -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 195
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 164

    (67) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (68) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    LPAREN          shift and go to state 196


state 165

    (79) literal -> LPAREN NOT_KEY . predicate RPAREN
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    LPAREN          shift and go to state 197
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    predicate                      shift and go to state 198

state 166

    (81) predicate -> LPAREN NAME . variables_lst RPAREN
    (83) predicate -> LPAREN NAME . RPAREN
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 187
    VARIABLE        shift and go to state 94

    variables_lst                  shift and go to state 199

state 167

    (82) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 200


state 168

    (60) effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .

    RPAREN          reduce using rule 60 (effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .)


state 169

    (62) one_eff_formula -> AND_KEY one_eff_formula_lst .

    RPAREN          reduce using rule 62 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    AND_KEY         reduce using rule 62 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 62 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    WHEN_KEY        reduce using rule 62 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    LPAREN          reduce using rule 62 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    NAME            reduce using rule 62 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    EQUALS          reduce using rule 62 (one_eff_formula -> AND_KEY one_eff_formula_lst .)


state 170

    (69) one_eff_formula_lst -> one_eff_formula . one_eff_formula_lst
    (70) one_eff_formula_lst -> one_eff_formula .
    (69) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (70) one_eff_formula_lst -> . one_eff_formula
    (61) one_eff_formula -> . literal
    (62) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (63) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (64) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (65) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (66) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (67) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (68) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for ONEOF_KEY resolved as shift
  ! shift/reduce conflict for WHEN_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 70 (one_eff_formula_lst -> one_eff_formula .)
    AND_KEY         shift and go to state 139
    ONEOF_KEY       shift and go to state 140
    WHEN_KEY        shift and go to state 141
    LPAREN          shift and go to state 136
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

  ! AND_KEY         [ reduce using rule 70 (one_eff_formula_lst -> one_eff_formula .) ]
  ! ONEOF_KEY       [ reduce using rule 70 (one_eff_formula_lst -> one_eff_formula .) ]
  ! WHEN_KEY        [ reduce using rule 70 (one_eff_formula_lst -> one_eff_formula .) ]
  ! LPAREN          [ reduce using rule 70 (one_eff_formula_lst -> one_eff_formula .) ]
  ! NAME            [ reduce using rule 70 (one_eff_formula_lst -> one_eff_formula .) ]
  ! EQUALS          [ reduce using rule 70 (one_eff_formula_lst -> one_eff_formula .) ]

    one_eff_formula                shift and go to state 170
    one_eff_formula_lst            shift and go to state 201
    literal                        shift and go to state 138
    predicate                      shift and go to state 131

state 171

    (63) one_eff_formula -> ONEOF_KEY atomic_eff_lst .

    RPAREN          reduce using rule 63 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    AND_KEY         reduce using rule 63 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 63 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    WHEN_KEY        reduce using rule 63 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    LPAREN          reduce using rule 63 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    NAME            reduce using rule 63 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    EQUALS          reduce using rule 63 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)


state 172

    (71) atomic_eff_lst -> atomic_eff . atomic_eff_lst
    (72) atomic_eff_lst -> atomic_eff .
    (71) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (72) atomic_eff_lst -> . atomic_eff
    (73) atomic_eff -> . literal
    (74) atomic_eff -> . AND_KEY literal_lst
    (75) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (76) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 72 (atomic_eff_lst -> atomic_eff .)
    ONEOF_KEY       reduce using rule 72 (atomic_eff_lst -> atomic_eff .)
    WHEN_KEY        reduce using rule 72 (atomic_eff_lst -> atomic_eff .)
    AND_KEY         shift and go to state 174
    LPAREN          shift and go to state 175
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

  ! AND_KEY         [ reduce using rule 72 (atomic_eff_lst -> atomic_eff .) ]
  ! LPAREN          [ reduce using rule 72 (atomic_eff_lst -> atomic_eff .) ]
  ! NAME            [ reduce using rule 72 (atomic_eff_lst -> atomic_eff .) ]
  ! EQUALS          [ reduce using rule 72 (atomic_eff_lst -> atomic_eff .) ]

    atomic_eff                     shift and go to state 172
    atomic_eff_lst                 shift and go to state 202
    literal                        shift and go to state 173
    predicate                      shift and go to state 131

state 173

    (73) atomic_eff -> literal .

    AND_KEY         reduce using rule 73 (atomic_eff -> literal .)
    LPAREN          reduce using rule 73 (atomic_eff -> literal .)
    NAME            reduce using rule 73 (atomic_eff -> literal .)
    EQUALS          reduce using rule 73 (atomic_eff -> literal .)
    RPAREN          reduce using rule 73 (atomic_eff -> literal .)
    ONEOF_KEY       reduce using rule 73 (atomic_eff -> literal .)
    WHEN_KEY        reduce using rule 73 (atomic_eff -> literal .)


state 174

    (74) atomic_eff -> AND_KEY . literal_lst
    (77) literal_lst -> . literal literal_lst
    (78) literal_lst -> . literal
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    LPAREN          shift and go to state 142
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    literal_lst                    shift and go to state 203
    literal                        shift and go to state 204
    predicate                      shift and go to state 131

state 175

    (75) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (76) atomic_eff -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> LPAREN . NOT_KEY predicate RPAREN
    (81) predicate -> LPAREN . NAME variables_lst RPAREN
    (82) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 205
    WHEN_KEY        shift and go to state 206
    NOT_KEY         shift and go to state 165
    NAME            shift and go to state 166
    EQUALS          shift and go to state 167


state 176

    (64) one_eff_formula -> WHEN_KEY formula . atomic_eff
    (73) atomic_eff -> . literal
    (74) atomic_eff -> . AND_KEY literal_lst
    (75) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (76) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 174
    LPAREN          shift and go to state 175
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    atomic_eff                     shift and go to state 207
    literal                        shift and go to state 173
    predicate                      shift and go to state 131

state 177

    (51) formula -> LPAREN AND_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 208


state 178

    (52) formula -> LPAREN OR_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 209


state 179

    (51) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (52) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (53) formula -> LPAREN . NOT_KEY formula RPAREN
    (54) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (55) formula -> LPAREN . literal RPAREN
    (56) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (81) predicate -> LPAREN . NAME variables_lst RPAREN
    (82) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> LPAREN . NAME RPAREN
    (79) literal -> LPAREN . NOT_KEY predicate RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 143
    OR_KEY          shift and go to state 144
    NOT_KEY         shift and go to state 145
    IMPLY_KEY       shift and go to state 146
    EXISTS_KEY      shift and go to state 148
    FORALL_KEY      shift and go to state 149
    NAME            shift and go to state 150
    EQUALS          shift and go to state 151
    LPAREN          shift and go to state 142

    literal                        shift and go to state 147
    predicate                      shift and go to state 131

state 180

    (53) formula -> LPAREN NOT_KEY formula . RPAREN

    RPAREN          shift and go to state 210


state 181

    (79) literal -> LPAREN NOT_KEY predicate . RPAREN
    (80) literal -> predicate .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 211

  ! RPAREN          [ reduce using rule 80 (literal -> predicate .) ]


state 182

    (54) formula -> LPAREN IMPLY_KEY formula . formula RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 212
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 183

    (55) formula -> LPAREN literal RPAREN .

    RPAREN          reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    AND_KEY         reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    OR_KEY          reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    NOT_KEY         reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    IMPLY_KEY       reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    EXISTS_KEY      reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    FORALL_KEY      reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    LPAREN          reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    NAME            reduce using rule 55 (formula -> LPAREN literal RPAREN .)
    EQUALS          reduce using rule 55 (formula -> LPAREN literal RPAREN .)


state 184

    (56) formula -> LPAREN EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (87) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> . variables_lst HYPHEN type
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 213
    variables_lst                  shift and go to state 93

state 185

    (57) formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (87) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> . variables_lst HYPHEN type
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 214
    variables_lst                  shift and go to state 93

state 186

    (81) predicate -> LPAREN NAME variables_lst . RPAREN
    (84) predicate -> NAME variables_lst .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 215

  ! RPAREN          [ reduce using rule 84 (predicate -> NAME variables_lst .) ]


state 187

    (83) predicate -> LPAREN NAME RPAREN .

    RPAREN          reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    AND_KEY         reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    OR_KEY          reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    NOT_KEY         reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    IMPLY_KEY       reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    EXISTS_KEY      reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    FORALL_KEY      reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    NAME            reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    EQUALS          reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    ONEOF_KEY       reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)
    WHEN_KEY        reduce using rule 83 (predicate -> LPAREN NAME RPAREN .)


state 188

    (82) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN
    (85) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 216


state 189

    (58) formula_lst -> formula formula_lst .

    AND_KEY         reduce using rule 58 (formula_lst -> formula formula_lst .)
    OR_KEY          reduce using rule 58 (formula_lst -> formula formula_lst .)
    NOT_KEY         reduce using rule 58 (formula_lst -> formula formula_lst .)
    IMPLY_KEY       reduce using rule 58 (formula_lst -> formula formula_lst .)
    EXISTS_KEY      reduce using rule 58 (formula_lst -> formula formula_lst .)
    FORALL_KEY      reduce using rule 58 (formula_lst -> formula formula_lst .)
    LPAREN          reduce using rule 58 (formula_lst -> formula formula_lst .)
    NAME            reduce using rule 58 (formula_lst -> formula formula_lst .)
    EQUALS          reduce using rule 58 (formula_lst -> formula formula_lst .)
    RPAREN          reduce using rule 58 (formula_lst -> formula formula_lst .)


state 190

    (48) formula -> IMPLY_KEY formula formula .

    RPAREN          reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    AND_KEY         reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    OR_KEY          reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    NOT_KEY         reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    IMPLY_KEY       reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    EXISTS_KEY      reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    FORALL_KEY      reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    LPAREN          reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    NAME            reduce using rule 48 (formula -> IMPLY_KEY formula formula .)
    EQUALS          reduce using rule 48 (formula -> IMPLY_KEY formula formula .)


state 191

    (49) formula -> EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 217


state 192

    (50) formula -> FORALL_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 218


state 193

    (85) predicate -> EQUALS VARIABLE VARIABLE .

    RPAREN          reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    AND_KEY         reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    OR_KEY          reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    NOT_KEY         reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    IMPLY_KEY       reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    EXISTS_KEY      reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    FORALL_KEY      reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    LPAREN          reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    NAME            reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    EQUALS          reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    ONEOF_KEY       reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)
    WHEN_KEY        reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .)


state 194

    (65) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst . RPAREN

    RPAREN          shift and go to state 219


state 195

    (66) one_eff_formula -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (73) atomic_eff -> . literal
    (74) atomic_eff -> . AND_KEY literal_lst
    (75) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (76) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 174
    LPAREN          shift and go to state 175
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    atomic_eff                     shift and go to state 220
    literal                        shift and go to state 173
    predicate                      shift and go to state 131

state 196

    (67) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN atomic_eff RPAREN
    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (87) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (88) typed_variables_lst -> . variables_lst HYPHEN type
    (89) variables_lst -> . VARIABLE variables_lst
    (90) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 221
    variables_lst                  shift and go to state 93

state 197

    (81) predicate -> LPAREN . NAME variables_lst RPAREN
    (82) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 166
    EQUALS          shift and go to state 167


state 198

    (79) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 211


state 199

    (81) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 215


state 200

    (82) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 222


state 201

    (69) one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .

    AND_KEY         reduce using rule 69 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 69 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    WHEN_KEY        reduce using rule 69 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    LPAREN          reduce using rule 69 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    NAME            reduce using rule 69 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    EQUALS          reduce using rule 69 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    RPAREN          reduce using rule 69 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)


state 202

    (71) atomic_eff_lst -> atomic_eff atomic_eff_lst .

    RPAREN          reduce using rule 71 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    AND_KEY         reduce using rule 71 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 71 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    WHEN_KEY        reduce using rule 71 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    LPAREN          reduce using rule 71 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    NAME            reduce using rule 71 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    EQUALS          reduce using rule 71 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)


state 203

    (74) atomic_eff -> AND_KEY literal_lst .

    AND_KEY         reduce using rule 74 (atomic_eff -> AND_KEY literal_lst .)
    LPAREN          reduce using rule 74 (atomic_eff -> AND_KEY literal_lst .)
    NAME            reduce using rule 74 (atomic_eff -> AND_KEY literal_lst .)
    EQUALS          reduce using rule 74 (atomic_eff -> AND_KEY literal_lst .)
    RPAREN          reduce using rule 74 (atomic_eff -> AND_KEY literal_lst .)
    ONEOF_KEY       reduce using rule 74 (atomic_eff -> AND_KEY literal_lst .)
    WHEN_KEY        reduce using rule 74 (atomic_eff -> AND_KEY literal_lst .)


state 204

    (77) literal_lst -> literal . literal_lst
    (78) literal_lst -> literal .
    (77) literal_lst -> . literal literal_lst
    (78) literal_lst -> . literal
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    AND_KEY         reduce using rule 78 (literal_lst -> literal .)
    RPAREN          reduce using rule 78 (literal_lst -> literal .)
    ONEOF_KEY       reduce using rule 78 (literal_lst -> literal .)
    WHEN_KEY        reduce using rule 78 (literal_lst -> literal .)
    LPAREN          shift and go to state 142
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

  ! LPAREN          [ reduce using rule 78 (literal_lst -> literal .) ]
  ! NAME            [ reduce using rule 78 (literal_lst -> literal .) ]
  ! EQUALS          [ reduce using rule 78 (literal_lst -> literal .) ]

    literal                        shift and go to state 204
    literal_lst                    shift and go to state 223
    predicate                      shift and go to state 131

state 205

    (75) atomic_eff -> LPAREN AND_KEY . literal_lst RPAREN
    (77) literal_lst -> . literal literal_lst
    (78) literal_lst -> . literal
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    LPAREN          shift and go to state 142
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    literal_lst                    shift and go to state 224
    literal                        shift and go to state 204
    predicate                      shift and go to state 131

state 206

    (76) atomic_eff -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 225
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 207

    (64) one_eff_formula -> WHEN_KEY formula atomic_eff .

    RPAREN          reduce using rule 64 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    AND_KEY         reduce using rule 64 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    ONEOF_KEY       reduce using rule 64 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    WHEN_KEY        reduce using rule 64 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    LPAREN          reduce using rule 64 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    NAME            reduce using rule 64 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    EQUALS          reduce using rule 64 (one_eff_formula -> WHEN_KEY formula atomic_eff .)


state 208

    (51) formula -> LPAREN AND_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NAME            reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 51 (formula -> LPAREN AND_KEY formula_lst RPAREN .)


state 209

    (52) formula -> LPAREN OR_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NAME            reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 52 (formula -> LPAREN OR_KEY formula_lst RPAREN .)


state 210

    (53) formula -> LPAREN NOT_KEY formula RPAREN .

    RPAREN          reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    AND_KEY         reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    OR_KEY          reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NOT_KEY         reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    IMPLY_KEY       reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EXISTS_KEY      reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    FORALL_KEY      reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    LPAREN          reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NAME            reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EQUALS          reduce using rule 53 (formula -> LPAREN NOT_KEY formula RPAREN .)


state 211

    (79) literal -> LPAREN NOT_KEY predicate RPAREN .

    RPAREN          reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    AND_KEY         reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    OR_KEY          reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NOT_KEY         reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    IMPLY_KEY       reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EXISTS_KEY      reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    FORALL_KEY      reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NAME            reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EQUALS          reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    ONEOF_KEY       reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    WHEN_KEY        reduce using rule 79 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 212

    (54) formula -> LPAREN IMPLY_KEY formula formula . RPAREN

    RPAREN          shift and go to state 226


state 213

    (56) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 227


state 214

    (57) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 228


state 215

    (81) predicate -> LPAREN NAME variables_lst RPAREN .

    RPAREN          reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    AND_KEY         reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    OR_KEY          reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NOT_KEY         reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    IMPLY_KEY       reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EXISTS_KEY      reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    FORALL_KEY      reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NAME            reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EQUALS          reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    ONEOF_KEY       reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)
    WHEN_KEY        reduce using rule 81 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 216

    (82) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN
    (85) predicate -> EQUALS VARIABLE VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 229

  ! RPAREN          [ reduce using rule 85 (predicate -> EQUALS VARIABLE VARIABLE .) ]


state 217

    (49) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 230
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 218

    (50) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN . formula
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 231
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 219

    (65) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .

    RPAREN          reduce using rule 65 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    AND_KEY         reduce using rule 65 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    ONEOF_KEY       reduce using rule 65 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    WHEN_KEY        reduce using rule 65 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    LPAREN          reduce using rule 65 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    NAME            reduce using rule 65 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    EQUALS          reduce using rule 65 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)


state 220

    (66) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 232


state 221

    (67) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN atomic_eff RPAREN
    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    RPAREN          shift and go to state 233


state 222

    (82) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 229


state 223

    (77) literal_lst -> literal literal_lst .

    AND_KEY         reduce using rule 77 (literal_lst -> literal literal_lst .)
    LPAREN          reduce using rule 77 (literal_lst -> literal literal_lst .)
    NAME            reduce using rule 77 (literal_lst -> literal literal_lst .)
    EQUALS          reduce using rule 77 (literal_lst -> literal literal_lst .)
    RPAREN          reduce using rule 77 (literal_lst -> literal literal_lst .)
    ONEOF_KEY       reduce using rule 77 (literal_lst -> literal literal_lst .)
    WHEN_KEY        reduce using rule 77 (literal_lst -> literal literal_lst .)


state 224

    (75) atomic_eff -> LPAREN AND_KEY literal_lst . RPAREN

    RPAREN          shift and go to state 234


state 225

    (76) atomic_eff -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (73) atomic_eff -> . literal
    (74) atomic_eff -> . AND_KEY literal_lst
    (75) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (76) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 174
    LPAREN          shift and go to state 175
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    atomic_eff                     shift and go to state 235
    literal                        shift and go to state 173
    predicate                      shift and go to state 131

state 226

    (54) formula -> LPAREN IMPLY_KEY formula formula RPAREN .

    RPAREN          reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    AND_KEY         reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    OR_KEY          reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NOT_KEY         reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    IMPLY_KEY       reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EXISTS_KEY      reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    FORALL_KEY      reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    LPAREN          reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NAME            reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EQUALS          reduce using rule 54 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)


state 227

    (56) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 236
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 228

    (57) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 237
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 229

    (82) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    RPAREN          reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    AND_KEY         reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    OR_KEY          reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NOT_KEY         reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    IMPLY_KEY       reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EXISTS_KEY      reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    FORALL_KEY      reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NAME            reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EQUALS          reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    ONEOF_KEY       reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    WHEN_KEY        reduce using rule 82 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 230

    (49) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 49 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)


state 231

    (50) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 50 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)


state 232

    (66) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    RPAREN          reduce using rule 66 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    AND_KEY         reduce using rule 66 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 66 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 66 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 66 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 66 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 66 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 233

    (67) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . atomic_eff RPAREN
    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (73) atomic_eff -> . literal
    (74) atomic_eff -> . AND_KEY literal_lst
    (75) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (76) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    LPAREN          shift and go to state 238
    AND_KEY         shift and go to state 174
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    atomic_eff                     shift and go to state 239
    literal                        shift and go to state 173
    predicate                      shift and go to state 131

state 234

    (75) atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .

    AND_KEY         reduce using rule 75 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    LPAREN          reduce using rule 75 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    NAME            reduce using rule 75 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    EQUALS          reduce using rule 75 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    RPAREN          reduce using rule 75 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    ONEOF_KEY       reduce using rule 75 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    WHEN_KEY        reduce using rule 75 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)


state 235

    (76) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 240


state 236

    (56) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 241


state 237

    (57) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 242


state 238

    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN . WHEN_KEY formula atomic_eff RPAREN RPAREN
    (75) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (76) atomic_eff -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> LPAREN . NOT_KEY predicate RPAREN
    (81) predicate -> LPAREN . NAME variables_lst RPAREN
    (82) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> LPAREN . NAME RPAREN

    WHEN_KEY        shift and go to state 243
    AND_KEY         shift and go to state 205
    NOT_KEY         shift and go to state 165
    NAME            shift and go to state 166
    EQUALS          shift and go to state 167


state 239

    (67) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff . RPAREN

    RPAREN          shift and go to state 244


state 240

    (76) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    AND_KEY         reduce using rule 76 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 76 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 76 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 76 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    RPAREN          reduce using rule 76 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 76 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 76 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 241

    (56) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 56 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 242

    (57) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 57 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 243

    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY . formula atomic_eff RPAREN RPAREN
    (76) atomic_eff -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (44) formula -> . literal
    (45) formula -> . AND_KEY formula_lst
    (46) formula -> . OR_KEY formula_lst
    (47) formula -> . NOT_KEY formula
    (48) formula -> . IMPLY_KEY formula formula
    (49) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (50) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (51) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (52) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (53) formula -> . LPAREN NOT_KEY formula RPAREN
    (54) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (55) formula -> . LPAREN literal RPAREN
    (56) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (57) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 125
    OR_KEY          shift and go to state 126
    NOT_KEY         shift and go to state 127
    IMPLY_KEY       shift and go to state 128
    EXISTS_KEY      shift and go to state 129
    FORALL_KEY      shift and go to state 130
    LPAREN          shift and go to state 122
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    formula                        shift and go to state 245
    literal                        shift and go to state 124
    predicate                      shift and go to state 131

state 244

    (67) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .

    RPAREN          reduce using rule 67 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    AND_KEY         reduce using rule 67 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 67 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 67 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    LPAREN          reduce using rule 67 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    NAME            reduce using rule 67 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    EQUALS          reduce using rule 67 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)


state 245

    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula . atomic_eff RPAREN RPAREN
    (76) atomic_eff -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (73) atomic_eff -> . literal
    (74) atomic_eff -> . AND_KEY literal_lst
    (75) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (76) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (79) literal -> . LPAREN NOT_KEY predicate RPAREN
    (80) literal -> . predicate
    (81) predicate -> . LPAREN NAME variables_lst RPAREN
    (82) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (83) predicate -> . LPAREN NAME RPAREN
    (84) predicate -> . NAME variables_lst
    (85) predicate -> . EQUALS VARIABLE VARIABLE
    (86) predicate -> . NAME

    AND_KEY         shift and go to state 174
    LPAREN          shift and go to state 175
    NAME            shift and go to state 132
    EQUALS          shift and go to state 133

    atomic_eff                     shift and go to state 246
    literal                        shift and go to state 173
    predicate                      shift and go to state 131

state 246

    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff . RPAREN RPAREN
    (76) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 247


state 247

    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN . RPAREN
    (76) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 248

  ! RPAREN          [ reduce using rule 76 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .) ]


state 248

    (68) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .

    RPAREN          reduce using rule 68 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    AND_KEY         reduce using rule 68 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    ONEOF_KEY       reduce using rule 68 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    WHEN_KEY        reduce using rule 68 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    LPAREN          reduce using rule 68 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    NAME            reduce using rule 68 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    EQUALS          reduce using rule 68 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NAME in state 60 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 150 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 154 resolved as shift
WARNING: shift/reduce conflict for OR_KEY in state 154 resolved as shift
WARNING: shift/reduce conflict for NOT_KEY in state 154 resolved as shift
WARNING: shift/reduce conflict for IMPLY_KEY in state 154 resolved as shift
WARNING: shift/reduce conflict for EXISTS_KEY in state 154 resolved as shift
WARNING: shift/reduce conflict for FORALL_KEY in state 154 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 154 resolved as shift
WARNING: shift/reduce conflict for NAME in state 154 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 154 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 170 resolved as shift
WARNING: shift/reduce conflict for ONEOF_KEY in state 170 resolved as shift
WARNING: shift/reduce conflict for WHEN_KEY in state 170 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 170 resolved as shift
WARNING: shift/reduce conflict for NAME in state 170 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 170 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 172 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 172 resolved as shift
WARNING: shift/reduce conflict for NAME in state 172 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 172 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 181 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 186 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 204 resolved as shift
WARNING: shift/reduce conflict for NAME in state 204 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 204 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 216 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 247 resolved as shift
