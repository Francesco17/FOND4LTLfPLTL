Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
Rule 4     problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
Rule 5     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 6     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 7     objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 8     init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 9     init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 10    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 11    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 12    require_key_lst -> require_key require_key_lst
Rule 13    require_key_lst -> require_key
Rule 14    require_key -> STRIPS_KEY
Rule 15    require_key -> EQUALITY_KEY
Rule 16    require_key -> TYPING_KEY
Rule 17    require_key -> ADL_KEY
Rule 18    require_key -> ND_KEY
Rule 19    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 20    constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN
Rule 21    names_lst -> NAME names_lst
Rule 22    names_lst -> NAME
Rule 23    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 24    predicate_def_lst -> predicate_def predicate_def_lst
Rule 25    predicate_def_lst -> predicate_def
Rule 26    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 27    predicate_def -> LPAREN NAME RPAREN
Rule 28    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 29    ground_predicates_lst -> ground_predicate
Rule 30    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 31    ground_predicate -> LPAREN NAME RPAREN
Rule 32    constants_lst -> constant constants_lst
Rule 33    constants_lst -> constant
Rule 34    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 35    typed_constants_lst -> constants_lst HYPHEN type
Rule 36    action_def_lst -> action_def action_def_lst
Rule 37    action_def_lst -> action_def
Rule 38    action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN
Rule 39    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 40    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 41    precond_def -> PRECONDITION_KEY LPAREN formula RPAREN
Rule 42    formula -> literal
Rule 43    formula -> AND_KEY formula_lst
Rule 44    formula -> OR_KEY formula_lst
Rule 45    formula -> NOT_KEY formula
Rule 46    formula -> IMPLY_KEY formula formula
Rule 47    formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
Rule 48    formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula
Rule 49    formula -> LPAREN AND_KEY formula_lst RPAREN
Rule 50    formula -> LPAREN OR_KEY formula_lst RPAREN
Rule 51    formula -> LPAREN NOT_KEY formula RPAREN
Rule 52    formula -> LPAREN IMPLY_KEY formula formula RPAREN
Rule 53    formula -> LPAREN literal RPAREN
Rule 54    formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 55    formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 56    formula_lst -> formula formula_lst
Rule 57    formula_lst -> formula
Rule 58    effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN
Rule 59    one_eff_formula -> literal
Rule 60    one_eff_formula -> AND_KEY one_eff_formula_lst
Rule 61    one_eff_formula -> ONEOF_KEY atomic_eff_lst
Rule 62    one_eff_formula -> WHEN_KEY formula atomic_eff
Rule 63    one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN
Rule 64    one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 65    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
Rule 66    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
Rule 67    one_eff_formula_lst -> one_eff_formula one_eff_formula_lst
Rule 68    one_eff_formula_lst -> one_eff_formula
Rule 69    atomic_eff_lst -> atomic_eff atomic_eff_lst
Rule 70    atomic_eff_lst -> atomic_eff
Rule 71    atomic_eff -> literal
Rule 72    atomic_eff -> AND_KEY literal_lst
Rule 73    atomic_eff -> LPAREN AND_KEY literal_lst RPAREN
Rule 74    atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 75    literal_lst -> literal literal_lst
Rule 76    literal_lst -> literal
Rule 77    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 78    literal -> predicate
Rule 79    predicate -> LPAREN NAME variables_lst RPAREN
Rule 80    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 81    predicate -> LPAREN NAME RPAREN
Rule 82    predicate -> NAME variables_lst
Rule 83    predicate -> EQUALS VARIABLE VARIABLE
Rule 84    predicate -> NAME
Rule 85    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 86    typed_variables_lst -> variables_lst HYPHEN type
Rule 87    variables_lst -> VARIABLE variables_lst
Rule 88    variables_lst -> VARIABLE
Rule 89    type -> NAME
Rule 90    constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 38
ADL_KEY              : 17
AND_KEY              : 8 10 43 49 60 72 73
CONSTANTS_KEY        : 20
DEFINE_KEY           : 3 4
DOMAIN_KEY           : 5
EFFECT_KEY           : 58
EQUALITY_KEY         : 15
EQUALS               : 80 83
EXISTS_KEY           : 47 54
FORALL_KEY           : 48 55 65 66
GOAL_KEY             : 10
HYPHEN               : 34 35 85 86
IMPLY_KEY            : 46 52
INIT_KEY             : 8 9
LPAREN               : 3 4 5 6 7 8 8 9 10 10 11 19 20 23 26 27 30 31 38 39 40 41 47 48 49 50 51 52 53 54 54 55 55 58 63 64 65 65 66 66 66 73 74 77 79 80 81
NAME                 : 5 6 21 22 26 27 30 31 38 79 81 82 84 89 90
ND_KEY               : 18
NOT_KEY              : 45 51 77
OBJECTS_KEY          : 7
ONEOF_KEY            : 61 63
OR_KEY               : 44 50
PARAMETERS_KEY       : 39 40
PRECONDITION_KEY     : 41
PREDICATES_KEY       : 23
PROBLEM_KEY          : 6
REQUIREMENTS_KEY     : 11
RPAREN               : 3 4 5 6 7 8 8 9 10 10 11 19 20 23 26 27 30 31 38 39 40 41 47 48 49 50 51 52 53 54 54 55 55 58 63 64 65 65 66 66 66 73 74 77 79 80 81
STRIPS_KEY           : 14
TYPES_KEY            : 19
TYPING_KEY           : 16
VARIABLE             : 80 80 83 83 87 88
WHEN_KEY             : 62 64 66 74
error                : 

Nonterminals, with rules where they appear

action_def           : 36 37
action_def_lst       : 3 36
atomic_eff           : 62 64 65 66 69 70 74
atomic_eff_lst       : 61 63 69
constant             : 32 33
constants_def        : 3
constants_lst        : 30 32 34 35
domain               : 1
domain_def           : 3 4
effects_def          : 38
formula              : 41 45 46 46 47 48 51 52 52 54 55 56 57 62 64 66 74
formula_lst          : 43 44 49 50 56
goal_def             : 4
ground_predicate     : 28 29
ground_predicates_lst : 8 9 10 28
init_def             : 4
literal              : 42 53 59 71 75 76
literal_lst          : 72 73 75
names_lst            : 19 20 21
objects_def          : 4
one_eff_formula      : 58 67 68
one_eff_formula_lst  : 60 67
parameters_def       : 38
pddl                 : 0
precond_def          : 38
predicate            : 77 78
predicate_def        : 24 25
predicate_def_lst    : 23 24
predicates_def       : 3
problem              : 2
problem_def          : 4
require_def          : 3
require_key          : 12 13
require_key_lst      : 11 12
type                 : 34 35 85 86
typed_constants_lst  : 7 34
typed_variables_lst  : 26 39 47 48 54 55 65 66 85
types_def            : 3
variables_lst        : 79 82 85 86 87

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (3) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) problem -> . LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN

    LPAREN          shift and go to state 4

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 3

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 4

    (3) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) problem -> LPAREN . DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 5

    (3) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) problem -> LPAREN DEFINE_KEY . problem_def domain_def objects_def init_def goal_def RPAREN
    (5) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (6) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (5) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (6) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (3) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def constants_def predicates_def action_def_lst RPAREN
    (11) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 11

    require_def                    shift and go to state 12

state 8

    (4) problem -> LPAREN DEFINE_KEY problem_def . domain_def objects_def init_def goal_def RPAREN
    (5) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 13

    domain_def                     shift and go to state 14

state 9

    (5) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 15


state 10

    (6) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 16


state 11

    (11) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 17


state 12

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def constants_def predicates_def action_def_lst RPAREN
    (19) types_def -> . LPAREN TYPES_KEY names_lst RPAREN

    LPAREN          shift and go to state 18

    types_def                      shift and go to state 19

state 13

    (5) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9


state 14

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def . objects_def init_def goal_def RPAREN
    (7) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN

    LPAREN          shift and go to state 20

    objects_def                    shift and go to state 21

state 15

    (5) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 22


state 16

    (6) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 23


state 17

    (11) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (12) require_key_lst -> . require_key require_key_lst
    (13) require_key_lst -> . require_key
    (14) require_key -> . STRIPS_KEY
    (15) require_key -> . EQUALITY_KEY
    (16) require_key -> . TYPING_KEY
    (17) require_key -> . ADL_KEY
    (18) require_key -> . ND_KEY

    STRIPS_KEY      shift and go to state 26
    EQUALITY_KEY    shift and go to state 27
    TYPING_KEY      shift and go to state 28
    ADL_KEY         shift and go to state 29
    ND_KEY          shift and go to state 30

    require_key_lst                shift and go to state 24
    require_key                    shift and go to state 25

state 18

    (19) types_def -> LPAREN . TYPES_KEY names_lst RPAREN

    TYPES_KEY       shift and go to state 31


state 19

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . constants_def predicates_def action_def_lst RPAREN
    (20) constants_def -> . LPAREN CONSTANTS_KEY names_lst RPAREN

    LPAREN          shift and go to state 32

    constants_def                  shift and go to state 33

state 20

    (7) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN

    OBJECTS_KEY     shift and go to state 34


state 21

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def . init_def goal_def RPAREN
    (8) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 35

    init_def                       shift and go to state 36

state 22

    (5) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 5 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 23

    (6) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 6 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 24

    (11) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 37


state 25

    (12) require_key_lst -> require_key . require_key_lst
    (13) require_key_lst -> require_key .
    (12) require_key_lst -> . require_key require_key_lst
    (13) require_key_lst -> . require_key
    (14) require_key -> . STRIPS_KEY
    (15) require_key -> . EQUALITY_KEY
    (16) require_key -> . TYPING_KEY
    (17) require_key -> . ADL_KEY
    (18) require_key -> . ND_KEY

    RPAREN          reduce using rule 13 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 26
    EQUALITY_KEY    shift and go to state 27
    TYPING_KEY      shift and go to state 28
    ADL_KEY         shift and go to state 29
    ND_KEY          shift and go to state 30

    require_key                    shift and go to state 25
    require_key_lst                shift and go to state 38

state 26

    (14) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 14 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 14 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 14 (require_key -> STRIPS_KEY .)
    ADL_KEY         reduce using rule 14 (require_key -> STRIPS_KEY .)
    ND_KEY          reduce using rule 14 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 14 (require_key -> STRIPS_KEY .)


state 27

    (15) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 15 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 15 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 15 (require_key -> EQUALITY_KEY .)
    ADL_KEY         reduce using rule 15 (require_key -> EQUALITY_KEY .)
    ND_KEY          reduce using rule 15 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 15 (require_key -> EQUALITY_KEY .)


state 28

    (16) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 16 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 16 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 16 (require_key -> TYPING_KEY .)
    ADL_KEY         reduce using rule 16 (require_key -> TYPING_KEY .)
    ND_KEY          reduce using rule 16 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 16 (require_key -> TYPING_KEY .)


state 29

    (17) require_key -> ADL_KEY .

    STRIPS_KEY      reduce using rule 17 (require_key -> ADL_KEY .)
    EQUALITY_KEY    reduce using rule 17 (require_key -> ADL_KEY .)
    TYPING_KEY      reduce using rule 17 (require_key -> ADL_KEY .)
    ADL_KEY         reduce using rule 17 (require_key -> ADL_KEY .)
    ND_KEY          reduce using rule 17 (require_key -> ADL_KEY .)
    RPAREN          reduce using rule 17 (require_key -> ADL_KEY .)


state 30

    (18) require_key -> ND_KEY .

    STRIPS_KEY      reduce using rule 18 (require_key -> ND_KEY .)
    EQUALITY_KEY    reduce using rule 18 (require_key -> ND_KEY .)
    TYPING_KEY      reduce using rule 18 (require_key -> ND_KEY .)
    ADL_KEY         reduce using rule 18 (require_key -> ND_KEY .)
    ND_KEY          reduce using rule 18 (require_key -> ND_KEY .)
    RPAREN          reduce using rule 18 (require_key -> ND_KEY .)


state 31

    (19) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (21) names_lst -> . NAME names_lst
    (22) names_lst -> . NAME

    NAME            shift and go to state 40

    names_lst                      shift and go to state 39

state 32

    (20) constants_def -> LPAREN . CONSTANTS_KEY names_lst RPAREN

    CONSTANTS_KEY   shift and go to state 41


state 33

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def . predicates_def action_def_lst RPAREN
    (23) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 42

    predicates_def                 shift and go to state 43

state 34

    (7) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (34) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (35) typed_constants_lst -> . constants_lst HYPHEN type
    (32) constants_lst -> . constant constants_lst
    (33) constants_lst -> . constant
    (90) constant -> . NAME

    NAME            shift and go to state 47

    typed_constants_lst            shift and go to state 44
    constants_lst                  shift and go to state 45
    constant                       shift and go to state 46

state 35

    (8) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    INIT_KEY        shift and go to state 48


state 36

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def . goal_def RPAREN
    (10) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 49

    goal_def                       shift and go to state 50

state 37

    (11) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 11 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 38

    (12) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 12 (require_key_lst -> require_key require_key_lst .)


state 39

    (19) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 51


state 40

    (21) names_lst -> NAME . names_lst
    (22) names_lst -> NAME .
    (21) names_lst -> . NAME names_lst
    (22) names_lst -> . NAME

    RPAREN          reduce using rule 22 (names_lst -> NAME .)
    NAME            shift and go to state 40

    names_lst                      shift and go to state 52

state 41

    (20) constants_def -> LPAREN CONSTANTS_KEY . names_lst RPAREN
    (21) names_lst -> . NAME names_lst
    (22) names_lst -> . NAME

    NAME            shift and go to state 40

    names_lst                      shift and go to state 53

state 42

    (23) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 54


state 43

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def . action_def_lst RPAREN
    (36) action_def_lst -> . action_def action_def_lst
    (37) action_def_lst -> . action_def
    (38) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 55

    action_def_lst                 shift and go to state 56
    action_def                     shift and go to state 57

state 44

    (7) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 58


state 45

    (34) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (35) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 59


state 46

    (32) constants_lst -> constant . constants_lst
    (33) constants_lst -> constant .
    (32) constants_lst -> . constant constants_lst
    (33) constants_lst -> . constant
    (90) constant -> . NAME

    HYPHEN          reduce using rule 33 (constants_lst -> constant .)
    RPAREN          reduce using rule 33 (constants_lst -> constant .)
    NAME            shift and go to state 47

    constant                       shift and go to state 46
    constants_lst                  shift and go to state 60

state 47

    (90) constant -> NAME .

    NAME            reduce using rule 90 (constant -> NAME .)
    HYPHEN          reduce using rule 90 (constant -> NAME .)
    RPAREN          reduce using rule 90 (constant -> NAME .)


state 48

    (8) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (28) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (29) ground_predicates_lst -> . ground_predicate
    (30) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (31) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 61

    ground_predicates_lst          shift and go to state 62
    ground_predicate               shift and go to state 63

state 49

    (10) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    GOAL_KEY        shift and go to state 64


state 50

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 65


state 51

    (19) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 19 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 52

    (21) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 21 (names_lst -> NAME names_lst .)


state 53

    (20) constants_def -> LPAREN CONSTANTS_KEY names_lst . RPAREN

    RPAREN          shift and go to state 66


state 54

    (23) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (24) predicate_def_lst -> . predicate_def predicate_def_lst
    (25) predicate_def_lst -> . predicate_def
    (26) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (27) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 67

    predicate_def_lst              shift and go to state 68
    predicate_def                  shift and go to state 69

state 55

    (38) action_def -> LPAREN . ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    ACTION_KEY      shift and go to state 70


state 56

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 71


state 57

    (36) action_def_lst -> action_def . action_def_lst
    (37) action_def_lst -> action_def .
    (36) action_def_lst -> . action_def action_def_lst
    (37) action_def_lst -> . action_def
    (38) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    RPAREN          reduce using rule 37 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 55

    action_def                     shift and go to state 57
    action_def_lst                 shift and go to state 72

state 58

    (7) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 7 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 59

    (34) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (35) typed_constants_lst -> constants_lst HYPHEN . type
    (89) type -> . NAME

    NAME            shift and go to state 74

    type                           shift and go to state 73

state 60

    (32) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 32 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 32 (constants_lst -> constant constants_lst .)


state 61

    (8) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (30) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (31) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 75
    NAME            shift and go to state 76


state 62

    (9) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 77


state 63

    (28) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (29) ground_predicates_lst -> ground_predicate .
    (28) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (29) ground_predicates_lst -> . ground_predicate
    (30) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (31) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 29 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 79

    ground_predicate               shift and go to state 63
    ground_predicates_lst          shift and go to state 78

state 64

    (10) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 80


state 65

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .

    $end            reduce using rule 4 (problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .)


state 66

    (20) constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN .

    LPAREN          reduce using rule 20 (constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN .)


state 67

    (26) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (27) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 81


state 68

    (23) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 82


state 69

    (24) predicate_def_lst -> predicate_def . predicate_def_lst
    (25) predicate_def_lst -> predicate_def .
    (24) predicate_def_lst -> . predicate_def predicate_def_lst
    (25) predicate_def_lst -> . predicate_def
    (26) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (27) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 25 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 67

    predicate_def                  shift and go to state 69
    predicate_def_lst              shift and go to state 83

state 70

    (38) action_def -> LPAREN ACTION_KEY . NAME parameters_def precond_def effects_def RPAREN

    NAME            shift and go to state 84


state 71

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 3 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN .)


state 72

    (36) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 36 (action_def_lst -> action_def action_def_lst .)


state 73

    (34) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (35) typed_constants_lst -> constants_lst HYPHEN type .
    (34) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (35) typed_constants_lst -> . constants_lst HYPHEN type
    (32) constants_lst -> . constant constants_lst
    (33) constants_lst -> . constant
    (90) constant -> . NAME

    RPAREN          reduce using rule 35 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 47

    constants_lst                  shift and go to state 45
    typed_constants_lst            shift and go to state 85
    constant                       shift and go to state 46

state 74

    (89) type -> NAME .

    NAME            reduce using rule 89 (type -> NAME .)
    RPAREN          reduce using rule 89 (type -> NAME .)
    VARIABLE        reduce using rule 89 (type -> NAME .)


state 75

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (28) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (29) ground_predicates_lst -> . ground_predicate
    (30) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (31) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 79

    ground_predicates_lst          shift and go to state 86
    ground_predicate               shift and go to state 63

state 76

    (30) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (31) ground_predicate -> LPAREN NAME . RPAREN
    (32) constants_lst -> . constant constants_lst
    (33) constants_lst -> . constant
    (90) constant -> . NAME

    RPAREN          shift and go to state 88
    NAME            shift and go to state 47

    constants_lst                  shift and go to state 87
    constant                       shift and go to state 46

state 77

    (9) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 9 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 78

    (28) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 28 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 79

    (30) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (31) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 76


state 80

    (10) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN

    AND_KEY         shift and go to state 89


state 81

    (26) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (27) predicate_def -> LPAREN NAME . RPAREN
    (85) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> . variables_lst HYPHEN type
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 91
    VARIABLE        shift and go to state 93

    typed_variables_lst            shift and go to state 90
    variables_lst                  shift and go to state 92

state 82

    (23) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 23 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 83

    (24) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 24 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 84

    (38) action_def -> LPAREN ACTION_KEY NAME . parameters_def precond_def effects_def RPAREN
    (39) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (40) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 95

    parameters_def                 shift and go to state 94

state 85

    (34) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 34 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 86

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 96


state 87

    (30) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 97


state 88

    (31) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 31 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 31 (ground_predicate -> LPAREN NAME RPAREN .)


state 89

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (28) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (29) ground_predicates_lst -> . ground_predicate
    (30) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (31) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 79

    ground_predicates_lst          shift and go to state 98
    ground_predicate               shift and go to state 63

state 90

    (26) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 99


state 91

    (27) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 27 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 27 (predicate_def -> LPAREN NAME RPAREN .)


state 92

    (85) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 100


state 93

    (87) variables_lst -> VARIABLE . variables_lst
    (88) variables_lst -> VARIABLE .
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 88 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 88 (variables_lst -> VARIABLE .)
    AND_KEY         reduce using rule 88 (variables_lst -> VARIABLE .)
    OR_KEY          reduce using rule 88 (variables_lst -> VARIABLE .)
    NOT_KEY         reduce using rule 88 (variables_lst -> VARIABLE .)
    IMPLY_KEY       reduce using rule 88 (variables_lst -> VARIABLE .)
    EXISTS_KEY      reduce using rule 88 (variables_lst -> VARIABLE .)
    FORALL_KEY      reduce using rule 88 (variables_lst -> VARIABLE .)
    LPAREN          reduce using rule 88 (variables_lst -> VARIABLE .)
    NAME            reduce using rule 88 (variables_lst -> VARIABLE .)
    EQUALS          reduce using rule 88 (variables_lst -> VARIABLE .)
    ONEOF_KEY       reduce using rule 88 (variables_lst -> VARIABLE .)
    WHEN_KEY        reduce using rule 88 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 93

    variables_lst                  shift and go to state 101

state 94

    (38) action_def -> LPAREN ACTION_KEY NAME parameters_def . precond_def effects_def RPAREN
    (41) precond_def -> . PRECONDITION_KEY LPAREN formula RPAREN

    PRECONDITION_KEY shift and go to state 103

    precond_def                    shift and go to state 102

state 95

    (39) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (40) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 104


state 96

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 105


state 97

    (30) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 30 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 30 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 98

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 106


state 99

    (26) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 26 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 26 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 100

    (85) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (86) typed_variables_lst -> variables_lst HYPHEN . type
    (89) type -> . NAME

    NAME            shift and go to state 74

    type                           shift and go to state 107

state 101

    (87) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    AND_KEY         reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    OR_KEY          reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    NOT_KEY         reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    IMPLY_KEY       reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    EXISTS_KEY      reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    FORALL_KEY      reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    LPAREN          reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    NAME            reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    EQUALS          reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    ONEOF_KEY       reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)
    WHEN_KEY        reduce using rule 87 (variables_lst -> VARIABLE variables_lst .)


state 102

    (38) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def . effects_def RPAREN
    (58) effects_def -> . EFFECT_KEY LPAREN one_eff_formula RPAREN

    EFFECT_KEY      shift and go to state 109

    effects_def                    shift and go to state 108

state 103

    (41) precond_def -> PRECONDITION_KEY . LPAREN formula RPAREN

    LPAREN          shift and go to state 110


state 104

    (39) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (40) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (85) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> . variables_lst HYPHEN type
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 112
    VARIABLE        shift and go to state 93

    typed_variables_lst            shift and go to state 111
    variables_lst                  shift and go to state 92

state 105

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 8 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 106

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 113


state 107

    (85) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (86) typed_variables_lst -> variables_lst HYPHEN type .
    (85) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> . variables_lst HYPHEN type
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 86 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 93

    variables_lst                  shift and go to state 92
    typed_variables_lst            shift and go to state 114

state 108

    (38) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def . RPAREN

    RPAREN          shift and go to state 115


state 109

    (58) effects_def -> EFFECT_KEY . LPAREN one_eff_formula RPAREN

    LPAREN          shift and go to state 116


state 110

    (41) precond_def -> PRECONDITION_KEY LPAREN . formula RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 118
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 111

    (39) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 129


state 112

    (40) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 40 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 113

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 10 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 114

    (85) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 85 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 115

    (38) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .

    LPAREN          reduce using rule 38 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)
    RPAREN          reduce using rule 38 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)


state 116

    (58) effects_def -> EFFECT_KEY LPAREN . one_eff_formula RPAREN
    (59) one_eff_formula -> . literal
    (60) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (61) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (62) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (63) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (64) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (65) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (66) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 133
    ONEOF_KEY       shift and go to state 134
    WHEN_KEY        shift and go to state 135
    LPAREN          shift and go to state 130
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    one_eff_formula                shift and go to state 131
    literal                        shift and go to state 132
    predicate                      shift and go to state 126

state 117

    (49) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (50) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (51) formula -> LPAREN . NOT_KEY formula RPAREN
    (52) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (53) formula -> LPAREN . literal RPAREN
    (54) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> LPAREN . NOT_KEY predicate RPAREN
    (79) predicate -> LPAREN . NAME variables_lst RPAREN
    (80) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> LPAREN . NAME RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 137
    OR_KEY          shift and go to state 138
    NOT_KEY         shift and go to state 139
    IMPLY_KEY       shift and go to state 140
    EXISTS_KEY      shift and go to state 142
    FORALL_KEY      shift and go to state 143
    NAME            shift and go to state 144
    EQUALS          shift and go to state 145
    LPAREN          shift and go to state 136

    literal                        shift and go to state 141
    predicate                      shift and go to state 126

state 118

    (41) precond_def -> PRECONDITION_KEY LPAREN formula . RPAREN

    RPAREN          shift and go to state 146


state 119

    (42) formula -> literal .

    RPAREN          reduce using rule 42 (formula -> literal .)
    AND_KEY         reduce using rule 42 (formula -> literal .)
    OR_KEY          reduce using rule 42 (formula -> literal .)
    NOT_KEY         reduce using rule 42 (formula -> literal .)
    IMPLY_KEY       reduce using rule 42 (formula -> literal .)
    EXISTS_KEY      reduce using rule 42 (formula -> literal .)
    FORALL_KEY      reduce using rule 42 (formula -> literal .)
    LPAREN          reduce using rule 42 (formula -> literal .)
    NAME            reduce using rule 42 (formula -> literal .)
    EQUALS          reduce using rule 42 (formula -> literal .)


state 120

    (43) formula -> AND_KEY . formula_lst
    (56) formula_lst -> . formula formula_lst
    (57) formula_lst -> . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula_lst                    shift and go to state 147
    formula                        shift and go to state 148
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 121

    (44) formula -> OR_KEY . formula_lst
    (56) formula_lst -> . formula formula_lst
    (57) formula_lst -> . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula_lst                    shift and go to state 149
    formula                        shift and go to state 148
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 122

    (45) formula -> NOT_KEY . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 150
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 123

    (46) formula -> IMPLY_KEY . formula formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 151
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 124

    (47) formula -> EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 152


state 125

    (48) formula -> FORALL_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 153


state 126

    (78) literal -> predicate .

    RPAREN          reduce using rule 78 (literal -> predicate .)
    AND_KEY         reduce using rule 78 (literal -> predicate .)
    OR_KEY          reduce using rule 78 (literal -> predicate .)
    NOT_KEY         reduce using rule 78 (literal -> predicate .)
    IMPLY_KEY       reduce using rule 78 (literal -> predicate .)
    EXISTS_KEY      reduce using rule 78 (literal -> predicate .)
    FORALL_KEY      reduce using rule 78 (literal -> predicate .)
    LPAREN          reduce using rule 78 (literal -> predicate .)
    NAME            reduce using rule 78 (literal -> predicate .)
    EQUALS          reduce using rule 78 (literal -> predicate .)
    ONEOF_KEY       reduce using rule 78 (literal -> predicate .)
    WHEN_KEY        reduce using rule 78 (literal -> predicate .)


state 127

    (82) predicate -> NAME . variables_lst
    (84) predicate -> NAME .
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 84 (predicate -> NAME .)
    AND_KEY         reduce using rule 84 (predicate -> NAME .)
    OR_KEY          reduce using rule 84 (predicate -> NAME .)
    NOT_KEY         reduce using rule 84 (predicate -> NAME .)
    IMPLY_KEY       reduce using rule 84 (predicate -> NAME .)
    EXISTS_KEY      reduce using rule 84 (predicate -> NAME .)
    FORALL_KEY      reduce using rule 84 (predicate -> NAME .)
    LPAREN          reduce using rule 84 (predicate -> NAME .)
    NAME            reduce using rule 84 (predicate -> NAME .)
    EQUALS          reduce using rule 84 (predicate -> NAME .)
    ONEOF_KEY       reduce using rule 84 (predicate -> NAME .)
    WHEN_KEY        reduce using rule 84 (predicate -> NAME .)
    VARIABLE        shift and go to state 93

    variables_lst                  shift and go to state 154

state 128

    (83) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 155


state 129

    (39) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 39 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 130

    (63) one_eff_formula -> LPAREN . ONEOF_KEY atomic_eff_lst RPAREN
    (64) one_eff_formula -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (65) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (66) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (77) literal -> LPAREN . NOT_KEY predicate RPAREN
    (79) predicate -> LPAREN . NAME variables_lst RPAREN
    (80) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> LPAREN . NAME RPAREN

    ONEOF_KEY       shift and go to state 156
    WHEN_KEY        shift and go to state 157
    FORALL_KEY      shift and go to state 158
    NOT_KEY         shift and go to state 159
    NAME            shift and go to state 160
    EQUALS          shift and go to state 161


state 131

    (58) effects_def -> EFFECT_KEY LPAREN one_eff_formula . RPAREN

    RPAREN          shift and go to state 162


state 132

    (59) one_eff_formula -> literal .

    RPAREN          reduce using rule 59 (one_eff_formula -> literal .)
    AND_KEY         reduce using rule 59 (one_eff_formula -> literal .)
    ONEOF_KEY       reduce using rule 59 (one_eff_formula -> literal .)
    WHEN_KEY        reduce using rule 59 (one_eff_formula -> literal .)
    LPAREN          reduce using rule 59 (one_eff_formula -> literal .)
    NAME            reduce using rule 59 (one_eff_formula -> literal .)
    EQUALS          reduce using rule 59 (one_eff_formula -> literal .)


state 133

    (60) one_eff_formula -> AND_KEY . one_eff_formula_lst
    (67) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (68) one_eff_formula_lst -> . one_eff_formula
    (59) one_eff_formula -> . literal
    (60) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (61) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (62) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (63) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (64) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (65) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (66) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 133
    ONEOF_KEY       shift and go to state 134
    WHEN_KEY        shift and go to state 135
    LPAREN          shift and go to state 130
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    one_eff_formula_lst            shift and go to state 163
    one_eff_formula                shift and go to state 164
    literal                        shift and go to state 132
    predicate                      shift and go to state 126

state 134

    (61) one_eff_formula -> ONEOF_KEY . atomic_eff_lst
    (69) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (70) atomic_eff_lst -> . atomic_eff
    (71) atomic_eff -> . literal
    (72) atomic_eff -> . AND_KEY literal_lst
    (73) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (74) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 168
    LPAREN          shift and go to state 169
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    atomic_eff_lst                 shift and go to state 165
    atomic_eff                     shift and go to state 166
    literal                        shift and go to state 167
    predicate                      shift and go to state 126

state 135

    (62) one_eff_formula -> WHEN_KEY . formula atomic_eff
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 170
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 136

    (77) literal -> LPAREN . NOT_KEY predicate RPAREN
    (79) predicate -> LPAREN . NAME variables_lst RPAREN
    (80) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 159
    NAME            shift and go to state 160
    EQUALS          shift and go to state 161


state 137

    (49) formula -> LPAREN AND_KEY . formula_lst RPAREN
    (56) formula_lst -> . formula formula_lst
    (57) formula_lst -> . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula_lst                    shift and go to state 171
    formula                        shift and go to state 148
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 138

    (50) formula -> LPAREN OR_KEY . formula_lst RPAREN
    (56) formula_lst -> . formula formula_lst
    (57) formula_lst -> . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula_lst                    shift and go to state 172
    formula                        shift and go to state 148
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 139

    (51) formula -> LPAREN NOT_KEY . formula RPAREN
    (77) literal -> LPAREN NOT_KEY . predicate RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 173
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 174
    predicate                      shift and go to state 175
    literal                        shift and go to state 119

state 140

    (52) formula -> LPAREN IMPLY_KEY . formula formula RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 176
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 141

    (53) formula -> LPAREN literal . RPAREN

    RPAREN          shift and go to state 177


state 142

    (54) formula -> LPAREN EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 178


state 143

    (55) formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 179


state 144

    (79) predicate -> LPAREN NAME . variables_lst RPAREN
    (81) predicate -> LPAREN NAME . RPAREN
    (82) predicate -> NAME . variables_lst
    (84) predicate -> NAME .
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 181
    VARIABLE        shift and go to state 93

  ! RPAREN          [ reduce using rule 84 (predicate -> NAME .) ]

    variables_lst                  shift and go to state 180

state 145

    (80) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN
    (83) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 182


state 146

    (41) precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .

    EFFECT_KEY      reduce using rule 41 (precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .)


state 147

    (43) formula -> AND_KEY formula_lst .

    RPAREN          reduce using rule 43 (formula -> AND_KEY formula_lst .)
    AND_KEY         reduce using rule 43 (formula -> AND_KEY formula_lst .)
    OR_KEY          reduce using rule 43 (formula -> AND_KEY formula_lst .)
    NOT_KEY         reduce using rule 43 (formula -> AND_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 43 (formula -> AND_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 43 (formula -> AND_KEY formula_lst .)
    FORALL_KEY      reduce using rule 43 (formula -> AND_KEY formula_lst .)
    LPAREN          reduce using rule 43 (formula -> AND_KEY formula_lst .)
    NAME            reduce using rule 43 (formula -> AND_KEY formula_lst .)
    EQUALS          reduce using rule 43 (formula -> AND_KEY formula_lst .)


state 148

    (56) formula_lst -> formula . formula_lst
    (57) formula_lst -> formula .
    (56) formula_lst -> . formula formula_lst
    (57) formula_lst -> . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for OR_KEY resolved as shift
  ! shift/reduce conflict for NOT_KEY resolved as shift
  ! shift/reduce conflict for IMPLY_KEY resolved as shift
  ! shift/reduce conflict for EXISTS_KEY resolved as shift
  ! shift/reduce conflict for FORALL_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 57 (formula_lst -> formula .)
    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

  ! AND_KEY         [ reduce using rule 57 (formula_lst -> formula .) ]
  ! OR_KEY          [ reduce using rule 57 (formula_lst -> formula .) ]
  ! NOT_KEY         [ reduce using rule 57 (formula_lst -> formula .) ]
  ! IMPLY_KEY       [ reduce using rule 57 (formula_lst -> formula .) ]
  ! EXISTS_KEY      [ reduce using rule 57 (formula_lst -> formula .) ]
  ! FORALL_KEY      [ reduce using rule 57 (formula_lst -> formula .) ]
  ! LPAREN          [ reduce using rule 57 (formula_lst -> formula .) ]
  ! NAME            [ reduce using rule 57 (formula_lst -> formula .) ]
  ! EQUALS          [ reduce using rule 57 (formula_lst -> formula .) ]

    formula                        shift and go to state 148
    formula_lst                    shift and go to state 183
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 149

    (44) formula -> OR_KEY formula_lst .

    RPAREN          reduce using rule 44 (formula -> OR_KEY formula_lst .)
    AND_KEY         reduce using rule 44 (formula -> OR_KEY formula_lst .)
    OR_KEY          reduce using rule 44 (formula -> OR_KEY formula_lst .)
    NOT_KEY         reduce using rule 44 (formula -> OR_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 44 (formula -> OR_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 44 (formula -> OR_KEY formula_lst .)
    FORALL_KEY      reduce using rule 44 (formula -> OR_KEY formula_lst .)
    LPAREN          reduce using rule 44 (formula -> OR_KEY formula_lst .)
    NAME            reduce using rule 44 (formula -> OR_KEY formula_lst .)
    EQUALS          reduce using rule 44 (formula -> OR_KEY formula_lst .)


state 150

    (45) formula -> NOT_KEY formula .

    RPAREN          reduce using rule 45 (formula -> NOT_KEY formula .)
    AND_KEY         reduce using rule 45 (formula -> NOT_KEY formula .)
    OR_KEY          reduce using rule 45 (formula -> NOT_KEY formula .)
    NOT_KEY         reduce using rule 45 (formula -> NOT_KEY formula .)
    IMPLY_KEY       reduce using rule 45 (formula -> NOT_KEY formula .)
    EXISTS_KEY      reduce using rule 45 (formula -> NOT_KEY formula .)
    FORALL_KEY      reduce using rule 45 (formula -> NOT_KEY formula .)
    LPAREN          reduce using rule 45 (formula -> NOT_KEY formula .)
    NAME            reduce using rule 45 (formula -> NOT_KEY formula .)
    EQUALS          reduce using rule 45 (formula -> NOT_KEY formula .)


state 151

    (46) formula -> IMPLY_KEY formula . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 184
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 152

    (47) formula -> EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula
    (85) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> . variables_lst HYPHEN type
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 93

    typed_variables_lst            shift and go to state 185
    variables_lst                  shift and go to state 92

state 153

    (48) formula -> FORALL_KEY LPAREN . typed_variables_lst RPAREN formula
    (85) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> . variables_lst HYPHEN type
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 93

    typed_variables_lst            shift and go to state 186
    variables_lst                  shift and go to state 92

state 154

    (82) predicate -> NAME variables_lst .

    RPAREN          reduce using rule 82 (predicate -> NAME variables_lst .)
    AND_KEY         reduce using rule 82 (predicate -> NAME variables_lst .)
    OR_KEY          reduce using rule 82 (predicate -> NAME variables_lst .)
    NOT_KEY         reduce using rule 82 (predicate -> NAME variables_lst .)
    IMPLY_KEY       reduce using rule 82 (predicate -> NAME variables_lst .)
    EXISTS_KEY      reduce using rule 82 (predicate -> NAME variables_lst .)
    FORALL_KEY      reduce using rule 82 (predicate -> NAME variables_lst .)
    LPAREN          reduce using rule 82 (predicate -> NAME variables_lst .)
    NAME            reduce using rule 82 (predicate -> NAME variables_lst .)
    EQUALS          reduce using rule 82 (predicate -> NAME variables_lst .)
    ONEOF_KEY       reduce using rule 82 (predicate -> NAME variables_lst .)
    WHEN_KEY        reduce using rule 82 (predicate -> NAME variables_lst .)


state 155

    (83) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 187


state 156

    (63) one_eff_formula -> LPAREN ONEOF_KEY . atomic_eff_lst RPAREN
    (69) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (70) atomic_eff_lst -> . atomic_eff
    (71) atomic_eff -> . literal
    (72) atomic_eff -> . AND_KEY literal_lst
    (73) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (74) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 168
    LPAREN          shift and go to state 169
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    atomic_eff_lst                 shift and go to state 188
    atomic_eff                     shift and go to state 166
    literal                        shift and go to state 167
    predicate                      shift and go to state 126

state 157

    (64) one_eff_formula -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 189
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 158

    (65) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (66) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    LPAREN          shift and go to state 190


state 159

    (77) literal -> LPAREN NOT_KEY . predicate RPAREN
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    LPAREN          shift and go to state 191
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    predicate                      shift and go to state 192

state 160

    (79) predicate -> LPAREN NAME . variables_lst RPAREN
    (81) predicate -> LPAREN NAME . RPAREN
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 181
    VARIABLE        shift and go to state 93

    variables_lst                  shift and go to state 193

state 161

    (80) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 194


state 162

    (58) effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .

    RPAREN          reduce using rule 58 (effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .)


state 163

    (60) one_eff_formula -> AND_KEY one_eff_formula_lst .

    RPAREN          reduce using rule 60 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    AND_KEY         reduce using rule 60 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 60 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    WHEN_KEY        reduce using rule 60 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    LPAREN          reduce using rule 60 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    NAME            reduce using rule 60 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    EQUALS          reduce using rule 60 (one_eff_formula -> AND_KEY one_eff_formula_lst .)


state 164

    (67) one_eff_formula_lst -> one_eff_formula . one_eff_formula_lst
    (68) one_eff_formula_lst -> one_eff_formula .
    (67) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (68) one_eff_formula_lst -> . one_eff_formula
    (59) one_eff_formula -> . literal
    (60) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (61) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (62) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (63) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (64) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (65) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (66) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for ONEOF_KEY resolved as shift
  ! shift/reduce conflict for WHEN_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 68 (one_eff_formula_lst -> one_eff_formula .)
    AND_KEY         shift and go to state 133
    ONEOF_KEY       shift and go to state 134
    WHEN_KEY        shift and go to state 135
    LPAREN          shift and go to state 130
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

  ! AND_KEY         [ reduce using rule 68 (one_eff_formula_lst -> one_eff_formula .) ]
  ! ONEOF_KEY       [ reduce using rule 68 (one_eff_formula_lst -> one_eff_formula .) ]
  ! WHEN_KEY        [ reduce using rule 68 (one_eff_formula_lst -> one_eff_formula .) ]
  ! LPAREN          [ reduce using rule 68 (one_eff_formula_lst -> one_eff_formula .) ]
  ! NAME            [ reduce using rule 68 (one_eff_formula_lst -> one_eff_formula .) ]
  ! EQUALS          [ reduce using rule 68 (one_eff_formula_lst -> one_eff_formula .) ]

    one_eff_formula                shift and go to state 164
    one_eff_formula_lst            shift and go to state 195
    literal                        shift and go to state 132
    predicate                      shift and go to state 126

state 165

    (61) one_eff_formula -> ONEOF_KEY atomic_eff_lst .

    RPAREN          reduce using rule 61 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    AND_KEY         reduce using rule 61 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 61 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    WHEN_KEY        reduce using rule 61 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    LPAREN          reduce using rule 61 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    NAME            reduce using rule 61 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    EQUALS          reduce using rule 61 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)


state 166

    (69) atomic_eff_lst -> atomic_eff . atomic_eff_lst
    (70) atomic_eff_lst -> atomic_eff .
    (69) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (70) atomic_eff_lst -> . atomic_eff
    (71) atomic_eff -> . literal
    (72) atomic_eff -> . AND_KEY literal_lst
    (73) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (74) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 70 (atomic_eff_lst -> atomic_eff .)
    ONEOF_KEY       reduce using rule 70 (atomic_eff_lst -> atomic_eff .)
    WHEN_KEY        reduce using rule 70 (atomic_eff_lst -> atomic_eff .)
    AND_KEY         shift and go to state 168
    LPAREN          shift and go to state 169
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

  ! AND_KEY         [ reduce using rule 70 (atomic_eff_lst -> atomic_eff .) ]
  ! LPAREN          [ reduce using rule 70 (atomic_eff_lst -> atomic_eff .) ]
  ! NAME            [ reduce using rule 70 (atomic_eff_lst -> atomic_eff .) ]
  ! EQUALS          [ reduce using rule 70 (atomic_eff_lst -> atomic_eff .) ]

    atomic_eff                     shift and go to state 166
    atomic_eff_lst                 shift and go to state 196
    literal                        shift and go to state 167
    predicate                      shift and go to state 126

state 167

    (71) atomic_eff -> literal .

    AND_KEY         reduce using rule 71 (atomic_eff -> literal .)
    LPAREN          reduce using rule 71 (atomic_eff -> literal .)
    NAME            reduce using rule 71 (atomic_eff -> literal .)
    EQUALS          reduce using rule 71 (atomic_eff -> literal .)
    RPAREN          reduce using rule 71 (atomic_eff -> literal .)
    ONEOF_KEY       reduce using rule 71 (atomic_eff -> literal .)
    WHEN_KEY        reduce using rule 71 (atomic_eff -> literal .)


state 168

    (72) atomic_eff -> AND_KEY . literal_lst
    (75) literal_lst -> . literal literal_lst
    (76) literal_lst -> . literal
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    LPAREN          shift and go to state 136
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    literal_lst                    shift and go to state 197
    literal                        shift and go to state 198
    predicate                      shift and go to state 126

state 169

    (73) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (74) atomic_eff -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> LPAREN . NOT_KEY predicate RPAREN
    (79) predicate -> LPAREN . NAME variables_lst RPAREN
    (80) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 199
    WHEN_KEY        shift and go to state 200
    NOT_KEY         shift and go to state 159
    NAME            shift and go to state 160
    EQUALS          shift and go to state 161


state 170

    (62) one_eff_formula -> WHEN_KEY formula . atomic_eff
    (71) atomic_eff -> . literal
    (72) atomic_eff -> . AND_KEY literal_lst
    (73) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (74) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 168
    LPAREN          shift and go to state 169
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    atomic_eff                     shift and go to state 201
    literal                        shift and go to state 167
    predicate                      shift and go to state 126

state 171

    (49) formula -> LPAREN AND_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 202


state 172

    (50) formula -> LPAREN OR_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 203


state 173

    (49) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (50) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (51) formula -> LPAREN . NOT_KEY formula RPAREN
    (52) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (53) formula -> LPAREN . literal RPAREN
    (54) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (79) predicate -> LPAREN . NAME variables_lst RPAREN
    (80) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> LPAREN . NAME RPAREN
    (77) literal -> LPAREN . NOT_KEY predicate RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 137
    OR_KEY          shift and go to state 138
    NOT_KEY         shift and go to state 139
    IMPLY_KEY       shift and go to state 140
    EXISTS_KEY      shift and go to state 142
    FORALL_KEY      shift and go to state 143
    NAME            shift and go to state 144
    EQUALS          shift and go to state 145
    LPAREN          shift and go to state 136

    literal                        shift and go to state 141
    predicate                      shift and go to state 126

state 174

    (51) formula -> LPAREN NOT_KEY formula . RPAREN

    RPAREN          shift and go to state 204


state 175

    (77) literal -> LPAREN NOT_KEY predicate . RPAREN
    (78) literal -> predicate .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 205

  ! RPAREN          [ reduce using rule 78 (literal -> predicate .) ]


state 176

    (52) formula -> LPAREN IMPLY_KEY formula . formula RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 206
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 177

    (53) formula -> LPAREN literal RPAREN .

    RPAREN          reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    AND_KEY         reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    OR_KEY          reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    NOT_KEY         reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    IMPLY_KEY       reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    EXISTS_KEY      reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    FORALL_KEY      reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    LPAREN          reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    NAME            reduce using rule 53 (formula -> LPAREN literal RPAREN .)
    EQUALS          reduce using rule 53 (formula -> LPAREN literal RPAREN .)


state 178

    (54) formula -> LPAREN EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (85) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> . variables_lst HYPHEN type
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 93

    typed_variables_lst            shift and go to state 207
    variables_lst                  shift and go to state 92

state 179

    (55) formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (85) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> . variables_lst HYPHEN type
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 93

    typed_variables_lst            shift and go to state 208
    variables_lst                  shift and go to state 92

state 180

    (79) predicate -> LPAREN NAME variables_lst . RPAREN
    (82) predicate -> NAME variables_lst .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 209

  ! RPAREN          [ reduce using rule 82 (predicate -> NAME variables_lst .) ]


state 181

    (81) predicate -> LPAREN NAME RPAREN .

    RPAREN          reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    AND_KEY         reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    OR_KEY          reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    NOT_KEY         reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    IMPLY_KEY       reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    EXISTS_KEY      reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    FORALL_KEY      reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    NAME            reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    EQUALS          reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    ONEOF_KEY       reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)
    WHEN_KEY        reduce using rule 81 (predicate -> LPAREN NAME RPAREN .)


state 182

    (80) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN
    (83) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 210


state 183

    (56) formula_lst -> formula formula_lst .

    AND_KEY         reduce using rule 56 (formula_lst -> formula formula_lst .)
    OR_KEY          reduce using rule 56 (formula_lst -> formula formula_lst .)
    NOT_KEY         reduce using rule 56 (formula_lst -> formula formula_lst .)
    IMPLY_KEY       reduce using rule 56 (formula_lst -> formula formula_lst .)
    EXISTS_KEY      reduce using rule 56 (formula_lst -> formula formula_lst .)
    FORALL_KEY      reduce using rule 56 (formula_lst -> formula formula_lst .)
    LPAREN          reduce using rule 56 (formula_lst -> formula formula_lst .)
    NAME            reduce using rule 56 (formula_lst -> formula formula_lst .)
    EQUALS          reduce using rule 56 (formula_lst -> formula formula_lst .)
    RPAREN          reduce using rule 56 (formula_lst -> formula formula_lst .)


state 184

    (46) formula -> IMPLY_KEY formula formula .

    RPAREN          reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    AND_KEY         reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    OR_KEY          reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    NOT_KEY         reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    IMPLY_KEY       reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    EXISTS_KEY      reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    FORALL_KEY      reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    LPAREN          reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    NAME            reduce using rule 46 (formula -> IMPLY_KEY formula formula .)
    EQUALS          reduce using rule 46 (formula -> IMPLY_KEY formula formula .)


state 185

    (47) formula -> EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 211


state 186

    (48) formula -> FORALL_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 212


state 187

    (83) predicate -> EQUALS VARIABLE VARIABLE .

    RPAREN          reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    AND_KEY         reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    OR_KEY          reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    NOT_KEY         reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    IMPLY_KEY       reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    EXISTS_KEY      reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    FORALL_KEY      reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    LPAREN          reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    NAME            reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    EQUALS          reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    ONEOF_KEY       reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)
    WHEN_KEY        reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .)


state 188

    (63) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst . RPAREN

    RPAREN          shift and go to state 213


state 189

    (64) one_eff_formula -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (71) atomic_eff -> . literal
    (72) atomic_eff -> . AND_KEY literal_lst
    (73) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (74) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 168
    LPAREN          shift and go to state 169
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    atomic_eff                     shift and go to state 214
    literal                        shift and go to state 167
    predicate                      shift and go to state 126

state 190

    (65) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN atomic_eff RPAREN
    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (85) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (86) typed_variables_lst -> . variables_lst HYPHEN type
    (87) variables_lst -> . VARIABLE variables_lst
    (88) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 93

    typed_variables_lst            shift and go to state 215
    variables_lst                  shift and go to state 92

state 191

    (79) predicate -> LPAREN . NAME variables_lst RPAREN
    (80) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 160
    EQUALS          shift and go to state 161


state 192

    (77) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 205


state 193

    (79) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 209


state 194

    (80) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 216


state 195

    (67) one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .

    AND_KEY         reduce using rule 67 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 67 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    WHEN_KEY        reduce using rule 67 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    LPAREN          reduce using rule 67 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    NAME            reduce using rule 67 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    EQUALS          reduce using rule 67 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    RPAREN          reduce using rule 67 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)


state 196

    (69) atomic_eff_lst -> atomic_eff atomic_eff_lst .

    RPAREN          reduce using rule 69 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    AND_KEY         reduce using rule 69 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 69 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    WHEN_KEY        reduce using rule 69 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    LPAREN          reduce using rule 69 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    NAME            reduce using rule 69 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    EQUALS          reduce using rule 69 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)


state 197

    (72) atomic_eff -> AND_KEY literal_lst .

    AND_KEY         reduce using rule 72 (atomic_eff -> AND_KEY literal_lst .)
    LPAREN          reduce using rule 72 (atomic_eff -> AND_KEY literal_lst .)
    NAME            reduce using rule 72 (atomic_eff -> AND_KEY literal_lst .)
    EQUALS          reduce using rule 72 (atomic_eff -> AND_KEY literal_lst .)
    RPAREN          reduce using rule 72 (atomic_eff -> AND_KEY literal_lst .)
    ONEOF_KEY       reduce using rule 72 (atomic_eff -> AND_KEY literal_lst .)
    WHEN_KEY        reduce using rule 72 (atomic_eff -> AND_KEY literal_lst .)


state 198

    (75) literal_lst -> literal . literal_lst
    (76) literal_lst -> literal .
    (75) literal_lst -> . literal literal_lst
    (76) literal_lst -> . literal
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    AND_KEY         reduce using rule 76 (literal_lst -> literal .)
    RPAREN          reduce using rule 76 (literal_lst -> literal .)
    ONEOF_KEY       reduce using rule 76 (literal_lst -> literal .)
    WHEN_KEY        reduce using rule 76 (literal_lst -> literal .)
    LPAREN          shift and go to state 136
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

  ! LPAREN          [ reduce using rule 76 (literal_lst -> literal .) ]
  ! NAME            [ reduce using rule 76 (literal_lst -> literal .) ]
  ! EQUALS          [ reduce using rule 76 (literal_lst -> literal .) ]

    literal                        shift and go to state 198
    literal_lst                    shift and go to state 217
    predicate                      shift and go to state 126

state 199

    (73) atomic_eff -> LPAREN AND_KEY . literal_lst RPAREN
    (75) literal_lst -> . literal literal_lst
    (76) literal_lst -> . literal
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    LPAREN          shift and go to state 136
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    literal_lst                    shift and go to state 218
    literal                        shift and go to state 198
    predicate                      shift and go to state 126

state 200

    (74) atomic_eff -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 219
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 201

    (62) one_eff_formula -> WHEN_KEY formula atomic_eff .

    RPAREN          reduce using rule 62 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    AND_KEY         reduce using rule 62 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    ONEOF_KEY       reduce using rule 62 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    WHEN_KEY        reduce using rule 62 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    LPAREN          reduce using rule 62 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    NAME            reduce using rule 62 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    EQUALS          reduce using rule 62 (one_eff_formula -> WHEN_KEY formula atomic_eff .)


state 202

    (49) formula -> LPAREN AND_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NAME            reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 49 (formula -> LPAREN AND_KEY formula_lst RPAREN .)


state 203

    (50) formula -> LPAREN OR_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NAME            reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 50 (formula -> LPAREN OR_KEY formula_lst RPAREN .)


state 204

    (51) formula -> LPAREN NOT_KEY formula RPAREN .

    RPAREN          reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    AND_KEY         reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    OR_KEY          reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NOT_KEY         reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    IMPLY_KEY       reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EXISTS_KEY      reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    FORALL_KEY      reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    LPAREN          reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NAME            reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EQUALS          reduce using rule 51 (formula -> LPAREN NOT_KEY formula RPAREN .)


state 205

    (77) literal -> LPAREN NOT_KEY predicate RPAREN .

    RPAREN          reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    AND_KEY         reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    OR_KEY          reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NOT_KEY         reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    IMPLY_KEY       reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EXISTS_KEY      reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    FORALL_KEY      reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NAME            reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EQUALS          reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    ONEOF_KEY       reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    WHEN_KEY        reduce using rule 77 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 206

    (52) formula -> LPAREN IMPLY_KEY formula formula . RPAREN

    RPAREN          shift and go to state 220


state 207

    (54) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 221


state 208

    (55) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 222


state 209

    (79) predicate -> LPAREN NAME variables_lst RPAREN .

    RPAREN          reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    AND_KEY         reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    OR_KEY          reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NOT_KEY         reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    IMPLY_KEY       reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EXISTS_KEY      reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    FORALL_KEY      reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NAME            reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EQUALS          reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    ONEOF_KEY       reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)
    WHEN_KEY        reduce using rule 79 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 210

    (80) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN
    (83) predicate -> EQUALS VARIABLE VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 223

  ! RPAREN          [ reduce using rule 83 (predicate -> EQUALS VARIABLE VARIABLE .) ]


state 211

    (47) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 224
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 212

    (48) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN . formula
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 225
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 213

    (63) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .

    RPAREN          reduce using rule 63 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    AND_KEY         reduce using rule 63 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    ONEOF_KEY       reduce using rule 63 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    WHEN_KEY        reduce using rule 63 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    LPAREN          reduce using rule 63 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    NAME            reduce using rule 63 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    EQUALS          reduce using rule 63 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)


state 214

    (64) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 226


state 215

    (65) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN atomic_eff RPAREN
    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    RPAREN          shift and go to state 227


state 216

    (80) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 223


state 217

    (75) literal_lst -> literal literal_lst .

    AND_KEY         reduce using rule 75 (literal_lst -> literal literal_lst .)
    LPAREN          reduce using rule 75 (literal_lst -> literal literal_lst .)
    NAME            reduce using rule 75 (literal_lst -> literal literal_lst .)
    EQUALS          reduce using rule 75 (literal_lst -> literal literal_lst .)
    RPAREN          reduce using rule 75 (literal_lst -> literal literal_lst .)
    ONEOF_KEY       reduce using rule 75 (literal_lst -> literal literal_lst .)
    WHEN_KEY        reduce using rule 75 (literal_lst -> literal literal_lst .)


state 218

    (73) atomic_eff -> LPAREN AND_KEY literal_lst . RPAREN

    RPAREN          shift and go to state 228


state 219

    (74) atomic_eff -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (71) atomic_eff -> . literal
    (72) atomic_eff -> . AND_KEY literal_lst
    (73) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (74) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 168
    LPAREN          shift and go to state 169
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    atomic_eff                     shift and go to state 229
    literal                        shift and go to state 167
    predicate                      shift and go to state 126

state 220

    (52) formula -> LPAREN IMPLY_KEY formula formula RPAREN .

    RPAREN          reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    AND_KEY         reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    OR_KEY          reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NOT_KEY         reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    IMPLY_KEY       reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EXISTS_KEY      reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    FORALL_KEY      reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    LPAREN          reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NAME            reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EQUALS          reduce using rule 52 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)


state 221

    (54) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 230
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 222

    (55) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 231
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 223

    (80) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    RPAREN          reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    AND_KEY         reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    OR_KEY          reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NOT_KEY         reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    IMPLY_KEY       reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EXISTS_KEY      reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    FORALL_KEY      reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NAME            reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EQUALS          reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    ONEOF_KEY       reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    WHEN_KEY        reduce using rule 80 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 224

    (47) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 47 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)


state 225

    (48) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 48 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)


state 226

    (64) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    RPAREN          reduce using rule 64 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    AND_KEY         reduce using rule 64 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 64 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 64 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 64 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 64 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 64 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 227

    (65) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . atomic_eff RPAREN
    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (71) atomic_eff -> . literal
    (72) atomic_eff -> . AND_KEY literal_lst
    (73) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (74) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    LPAREN          shift and go to state 232
    AND_KEY         shift and go to state 168
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    atomic_eff                     shift and go to state 233
    literal                        shift and go to state 167
    predicate                      shift and go to state 126

state 228

    (73) atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .

    AND_KEY         reduce using rule 73 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    LPAREN          reduce using rule 73 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    NAME            reduce using rule 73 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    EQUALS          reduce using rule 73 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    RPAREN          reduce using rule 73 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    ONEOF_KEY       reduce using rule 73 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    WHEN_KEY        reduce using rule 73 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)


state 229

    (74) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 234


state 230

    (54) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 235


state 231

    (55) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 236


state 232

    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN . WHEN_KEY formula atomic_eff RPAREN RPAREN
    (73) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (74) atomic_eff -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> LPAREN . NOT_KEY predicate RPAREN
    (79) predicate -> LPAREN . NAME variables_lst RPAREN
    (80) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> LPAREN . NAME RPAREN

    WHEN_KEY        shift and go to state 237
    AND_KEY         shift and go to state 199
    NOT_KEY         shift and go to state 159
    NAME            shift and go to state 160
    EQUALS          shift and go to state 161


state 233

    (65) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff . RPAREN

    RPAREN          shift and go to state 238


state 234

    (74) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    AND_KEY         reduce using rule 74 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 74 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 74 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 74 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    RPAREN          reduce using rule 74 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 74 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 74 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 235

    (54) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 54 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 236

    (55) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 55 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 237

    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY . formula atomic_eff RPAREN RPAREN
    (74) atomic_eff -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (42) formula -> . literal
    (43) formula -> . AND_KEY formula_lst
    (44) formula -> . OR_KEY formula_lst
    (45) formula -> . NOT_KEY formula
    (46) formula -> . IMPLY_KEY formula formula
    (47) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (48) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (49) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (50) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (51) formula -> . LPAREN NOT_KEY formula RPAREN
    (52) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (53) formula -> . LPAREN literal RPAREN
    (54) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (55) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 120
    OR_KEY          shift and go to state 121
    NOT_KEY         shift and go to state 122
    IMPLY_KEY       shift and go to state 123
    EXISTS_KEY      shift and go to state 124
    FORALL_KEY      shift and go to state 125
    LPAREN          shift and go to state 117
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    formula                        shift and go to state 239
    literal                        shift and go to state 119
    predicate                      shift and go to state 126

state 238

    (65) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .

    RPAREN          reduce using rule 65 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    AND_KEY         reduce using rule 65 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 65 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 65 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    LPAREN          reduce using rule 65 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    NAME            reduce using rule 65 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    EQUALS          reduce using rule 65 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)


state 239

    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula . atomic_eff RPAREN RPAREN
    (74) atomic_eff -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (71) atomic_eff -> . literal
    (72) atomic_eff -> . AND_KEY literal_lst
    (73) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (74) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (77) literal -> . LPAREN NOT_KEY predicate RPAREN
    (78) literal -> . predicate
    (79) predicate -> . LPAREN NAME variables_lst RPAREN
    (80) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (81) predicate -> . LPAREN NAME RPAREN
    (82) predicate -> . NAME variables_lst
    (83) predicate -> . EQUALS VARIABLE VARIABLE
    (84) predicate -> . NAME

    AND_KEY         shift and go to state 168
    LPAREN          shift and go to state 169
    NAME            shift and go to state 127
    EQUALS          shift and go to state 128

    atomic_eff                     shift and go to state 240
    literal                        shift and go to state 167
    predicate                      shift and go to state 126

state 240

    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff . RPAREN RPAREN
    (74) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 241


state 241

    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN . RPAREN
    (74) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 242

  ! RPAREN          [ reduce using rule 74 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .) ]


state 242

    (66) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .

    RPAREN          reduce using rule 66 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    AND_KEY         reduce using rule 66 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    ONEOF_KEY       reduce using rule 66 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    WHEN_KEY        reduce using rule 66 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    LPAREN          reduce using rule 66 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    NAME            reduce using rule 66 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    EQUALS          reduce using rule 66 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 148 resolved as shift
WARNING: shift/reduce conflict for OR_KEY in state 148 resolved as shift
WARNING: shift/reduce conflict for NOT_KEY in state 148 resolved as shift
WARNING: shift/reduce conflict for IMPLY_KEY in state 148 resolved as shift
WARNING: shift/reduce conflict for EXISTS_KEY in state 148 resolved as shift
WARNING: shift/reduce conflict for FORALL_KEY in state 148 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 148 resolved as shift
WARNING: shift/reduce conflict for NAME in state 148 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 148 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 164 resolved as shift
WARNING: shift/reduce conflict for ONEOF_KEY in state 164 resolved as shift
WARNING: shift/reduce conflict for WHEN_KEY in state 164 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 164 resolved as shift
WARNING: shift/reduce conflict for NAME in state 164 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 164 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 166 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 166 resolved as shift
WARNING: shift/reduce conflict for NAME in state 166 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 166 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 175 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 180 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 198 resolved as shift
WARNING: shift/reduce conflict for NAME in state 198 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 198 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 210 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 241 resolved as shift
