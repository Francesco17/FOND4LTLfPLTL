Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 3     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 4     require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 5     require_key_lst -> require_key require_key_lst
Rule 6     require_key_lst -> require_key
Rule 7     require_key -> STRIPS_KEY
Rule 8     require_key -> EQUALITY_KEY
Rule 9     require_key -> TYPING_KEY
Rule 10    require_key -> ADL_KEY
Rule 11    require_key -> ND_KEY
Rule 12    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 13    names_lst -> NAME names_lst
Rule 14    names_lst -> NAME
Rule 15    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 16    predicate_def_lst -> predicate_def predicate_def_lst
Rule 17    predicate_def_lst -> predicate_def
Rule 18    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 19    predicate_def -> LPAREN NAME RPAREN
Rule 20    action_def_lst -> action_def action_def_lst
Rule 21    action_def_lst -> action_def
Rule 22    action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN
Rule 23    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 24    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 25    precond_def -> PRECONDITION_KEY LPAREN formula RPAREN
Rule 26    formula -> literal
Rule 27    formula -> AND_KEY formula_lst
Rule 28    formula -> OR_KEY formula_lst
Rule 29    formula -> NOT_KEY formula
Rule 30    formula -> IMPLY_KEY formula formula
Rule 31    formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
Rule 32    formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula
Rule 33    formula -> LPAREN AND_KEY formula_lst RPAREN
Rule 34    formula -> LPAREN OR_KEY formula_lst RPAREN
Rule 35    formula -> LPAREN NOT_KEY formula RPAREN
Rule 36    formula -> LPAREN IMPLY_KEY formula formula RPAREN
Rule 37    formula -> LPAREN literal RPAREN
Rule 38    formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 39    formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 40    formula_lst -> formula formula_lst
Rule 41    formula_lst -> formula
Rule 42    effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN
Rule 43    one_eff_formula -> literal
Rule 44    one_eff_formula -> AND_KEY one_eff_formula_lst
Rule 45    one_eff_formula -> ONEOF_KEY atomic_eff_lst
Rule 46    one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN
Rule 47    one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 48    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
Rule 49    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
Rule 50    one_eff_formula_lst -> one_eff_formula one_eff_formula_lst
Rule 51    one_eff_formula_lst -> one_eff_formula
Rule 52    atomic_eff_lst -> atomic_eff atomic_eff_lst
Rule 53    atomic_eff_lst -> atomic_eff
Rule 54    atomic_eff -> literal
Rule 55    atomic_eff -> AND_KEY literal_lst
Rule 56    atomic_eff -> LPAREN AND_KEY literal_lst RPAREN
Rule 57    literal_lst -> literal literal_lst
Rule 58    literal_lst -> literal
Rule 59    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 60    literal -> predicate
Rule 61    predicate -> LPAREN NAME variables_lst RPAREN
Rule 62    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 63    predicate -> LPAREN NAME RPAREN
Rule 64    predicate -> NAME variables_lst
Rule 65    predicate -> EQUALS VARIABLE VARIABLE
Rule 66    predicate -> NAME
Rule 67    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 68    typed_variables_lst -> variables_lst HYPHEN type
Rule 69    variables_lst -> VARIABLE variables_lst
Rule 70    variables_lst -> VARIABLE
Rule 71    type -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 22
ADL_KEY              : 10
AND_KEY              : 27 33 44 55 56
DEFINE_KEY           : 2
DOMAIN_KEY           : 3
EFFECT_KEY           : 42
EQUALITY_KEY         : 8
EQUALS               : 62 65
EXISTS_KEY           : 31 38
FORALL_KEY           : 32 39 48 49
HYPHEN               : 67 68
IMPLY_KEY            : 30 36
LPAREN               : 2 3 4 12 15 18 19 22 23 24 25 31 32 33 34 35 36 37 38 38 39 39 42 46 47 48 48 49 49 49 56 59 61 62 63
NAME                 : 3 13 14 18 19 22 61 63 64 66 71
ND_KEY               : 11
NOT_KEY              : 29 35 59
ONEOF_KEY            : 45 46
OR_KEY               : 28 34
PARAMETERS_KEY       : 23 24
PRECONDITION_KEY     : 25
PREDICATES_KEY       : 15
REQUIREMENTS_KEY     : 4
RPAREN               : 2 3 4 12 15 18 19 22 23 24 25 31 32 33 34 35 36 37 38 38 39 39 42 46 47 48 48 49 49 49 56 59 61 62 63
STRIPS_KEY           : 7
TYPES_KEY            : 12
TYPING_KEY           : 9
VARIABLE             : 62 62 65 65 69 70
WHEN_KEY             : 47 49
error                : 

Nonterminals, with rules where they appear

action_def           : 20 21
action_def_lst       : 2 20
atomic_eff           : 47 48 49 52 53
atomic_eff_lst       : 45 46 52
domain               : 1
domain_def           : 2
effects_def          : 22
formula              : 25 29 30 30 31 32 35 36 36 38 39 40 41 47 49
formula_lst          : 27 28 33 34 40
literal              : 26 37 43 54 57 58
literal_lst          : 55 56 57
names_lst            : 12 13
one_eff_formula      : 42 50 51
one_eff_formula_lst  : 44 50
parameters_def       : 22
pddl                 : 0
precond_def          : 22
predicate            : 59 60
predicate_def        : 16 17
predicate_def_lst    : 15 16
predicates_def       : 2
require_def          : 2
require_key          : 5 6
require_key_lst      : 4 5
type                 : 67 68
typed_variables_lst  : 18 23 31 32 38 39 48 49 67
types_def            : 2
variables_lst        : 61 64 67 68 69

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN

    LPAREN          shift and go to state 3

    pddl                           shift and go to state 1
    domain                         shift and go to state 2

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN

    DEFINE_KEY      shift and go to state 4


state 4

    (2) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (3) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 5

    domain_def                     shift and go to state 6

state 5

    (3) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 7


state 6

    (2) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (4) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 8

    require_def                    shift and go to state 9

state 7

    (3) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 10


state 8

    (4) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 11


state 9

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (12) types_def -> . LPAREN TYPES_KEY names_lst RPAREN

    LPAREN          shift and go to state 12

    types_def                      shift and go to state 13

state 10

    (3) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 14


state 11

    (4) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (5) require_key_lst -> . require_key require_key_lst
    (6) require_key_lst -> . require_key
    (7) require_key -> . STRIPS_KEY
    (8) require_key -> . EQUALITY_KEY
    (9) require_key -> . TYPING_KEY
    (10) require_key -> . ADL_KEY
    (11) require_key -> . ND_KEY

    STRIPS_KEY      shift and go to state 17
    EQUALITY_KEY    shift and go to state 18
    TYPING_KEY      shift and go to state 19
    ADL_KEY         shift and go to state 20
    ND_KEY          shift and go to state 21

    require_key_lst                shift and go to state 15
    require_key                    shift and go to state 16

state 12

    (12) types_def -> LPAREN . TYPES_KEY names_lst RPAREN

    TYPES_KEY       shift and go to state 22


state 13

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (15) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 23

    predicates_def                 shift and go to state 24

state 14

    (3) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 3 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 15

    (4) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 25


state 16

    (5) require_key_lst -> require_key . require_key_lst
    (6) require_key_lst -> require_key .
    (5) require_key_lst -> . require_key require_key_lst
    (6) require_key_lst -> . require_key
    (7) require_key -> . STRIPS_KEY
    (8) require_key -> . EQUALITY_KEY
    (9) require_key -> . TYPING_KEY
    (10) require_key -> . ADL_KEY
    (11) require_key -> . ND_KEY

    RPAREN          reduce using rule 6 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 17
    EQUALITY_KEY    shift and go to state 18
    TYPING_KEY      shift and go to state 19
    ADL_KEY         shift and go to state 20
    ND_KEY          shift and go to state 21

    require_key                    shift and go to state 16
    require_key_lst                shift and go to state 26

state 17

    (7) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 7 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 7 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 7 (require_key -> STRIPS_KEY .)
    ADL_KEY         reduce using rule 7 (require_key -> STRIPS_KEY .)
    ND_KEY          reduce using rule 7 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 7 (require_key -> STRIPS_KEY .)


state 18

    (8) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 8 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 8 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 8 (require_key -> EQUALITY_KEY .)
    ADL_KEY         reduce using rule 8 (require_key -> EQUALITY_KEY .)
    ND_KEY          reduce using rule 8 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 8 (require_key -> EQUALITY_KEY .)


state 19

    (9) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 9 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 9 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 9 (require_key -> TYPING_KEY .)
    ADL_KEY         reduce using rule 9 (require_key -> TYPING_KEY .)
    ND_KEY          reduce using rule 9 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 9 (require_key -> TYPING_KEY .)


state 20

    (10) require_key -> ADL_KEY .

    STRIPS_KEY      reduce using rule 10 (require_key -> ADL_KEY .)
    EQUALITY_KEY    reduce using rule 10 (require_key -> ADL_KEY .)
    TYPING_KEY      reduce using rule 10 (require_key -> ADL_KEY .)
    ADL_KEY         reduce using rule 10 (require_key -> ADL_KEY .)
    ND_KEY          reduce using rule 10 (require_key -> ADL_KEY .)
    RPAREN          reduce using rule 10 (require_key -> ADL_KEY .)


state 21

    (11) require_key -> ND_KEY .

    STRIPS_KEY      reduce using rule 11 (require_key -> ND_KEY .)
    EQUALITY_KEY    reduce using rule 11 (require_key -> ND_KEY .)
    TYPING_KEY      reduce using rule 11 (require_key -> ND_KEY .)
    ADL_KEY         reduce using rule 11 (require_key -> ND_KEY .)
    ND_KEY          reduce using rule 11 (require_key -> ND_KEY .)
    RPAREN          reduce using rule 11 (require_key -> ND_KEY .)


state 22

    (12) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (13) names_lst -> . NAME names_lst
    (14) names_lst -> . NAME

    NAME            shift and go to state 28

    names_lst                      shift and go to state 27

state 23

    (15) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 29


state 24

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (20) action_def_lst -> . action_def action_def_lst
    (21) action_def_lst -> . action_def
    (22) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 30

    action_def_lst                 shift and go to state 31
    action_def                     shift and go to state 32

state 25

    (4) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 4 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 26

    (5) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 5 (require_key_lst -> require_key require_key_lst .)


state 27

    (12) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 33


state 28

    (13) names_lst -> NAME . names_lst
    (14) names_lst -> NAME .
    (13) names_lst -> . NAME names_lst
    (14) names_lst -> . NAME

    RPAREN          reduce using rule 14 (names_lst -> NAME .)
    NAME            shift and go to state 28

    names_lst                      shift and go to state 34

state 29

    (15) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (16) predicate_def_lst -> . predicate_def predicate_def_lst
    (17) predicate_def_lst -> . predicate_def
    (18) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (19) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 35

    predicate_def_lst              shift and go to state 36
    predicate_def                  shift and go to state 37

state 30

    (22) action_def -> LPAREN . ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    ACTION_KEY      shift and go to state 38


state 31

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 39


state 32

    (20) action_def_lst -> action_def . action_def_lst
    (21) action_def_lst -> action_def .
    (20) action_def_lst -> . action_def action_def_lst
    (21) action_def_lst -> . action_def
    (22) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    RPAREN          reduce using rule 21 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 30

    action_def                     shift and go to state 32
    action_def_lst                 shift and go to state 40

state 33

    (12) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 12 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 34

    (13) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 13 (names_lst -> NAME names_lst .)


state 35

    (18) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (19) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 41


state 36

    (15) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 42


state 37

    (16) predicate_def_lst -> predicate_def . predicate_def_lst
    (17) predicate_def_lst -> predicate_def .
    (16) predicate_def_lst -> . predicate_def predicate_def_lst
    (17) predicate_def_lst -> . predicate_def
    (18) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (19) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 17 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 35

    predicate_def                  shift and go to state 37
    predicate_def_lst              shift and go to state 43

state 38

    (22) action_def -> LPAREN ACTION_KEY . NAME parameters_def precond_def effects_def RPAREN

    NAME            shift and go to state 44


state 39

    (2) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 2 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 40

    (20) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 20 (action_def_lst -> action_def action_def_lst .)


state 41

    (18) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (19) predicate_def -> LPAREN NAME . RPAREN
    (67) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 46
    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 45
    variables_lst                  shift and go to state 47

state 42

    (15) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 15 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 43

    (16) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 16 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 44

    (22) action_def -> LPAREN ACTION_KEY NAME . parameters_def precond_def effects_def RPAREN
    (23) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (24) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 50

    parameters_def                 shift and go to state 49

state 45

    (18) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 51


state 46

    (19) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 19 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 19 (predicate_def -> LPAREN NAME RPAREN .)


state 47

    (67) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 52


state 48

    (69) variables_lst -> VARIABLE . variables_lst
    (70) variables_lst -> VARIABLE .
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 70 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 70 (variables_lst -> VARIABLE .)
    AND_KEY         reduce using rule 70 (variables_lst -> VARIABLE .)
    OR_KEY          reduce using rule 70 (variables_lst -> VARIABLE .)
    NOT_KEY         reduce using rule 70 (variables_lst -> VARIABLE .)
    IMPLY_KEY       reduce using rule 70 (variables_lst -> VARIABLE .)
    EXISTS_KEY      reduce using rule 70 (variables_lst -> VARIABLE .)
    FORALL_KEY      reduce using rule 70 (variables_lst -> VARIABLE .)
    LPAREN          reduce using rule 70 (variables_lst -> VARIABLE .)
    NAME            reduce using rule 70 (variables_lst -> VARIABLE .)
    EQUALS          reduce using rule 70 (variables_lst -> VARIABLE .)
    ONEOF_KEY       reduce using rule 70 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 48

    variables_lst                  shift and go to state 53

state 49

    (22) action_def -> LPAREN ACTION_KEY NAME parameters_def . precond_def effects_def RPAREN
    (25) precond_def -> . PRECONDITION_KEY LPAREN formula RPAREN

    PRECONDITION_KEY shift and go to state 55

    precond_def                    shift and go to state 54

state 50

    (23) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (24) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 56


state 51

    (18) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 18 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 18 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 52

    (67) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (68) typed_variables_lst -> variables_lst HYPHEN . type
    (71) type -> . NAME

    NAME            shift and go to state 58

    type                           shift and go to state 57

state 53

    (69) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    AND_KEY         reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    OR_KEY          reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    NOT_KEY         reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    IMPLY_KEY       reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    EXISTS_KEY      reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    FORALL_KEY      reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    LPAREN          reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    NAME            reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    EQUALS          reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)
    ONEOF_KEY       reduce using rule 69 (variables_lst -> VARIABLE variables_lst .)


state 54

    (22) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def . effects_def RPAREN
    (42) effects_def -> . EFFECT_KEY LPAREN one_eff_formula RPAREN

    EFFECT_KEY      shift and go to state 60

    effects_def                    shift and go to state 59

state 55

    (25) precond_def -> PRECONDITION_KEY . LPAREN formula RPAREN

    LPAREN          shift and go to state 61


state 56

    (23) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (24) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (67) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 63
    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 62
    variables_lst                  shift and go to state 47

state 57

    (67) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (68) typed_variables_lst -> variables_lst HYPHEN type .
    (67) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 68 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 48

    variables_lst                  shift and go to state 47
    typed_variables_lst            shift and go to state 64

state 58

    (71) type -> NAME .

    VARIABLE        reduce using rule 71 (type -> NAME .)
    RPAREN          reduce using rule 71 (type -> NAME .)


state 59

    (22) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def . RPAREN

    RPAREN          shift and go to state 65


state 60

    (42) effects_def -> EFFECT_KEY . LPAREN one_eff_formula RPAREN

    LPAREN          shift and go to state 66


state 61

    (25) precond_def -> PRECONDITION_KEY LPAREN . formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 68
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 62

    (23) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 79


state 63

    (24) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 24 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 64

    (67) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 67 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 65

    (22) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .

    LPAREN          reduce using rule 22 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)
    RPAREN          reduce using rule 22 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)


state 66

    (42) effects_def -> EFFECT_KEY LPAREN . one_eff_formula RPAREN
    (43) one_eff_formula -> . literal
    (44) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (45) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (46) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (47) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (48) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 83
    ONEOF_KEY       shift and go to state 84
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    one_eff_formula                shift and go to state 81
    literal                        shift and go to state 82
    predicate                      shift and go to state 76

state 67

    (33) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (34) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (35) formula -> LPAREN . NOT_KEY formula RPAREN
    (36) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (37) formula -> LPAREN . literal RPAREN
    (38) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> LPAREN . NOT_KEY predicate RPAREN
    (61) predicate -> LPAREN . NAME variables_lst RPAREN
    (62) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> LPAREN . NAME RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 86
    OR_KEY          shift and go to state 87
    NOT_KEY         shift and go to state 88
    IMPLY_KEY       shift and go to state 89
    EXISTS_KEY      shift and go to state 91
    FORALL_KEY      shift and go to state 92
    NAME            shift and go to state 93
    EQUALS          shift and go to state 94
    LPAREN          shift and go to state 85

    literal                        shift and go to state 90
    predicate                      shift and go to state 76

state 68

    (25) precond_def -> PRECONDITION_KEY LPAREN formula . RPAREN

    RPAREN          shift and go to state 95


state 69

    (26) formula -> literal .

    RPAREN          reduce using rule 26 (formula -> literal .)
    AND_KEY         reduce using rule 26 (formula -> literal .)
    OR_KEY          reduce using rule 26 (formula -> literal .)
    NOT_KEY         reduce using rule 26 (formula -> literal .)
    IMPLY_KEY       reduce using rule 26 (formula -> literal .)
    EXISTS_KEY      reduce using rule 26 (formula -> literal .)
    FORALL_KEY      reduce using rule 26 (formula -> literal .)
    LPAREN          reduce using rule 26 (formula -> literal .)
    NAME            reduce using rule 26 (formula -> literal .)
    EQUALS          reduce using rule 26 (formula -> literal .)


state 70

    (27) formula -> AND_KEY . formula_lst
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 96
    formula                        shift and go to state 97
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 71

    (28) formula -> OR_KEY . formula_lst
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 98
    formula                        shift and go to state 97
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 72

    (29) formula -> NOT_KEY . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 99
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 73

    (30) formula -> IMPLY_KEY . formula formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 100
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 74

    (31) formula -> EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 101


state 75

    (32) formula -> FORALL_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 102


state 76

    (60) literal -> predicate .

    RPAREN          reduce using rule 60 (literal -> predicate .)
    AND_KEY         reduce using rule 60 (literal -> predicate .)
    OR_KEY          reduce using rule 60 (literal -> predicate .)
    NOT_KEY         reduce using rule 60 (literal -> predicate .)
    IMPLY_KEY       reduce using rule 60 (literal -> predicate .)
    EXISTS_KEY      reduce using rule 60 (literal -> predicate .)
    FORALL_KEY      reduce using rule 60 (literal -> predicate .)
    LPAREN          reduce using rule 60 (literal -> predicate .)
    NAME            reduce using rule 60 (literal -> predicate .)
    EQUALS          reduce using rule 60 (literal -> predicate .)
    ONEOF_KEY       reduce using rule 60 (literal -> predicate .)


state 77

    (64) predicate -> NAME . variables_lst
    (66) predicate -> NAME .
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 66 (predicate -> NAME .)
    AND_KEY         reduce using rule 66 (predicate -> NAME .)
    OR_KEY          reduce using rule 66 (predicate -> NAME .)
    NOT_KEY         reduce using rule 66 (predicate -> NAME .)
    IMPLY_KEY       reduce using rule 66 (predicate -> NAME .)
    EXISTS_KEY      reduce using rule 66 (predicate -> NAME .)
    FORALL_KEY      reduce using rule 66 (predicate -> NAME .)
    LPAREN          reduce using rule 66 (predicate -> NAME .)
    NAME            reduce using rule 66 (predicate -> NAME .)
    EQUALS          reduce using rule 66 (predicate -> NAME .)
    ONEOF_KEY       reduce using rule 66 (predicate -> NAME .)
    VARIABLE        shift and go to state 48

    variables_lst                  shift and go to state 103

state 78

    (65) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 104


state 79

    (23) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 23 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 80

    (46) one_eff_formula -> LPAREN . ONEOF_KEY atomic_eff_lst RPAREN
    (47) one_eff_formula -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (48) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (49) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (59) literal -> LPAREN . NOT_KEY predicate RPAREN
    (61) predicate -> LPAREN . NAME variables_lst RPAREN
    (62) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> LPAREN . NAME RPAREN

    ONEOF_KEY       shift and go to state 105
    WHEN_KEY        shift and go to state 106
    FORALL_KEY      shift and go to state 107
    NOT_KEY         shift and go to state 108
    NAME            shift and go to state 109
    EQUALS          shift and go to state 110


state 81

    (42) effects_def -> EFFECT_KEY LPAREN one_eff_formula . RPAREN

    RPAREN          shift and go to state 111


state 82

    (43) one_eff_formula -> literal .

    RPAREN          reduce using rule 43 (one_eff_formula -> literal .)
    AND_KEY         reduce using rule 43 (one_eff_formula -> literal .)
    ONEOF_KEY       reduce using rule 43 (one_eff_formula -> literal .)
    LPAREN          reduce using rule 43 (one_eff_formula -> literal .)
    NAME            reduce using rule 43 (one_eff_formula -> literal .)
    EQUALS          reduce using rule 43 (one_eff_formula -> literal .)


state 83

    (44) one_eff_formula -> AND_KEY . one_eff_formula_lst
    (50) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (51) one_eff_formula_lst -> . one_eff_formula
    (43) one_eff_formula -> . literal
    (44) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (45) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (46) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (47) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (48) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 83
    ONEOF_KEY       shift and go to state 84
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    one_eff_formula_lst            shift and go to state 112
    one_eff_formula                shift and go to state 113
    literal                        shift and go to state 82
    predicate                      shift and go to state 76

state 84

    (45) one_eff_formula -> ONEOF_KEY . atomic_eff_lst
    (52) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (53) atomic_eff_lst -> . atomic_eff
    (54) atomic_eff -> . literal
    (55) atomic_eff -> . AND_KEY literal_lst
    (56) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 117
    LPAREN          shift and go to state 118
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    atomic_eff_lst                 shift and go to state 114
    atomic_eff                     shift and go to state 115
    literal                        shift and go to state 116
    predicate                      shift and go to state 76

state 85

    (59) literal -> LPAREN . NOT_KEY predicate RPAREN
    (61) predicate -> LPAREN . NAME variables_lst RPAREN
    (62) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 108
    NAME            shift and go to state 109
    EQUALS          shift and go to state 110


state 86

    (33) formula -> LPAREN AND_KEY . formula_lst RPAREN
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 119
    formula                        shift and go to state 97
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 87

    (34) formula -> LPAREN OR_KEY . formula_lst RPAREN
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula_lst                    shift and go to state 120
    formula                        shift and go to state 97
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 88

    (35) formula -> LPAREN NOT_KEY . formula RPAREN
    (59) literal -> LPAREN NOT_KEY . predicate RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 121
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 122
    predicate                      shift and go to state 123
    literal                        shift and go to state 69

state 89

    (36) formula -> LPAREN IMPLY_KEY . formula formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 124
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 90

    (37) formula -> LPAREN literal . RPAREN

    RPAREN          shift and go to state 125


state 91

    (38) formula -> LPAREN EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 126


state 92

    (39) formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 127


state 93

    (61) predicate -> LPAREN NAME . variables_lst RPAREN
    (63) predicate -> LPAREN NAME . RPAREN
    (64) predicate -> NAME . variables_lst
    (66) predicate -> NAME .
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 129
    VARIABLE        shift and go to state 48

  ! RPAREN          [ reduce using rule 66 (predicate -> NAME .) ]

    variables_lst                  shift and go to state 128

state 94

    (62) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN
    (65) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 130


state 95

    (25) precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .

    EFFECT_KEY      reduce using rule 25 (precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .)


state 96

    (27) formula -> AND_KEY formula_lst .

    RPAREN          reduce using rule 27 (formula -> AND_KEY formula_lst .)
    AND_KEY         reduce using rule 27 (formula -> AND_KEY formula_lst .)
    OR_KEY          reduce using rule 27 (formula -> AND_KEY formula_lst .)
    NOT_KEY         reduce using rule 27 (formula -> AND_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 27 (formula -> AND_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 27 (formula -> AND_KEY formula_lst .)
    FORALL_KEY      reduce using rule 27 (formula -> AND_KEY formula_lst .)
    LPAREN          reduce using rule 27 (formula -> AND_KEY formula_lst .)
    NAME            reduce using rule 27 (formula -> AND_KEY formula_lst .)
    EQUALS          reduce using rule 27 (formula -> AND_KEY formula_lst .)


state 97

    (40) formula_lst -> formula . formula_lst
    (41) formula_lst -> formula .
    (40) formula_lst -> . formula formula_lst
    (41) formula_lst -> . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for OR_KEY resolved as shift
  ! shift/reduce conflict for NOT_KEY resolved as shift
  ! shift/reduce conflict for IMPLY_KEY resolved as shift
  ! shift/reduce conflict for EXISTS_KEY resolved as shift
  ! shift/reduce conflict for FORALL_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 41 (formula_lst -> formula .)
    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

  ! AND_KEY         [ reduce using rule 41 (formula_lst -> formula .) ]
  ! OR_KEY          [ reduce using rule 41 (formula_lst -> formula .) ]
  ! NOT_KEY         [ reduce using rule 41 (formula_lst -> formula .) ]
  ! IMPLY_KEY       [ reduce using rule 41 (formula_lst -> formula .) ]
  ! EXISTS_KEY      [ reduce using rule 41 (formula_lst -> formula .) ]
  ! FORALL_KEY      [ reduce using rule 41 (formula_lst -> formula .) ]
  ! LPAREN          [ reduce using rule 41 (formula_lst -> formula .) ]
  ! NAME            [ reduce using rule 41 (formula_lst -> formula .) ]
  ! EQUALS          [ reduce using rule 41 (formula_lst -> formula .) ]

    formula                        shift and go to state 97
    formula_lst                    shift and go to state 131
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 98

    (28) formula -> OR_KEY formula_lst .

    RPAREN          reduce using rule 28 (formula -> OR_KEY formula_lst .)
    AND_KEY         reduce using rule 28 (formula -> OR_KEY formula_lst .)
    OR_KEY          reduce using rule 28 (formula -> OR_KEY formula_lst .)
    NOT_KEY         reduce using rule 28 (formula -> OR_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 28 (formula -> OR_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 28 (formula -> OR_KEY formula_lst .)
    FORALL_KEY      reduce using rule 28 (formula -> OR_KEY formula_lst .)
    LPAREN          reduce using rule 28 (formula -> OR_KEY formula_lst .)
    NAME            reduce using rule 28 (formula -> OR_KEY formula_lst .)
    EQUALS          reduce using rule 28 (formula -> OR_KEY formula_lst .)


state 99

    (29) formula -> NOT_KEY formula .

    RPAREN          reduce using rule 29 (formula -> NOT_KEY formula .)
    AND_KEY         reduce using rule 29 (formula -> NOT_KEY formula .)
    OR_KEY          reduce using rule 29 (formula -> NOT_KEY formula .)
    NOT_KEY         reduce using rule 29 (formula -> NOT_KEY formula .)
    IMPLY_KEY       reduce using rule 29 (formula -> NOT_KEY formula .)
    EXISTS_KEY      reduce using rule 29 (formula -> NOT_KEY formula .)
    FORALL_KEY      reduce using rule 29 (formula -> NOT_KEY formula .)
    LPAREN          reduce using rule 29 (formula -> NOT_KEY formula .)
    NAME            reduce using rule 29 (formula -> NOT_KEY formula .)
    EQUALS          reduce using rule 29 (formula -> NOT_KEY formula .)


state 100

    (30) formula -> IMPLY_KEY formula . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 132
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 101

    (31) formula -> EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula
    (67) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 133
    variables_lst                  shift and go to state 47

state 102

    (32) formula -> FORALL_KEY LPAREN . typed_variables_lst RPAREN formula
    (67) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 134
    variables_lst                  shift and go to state 47

state 103

    (64) predicate -> NAME variables_lst .

    RPAREN          reduce using rule 64 (predicate -> NAME variables_lst .)
    AND_KEY         reduce using rule 64 (predicate -> NAME variables_lst .)
    OR_KEY          reduce using rule 64 (predicate -> NAME variables_lst .)
    NOT_KEY         reduce using rule 64 (predicate -> NAME variables_lst .)
    IMPLY_KEY       reduce using rule 64 (predicate -> NAME variables_lst .)
    EXISTS_KEY      reduce using rule 64 (predicate -> NAME variables_lst .)
    FORALL_KEY      reduce using rule 64 (predicate -> NAME variables_lst .)
    LPAREN          reduce using rule 64 (predicate -> NAME variables_lst .)
    NAME            reduce using rule 64 (predicate -> NAME variables_lst .)
    EQUALS          reduce using rule 64 (predicate -> NAME variables_lst .)
    ONEOF_KEY       reduce using rule 64 (predicate -> NAME variables_lst .)


state 104

    (65) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 135


state 105

    (46) one_eff_formula -> LPAREN ONEOF_KEY . atomic_eff_lst RPAREN
    (52) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (53) atomic_eff_lst -> . atomic_eff
    (54) atomic_eff -> . literal
    (55) atomic_eff -> . AND_KEY literal_lst
    (56) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 117
    LPAREN          shift and go to state 118
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    atomic_eff_lst                 shift and go to state 136
    atomic_eff                     shift and go to state 115
    literal                        shift and go to state 116
    predicate                      shift and go to state 76

state 106

    (47) one_eff_formula -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 137
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 107

    (48) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (49) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    LPAREN          shift and go to state 138


state 108

    (59) literal -> LPAREN NOT_KEY . predicate RPAREN
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    LPAREN          shift and go to state 139
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    predicate                      shift and go to state 140

state 109

    (61) predicate -> LPAREN NAME . variables_lst RPAREN
    (63) predicate -> LPAREN NAME . RPAREN
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 129
    VARIABLE        shift and go to state 48

    variables_lst                  shift and go to state 141

state 110

    (62) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 142


state 111

    (42) effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .

    RPAREN          reduce using rule 42 (effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .)


state 112

    (44) one_eff_formula -> AND_KEY one_eff_formula_lst .

    RPAREN          reduce using rule 44 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    AND_KEY         reduce using rule 44 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 44 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    LPAREN          reduce using rule 44 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    NAME            reduce using rule 44 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    EQUALS          reduce using rule 44 (one_eff_formula -> AND_KEY one_eff_formula_lst .)


state 113

    (50) one_eff_formula_lst -> one_eff_formula . one_eff_formula_lst
    (51) one_eff_formula_lst -> one_eff_formula .
    (50) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (51) one_eff_formula_lst -> . one_eff_formula
    (43) one_eff_formula -> . literal
    (44) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (45) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (46) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (47) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (48) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (49) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for ONEOF_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 51 (one_eff_formula_lst -> one_eff_formula .)
    AND_KEY         shift and go to state 83
    ONEOF_KEY       shift and go to state 84
    LPAREN          shift and go to state 80
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

  ! AND_KEY         [ reduce using rule 51 (one_eff_formula_lst -> one_eff_formula .) ]
  ! ONEOF_KEY       [ reduce using rule 51 (one_eff_formula_lst -> one_eff_formula .) ]
  ! LPAREN          [ reduce using rule 51 (one_eff_formula_lst -> one_eff_formula .) ]
  ! NAME            [ reduce using rule 51 (one_eff_formula_lst -> one_eff_formula .) ]
  ! EQUALS          [ reduce using rule 51 (one_eff_formula_lst -> one_eff_formula .) ]

    one_eff_formula                shift and go to state 113
    one_eff_formula_lst            shift and go to state 143
    literal                        shift and go to state 82
    predicate                      shift and go to state 76

state 114

    (45) one_eff_formula -> ONEOF_KEY atomic_eff_lst .

    RPAREN          reduce using rule 45 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    AND_KEY         reduce using rule 45 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 45 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    LPAREN          reduce using rule 45 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    NAME            reduce using rule 45 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    EQUALS          reduce using rule 45 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)


state 115

    (52) atomic_eff_lst -> atomic_eff . atomic_eff_lst
    (53) atomic_eff_lst -> atomic_eff .
    (52) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (53) atomic_eff_lst -> . atomic_eff
    (54) atomic_eff -> . literal
    (55) atomic_eff -> . AND_KEY literal_lst
    (56) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 53 (atomic_eff_lst -> atomic_eff .)
    ONEOF_KEY       reduce using rule 53 (atomic_eff_lst -> atomic_eff .)
    AND_KEY         shift and go to state 117
    LPAREN          shift and go to state 118
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

  ! AND_KEY         [ reduce using rule 53 (atomic_eff_lst -> atomic_eff .) ]
  ! LPAREN          [ reduce using rule 53 (atomic_eff_lst -> atomic_eff .) ]
  ! NAME            [ reduce using rule 53 (atomic_eff_lst -> atomic_eff .) ]
  ! EQUALS          [ reduce using rule 53 (atomic_eff_lst -> atomic_eff .) ]

    atomic_eff                     shift and go to state 115
    atomic_eff_lst                 shift and go to state 144
    literal                        shift and go to state 116
    predicate                      shift and go to state 76

state 116

    (54) atomic_eff -> literal .

    AND_KEY         reduce using rule 54 (atomic_eff -> literal .)
    LPAREN          reduce using rule 54 (atomic_eff -> literal .)
    NAME            reduce using rule 54 (atomic_eff -> literal .)
    EQUALS          reduce using rule 54 (atomic_eff -> literal .)
    RPAREN          reduce using rule 54 (atomic_eff -> literal .)
    ONEOF_KEY       reduce using rule 54 (atomic_eff -> literal .)


state 117

    (55) atomic_eff -> AND_KEY . literal_lst
    (57) literal_lst -> . literal literal_lst
    (58) literal_lst -> . literal
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    LPAREN          shift and go to state 85
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    literal_lst                    shift and go to state 145
    literal                        shift and go to state 146
    predicate                      shift and go to state 76

state 118

    (56) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (59) literal -> LPAREN . NOT_KEY predicate RPAREN
    (61) predicate -> LPAREN . NAME variables_lst RPAREN
    (62) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 147
    NOT_KEY         shift and go to state 108
    NAME            shift and go to state 109
    EQUALS          shift and go to state 110


state 119

    (33) formula -> LPAREN AND_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 148


state 120

    (34) formula -> LPAREN OR_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 149


state 121

    (33) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (34) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (35) formula -> LPAREN . NOT_KEY formula RPAREN
    (36) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (37) formula -> LPAREN . literal RPAREN
    (38) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (61) predicate -> LPAREN . NAME variables_lst RPAREN
    (62) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> LPAREN . NAME RPAREN
    (59) literal -> LPAREN . NOT_KEY predicate RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 86
    OR_KEY          shift and go to state 87
    NOT_KEY         shift and go to state 88
    IMPLY_KEY       shift and go to state 89
    EXISTS_KEY      shift and go to state 91
    FORALL_KEY      shift and go to state 92
    NAME            shift and go to state 93
    EQUALS          shift and go to state 94
    LPAREN          shift and go to state 85

    literal                        shift and go to state 90
    predicate                      shift and go to state 76

state 122

    (35) formula -> LPAREN NOT_KEY formula . RPAREN

    RPAREN          shift and go to state 150


state 123

    (59) literal -> LPAREN NOT_KEY predicate . RPAREN
    (60) literal -> predicate .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 151

  ! RPAREN          [ reduce using rule 60 (literal -> predicate .) ]


state 124

    (36) formula -> LPAREN IMPLY_KEY formula . formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 152
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 125

    (37) formula -> LPAREN literal RPAREN .

    RPAREN          reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    AND_KEY         reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    OR_KEY          reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    NOT_KEY         reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    IMPLY_KEY       reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    EXISTS_KEY      reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    FORALL_KEY      reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    LPAREN          reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    NAME            reduce using rule 37 (formula -> LPAREN literal RPAREN .)
    EQUALS          reduce using rule 37 (formula -> LPAREN literal RPAREN .)


state 126

    (38) formula -> LPAREN EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (67) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 153
    variables_lst                  shift and go to state 47

state 127

    (39) formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (67) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 154
    variables_lst                  shift and go to state 47

state 128

    (61) predicate -> LPAREN NAME variables_lst . RPAREN
    (64) predicate -> NAME variables_lst .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 155

  ! RPAREN          [ reduce using rule 64 (predicate -> NAME variables_lst .) ]


state 129

    (63) predicate -> LPAREN NAME RPAREN .

    RPAREN          reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    AND_KEY         reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    OR_KEY          reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    NOT_KEY         reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    IMPLY_KEY       reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    EXISTS_KEY      reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    FORALL_KEY      reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    NAME            reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    EQUALS          reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)
    ONEOF_KEY       reduce using rule 63 (predicate -> LPAREN NAME RPAREN .)


state 130

    (62) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN
    (65) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 156


state 131

    (40) formula_lst -> formula formula_lst .

    AND_KEY         reduce using rule 40 (formula_lst -> formula formula_lst .)
    OR_KEY          reduce using rule 40 (formula_lst -> formula formula_lst .)
    NOT_KEY         reduce using rule 40 (formula_lst -> formula formula_lst .)
    IMPLY_KEY       reduce using rule 40 (formula_lst -> formula formula_lst .)
    EXISTS_KEY      reduce using rule 40 (formula_lst -> formula formula_lst .)
    FORALL_KEY      reduce using rule 40 (formula_lst -> formula formula_lst .)
    LPAREN          reduce using rule 40 (formula_lst -> formula formula_lst .)
    NAME            reduce using rule 40 (formula_lst -> formula formula_lst .)
    EQUALS          reduce using rule 40 (formula_lst -> formula formula_lst .)
    RPAREN          reduce using rule 40 (formula_lst -> formula formula_lst .)


state 132

    (30) formula -> IMPLY_KEY formula formula .

    RPAREN          reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    AND_KEY         reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    OR_KEY          reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    NOT_KEY         reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    IMPLY_KEY       reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    EXISTS_KEY      reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    FORALL_KEY      reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    LPAREN          reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    NAME            reduce using rule 30 (formula -> IMPLY_KEY formula formula .)
    EQUALS          reduce using rule 30 (formula -> IMPLY_KEY formula formula .)


state 133

    (31) formula -> EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 157


state 134

    (32) formula -> FORALL_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 158


state 135

    (65) predicate -> EQUALS VARIABLE VARIABLE .

    RPAREN          reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    AND_KEY         reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    OR_KEY          reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    NOT_KEY         reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    IMPLY_KEY       reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    EXISTS_KEY      reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    FORALL_KEY      reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    LPAREN          reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    NAME            reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    EQUALS          reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)
    ONEOF_KEY       reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .)


state 136

    (46) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst . RPAREN

    RPAREN          shift and go to state 159


state 137

    (47) one_eff_formula -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (54) atomic_eff -> . literal
    (55) atomic_eff -> . AND_KEY literal_lst
    (56) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 117
    LPAREN          shift and go to state 118
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    atomic_eff                     shift and go to state 160
    literal                        shift and go to state 116
    predicate                      shift and go to state 76

state 138

    (48) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN atomic_eff RPAREN
    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (67) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (68) typed_variables_lst -> . variables_lst HYPHEN type
    (69) variables_lst -> . VARIABLE variables_lst
    (70) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 48

    typed_variables_lst            shift and go to state 161
    variables_lst                  shift and go to state 47

state 139

    (61) predicate -> LPAREN . NAME variables_lst RPAREN
    (62) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 109
    EQUALS          shift and go to state 110


state 140

    (59) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 151


state 141

    (61) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 155


state 142

    (62) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 162


state 143

    (50) one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .

    AND_KEY         reduce using rule 50 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 50 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    LPAREN          reduce using rule 50 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    NAME            reduce using rule 50 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    EQUALS          reduce using rule 50 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    RPAREN          reduce using rule 50 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)


state 144

    (52) atomic_eff_lst -> atomic_eff atomic_eff_lst .

    RPAREN          reduce using rule 52 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    AND_KEY         reduce using rule 52 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 52 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    LPAREN          reduce using rule 52 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    NAME            reduce using rule 52 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    EQUALS          reduce using rule 52 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)


state 145

    (55) atomic_eff -> AND_KEY literal_lst .

    AND_KEY         reduce using rule 55 (atomic_eff -> AND_KEY literal_lst .)
    LPAREN          reduce using rule 55 (atomic_eff -> AND_KEY literal_lst .)
    NAME            reduce using rule 55 (atomic_eff -> AND_KEY literal_lst .)
    EQUALS          reduce using rule 55 (atomic_eff -> AND_KEY literal_lst .)
    RPAREN          reduce using rule 55 (atomic_eff -> AND_KEY literal_lst .)
    ONEOF_KEY       reduce using rule 55 (atomic_eff -> AND_KEY literal_lst .)


state 146

    (57) literal_lst -> literal . literal_lst
    (58) literal_lst -> literal .
    (57) literal_lst -> . literal literal_lst
    (58) literal_lst -> . literal
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    AND_KEY         reduce using rule 58 (literal_lst -> literal .)
    RPAREN          reduce using rule 58 (literal_lst -> literal .)
    ONEOF_KEY       reduce using rule 58 (literal_lst -> literal .)
    LPAREN          shift and go to state 85
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

  ! LPAREN          [ reduce using rule 58 (literal_lst -> literal .) ]
  ! NAME            [ reduce using rule 58 (literal_lst -> literal .) ]
  ! EQUALS          [ reduce using rule 58 (literal_lst -> literal .) ]

    literal                        shift and go to state 146
    literal_lst                    shift and go to state 163
    predicate                      shift and go to state 76

state 147

    (56) atomic_eff -> LPAREN AND_KEY . literal_lst RPAREN
    (57) literal_lst -> . literal literal_lst
    (58) literal_lst -> . literal
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    LPAREN          shift and go to state 85
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    literal_lst                    shift and go to state 164
    literal                        shift and go to state 146
    predicate                      shift and go to state 76

state 148

    (33) formula -> LPAREN AND_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NAME            reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 33 (formula -> LPAREN AND_KEY formula_lst RPAREN .)


state 149

    (34) formula -> LPAREN OR_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NAME            reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 34 (formula -> LPAREN OR_KEY formula_lst RPAREN .)


state 150

    (35) formula -> LPAREN NOT_KEY formula RPAREN .

    RPAREN          reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    AND_KEY         reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    OR_KEY          reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NOT_KEY         reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    IMPLY_KEY       reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EXISTS_KEY      reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    FORALL_KEY      reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    LPAREN          reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NAME            reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EQUALS          reduce using rule 35 (formula -> LPAREN NOT_KEY formula RPAREN .)


state 151

    (59) literal -> LPAREN NOT_KEY predicate RPAREN .

    RPAREN          reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    AND_KEY         reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    OR_KEY          reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NOT_KEY         reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    IMPLY_KEY       reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EXISTS_KEY      reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    FORALL_KEY      reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NAME            reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EQUALS          reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    ONEOF_KEY       reduce using rule 59 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 152

    (36) formula -> LPAREN IMPLY_KEY formula formula . RPAREN

    RPAREN          shift and go to state 165


state 153

    (38) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 166


state 154

    (39) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 167


state 155

    (61) predicate -> LPAREN NAME variables_lst RPAREN .

    RPAREN          reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    AND_KEY         reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    OR_KEY          reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NOT_KEY         reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    IMPLY_KEY       reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EXISTS_KEY      reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    FORALL_KEY      reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NAME            reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EQUALS          reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)
    ONEOF_KEY       reduce using rule 61 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 156

    (62) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN
    (65) predicate -> EQUALS VARIABLE VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 168

  ! RPAREN          [ reduce using rule 65 (predicate -> EQUALS VARIABLE VARIABLE .) ]


state 157

    (31) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 169
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 158

    (32) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN . formula
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 170
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 159

    (46) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .

    RPAREN          reduce using rule 46 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    AND_KEY         reduce using rule 46 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    ONEOF_KEY       reduce using rule 46 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    LPAREN          reduce using rule 46 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    NAME            reduce using rule 46 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    EQUALS          reduce using rule 46 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)


state 160

    (47) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 171


state 161

    (48) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN atomic_eff RPAREN
    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    RPAREN          shift and go to state 172


state 162

    (62) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 168


state 163

    (57) literal_lst -> literal literal_lst .

    AND_KEY         reduce using rule 57 (literal_lst -> literal literal_lst .)
    LPAREN          reduce using rule 57 (literal_lst -> literal literal_lst .)
    NAME            reduce using rule 57 (literal_lst -> literal literal_lst .)
    EQUALS          reduce using rule 57 (literal_lst -> literal literal_lst .)
    RPAREN          reduce using rule 57 (literal_lst -> literal literal_lst .)
    ONEOF_KEY       reduce using rule 57 (literal_lst -> literal literal_lst .)


state 164

    (56) atomic_eff -> LPAREN AND_KEY literal_lst . RPAREN

    RPAREN          shift and go to state 173


state 165

    (36) formula -> LPAREN IMPLY_KEY formula formula RPAREN .

    RPAREN          reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    AND_KEY         reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    OR_KEY          reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NOT_KEY         reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    IMPLY_KEY       reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EXISTS_KEY      reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    FORALL_KEY      reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    LPAREN          reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NAME            reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EQUALS          reduce using rule 36 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)


state 166

    (38) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 174
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 167

    (39) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 175
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 168

    (62) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    RPAREN          reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    AND_KEY         reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    OR_KEY          reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NOT_KEY         reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    IMPLY_KEY       reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EXISTS_KEY      reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    FORALL_KEY      reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NAME            reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EQUALS          reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    ONEOF_KEY       reduce using rule 62 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 169

    (31) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 31 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)


state 170

    (32) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 32 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)


state 171

    (47) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    RPAREN          reduce using rule 47 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    AND_KEY         reduce using rule 47 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 47 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 47 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 47 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 47 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 172

    (48) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . atomic_eff RPAREN
    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (54) atomic_eff -> . literal
    (55) atomic_eff -> . AND_KEY literal_lst
    (56) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    LPAREN          shift and go to state 176
    AND_KEY         shift and go to state 117
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    atomic_eff                     shift and go to state 177
    literal                        shift and go to state 116
    predicate                      shift and go to state 76

state 173

    (56) atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .

    AND_KEY         reduce using rule 56 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    LPAREN          reduce using rule 56 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    NAME            reduce using rule 56 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    EQUALS          reduce using rule 56 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    RPAREN          reduce using rule 56 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    ONEOF_KEY       reduce using rule 56 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)


state 174

    (38) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 178


state 175

    (39) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 179


state 176

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN . WHEN_KEY formula atomic_eff RPAREN RPAREN
    (56) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (59) literal -> LPAREN . NOT_KEY predicate RPAREN
    (61) predicate -> LPAREN . NAME variables_lst RPAREN
    (62) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> LPAREN . NAME RPAREN

    WHEN_KEY        shift and go to state 180
    AND_KEY         shift and go to state 147
    NOT_KEY         shift and go to state 108
    NAME            shift and go to state 109
    EQUALS          shift and go to state 110


state 177

    (48) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff . RPAREN

    RPAREN          shift and go to state 181


state 178

    (38) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 38 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 179

    (39) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 39 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 180

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY . formula atomic_eff RPAREN RPAREN
    (26) formula -> . literal
    (27) formula -> . AND_KEY formula_lst
    (28) formula -> . OR_KEY formula_lst
    (29) formula -> . NOT_KEY formula
    (30) formula -> . IMPLY_KEY formula formula
    (31) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (32) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (33) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (34) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (35) formula -> . LPAREN NOT_KEY formula RPAREN
    (36) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (37) formula -> . LPAREN literal RPAREN
    (38) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (39) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 70
    OR_KEY          shift and go to state 71
    NOT_KEY         shift and go to state 72
    IMPLY_KEY       shift and go to state 73
    EXISTS_KEY      shift and go to state 74
    FORALL_KEY      shift and go to state 75
    LPAREN          shift and go to state 67
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    formula                        shift and go to state 182
    literal                        shift and go to state 69
    predicate                      shift and go to state 76

state 181

    (48) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .

    RPAREN          reduce using rule 48 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    AND_KEY         reduce using rule 48 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 48 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    LPAREN          reduce using rule 48 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    NAME            reduce using rule 48 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    EQUALS          reduce using rule 48 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)


state 182

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula . atomic_eff RPAREN RPAREN
    (54) atomic_eff -> . literal
    (55) atomic_eff -> . AND_KEY literal_lst
    (56) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (59) literal -> . LPAREN NOT_KEY predicate RPAREN
    (60) literal -> . predicate
    (61) predicate -> . LPAREN NAME variables_lst RPAREN
    (62) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (63) predicate -> . LPAREN NAME RPAREN
    (64) predicate -> . NAME variables_lst
    (65) predicate -> . EQUALS VARIABLE VARIABLE
    (66) predicate -> . NAME

    AND_KEY         shift and go to state 117
    LPAREN          shift and go to state 118
    NAME            shift and go to state 77
    EQUALS          shift and go to state 78

    atomic_eff                     shift and go to state 183
    literal                        shift and go to state 116
    predicate                      shift and go to state 76

state 183

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff . RPAREN RPAREN

    RPAREN          shift and go to state 184


state 184

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN . RPAREN

    RPAREN          shift and go to state 185


state 185

    (49) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .

    RPAREN          reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    AND_KEY         reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    ONEOF_KEY       reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    LPAREN          reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    NAME            reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    EQUALS          reduce using rule 49 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 93 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 97 resolved as shift
WARNING: shift/reduce conflict for OR_KEY in state 97 resolved as shift
WARNING: shift/reduce conflict for NOT_KEY in state 97 resolved as shift
WARNING: shift/reduce conflict for IMPLY_KEY in state 97 resolved as shift
WARNING: shift/reduce conflict for EXISTS_KEY in state 97 resolved as shift
WARNING: shift/reduce conflict for FORALL_KEY in state 97 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 97 resolved as shift
WARNING: shift/reduce conflict for NAME in state 97 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 113 resolved as shift
WARNING: shift/reduce conflict for ONEOF_KEY in state 113 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 113 resolved as shift
WARNING: shift/reduce conflict for NAME in state 113 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 113 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 115 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 115 resolved as shift
WARNING: shift/reduce conflict for NAME in state 115 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 115 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 123 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 128 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 146 resolved as shift
WARNING: shift/reduce conflict for NAME in state 146 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 146 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 156 resolved as shift
