Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
Rule 4     domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 5     domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
Rule 6     problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN
Rule 7     domain_pdef -> LPAREN DOMAIN_PKEY NAME RPAREN
Rule 8     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 9     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 10    objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 11    init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 12    init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 13    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 14    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 15    require_key_lst -> require_key require_key_lst
Rule 16    require_key_lst -> require_key
Rule 17    require_key -> STRIPS_KEY
Rule 18    require_key -> EQUALITY_KEY
Rule 19    require_key -> TYPING_KEY
Rule 20    require_key -> ADL_KEY
Rule 21    require_key -> ND_KEY
Rule 22    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 23    constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
Rule 24    constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN
Rule 25    names_lst -> NAME names_lst
Rule 26    names_lst -> NAME
Rule 27    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 28    predicate_def_lst -> predicate_def predicate_def_lst
Rule 29    predicate_def_lst -> predicate_def
Rule 30    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 31    predicate_def -> LPAREN NAME RPAREN
Rule 32    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 33    ground_predicates_lst -> ground_predicate
Rule 34    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 35    ground_predicate -> LPAREN NAME RPAREN
Rule 36    constants_lst -> constant constants_lst
Rule 37    constants_lst -> constant
Rule 38    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 39    typed_constants_lst -> constants_lst HYPHEN type
Rule 40    action_def_lst -> action_def action_def_lst
Rule 41    action_def_lst -> action_def
Rule 42    action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN
Rule 43    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 44    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 45    precond_def -> PRECONDITION_KEY LPAREN formula RPAREN
Rule 46    formula -> literal
Rule 47    formula -> AND_KEY formula_lst
Rule 48    formula -> OR_KEY formula_lst
Rule 49    formula -> NOT_KEY formula
Rule 50    formula -> IMPLY_KEY formula formula
Rule 51    formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
Rule 52    formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula
Rule 53    formula -> LPAREN AND_KEY formula_lst RPAREN
Rule 54    formula -> LPAREN OR_KEY formula_lst RPAREN
Rule 55    formula -> LPAREN NOT_KEY formula RPAREN
Rule 56    formula -> LPAREN IMPLY_KEY formula formula RPAREN
Rule 57    formula -> LPAREN literal RPAREN
Rule 58    formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 59    formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
Rule 60    formula_lst -> formula formula_lst
Rule 61    formula_lst -> formula
Rule 62    effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN
Rule 63    one_eff_formula -> literal
Rule 64    one_eff_formula -> AND_KEY one_eff_formula_lst
Rule 65    one_eff_formula -> AND_KEY
Rule 66    one_eff_formula -> ONEOF_KEY atomic_eff_lst
Rule 67    one_eff_formula -> WHEN_KEY formula atomic_eff
Rule 68    one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN
Rule 69    one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 70    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
Rule 71    one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
Rule 72    one_eff_formula_lst -> one_eff_formula one_eff_formula_lst
Rule 73    one_eff_formula_lst -> one_eff_formula
Rule 74    atomic_eff_lst -> atomic_eff atomic_eff_lst
Rule 75    atomic_eff_lst -> atomic_eff
Rule 76    atomic_eff -> literal
Rule 77    atomic_eff -> AND_KEY literal_lst
Rule 78    atomic_eff -> LPAREN AND_KEY literal_lst RPAREN
Rule 79    atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN
Rule 80    literal_lst -> literal literal_lst
Rule 81    literal_lst -> literal
Rule 82    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 83    literal -> predicate
Rule 84    predicate -> LPAREN NAME variables_lst RPAREN
Rule 85    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 86    predicate -> LPAREN NAME RPAREN
Rule 87    predicate -> NAME variables_lst
Rule 88    predicate -> EQUALS VARIABLE VARIABLE
Rule 89    predicate -> NAME
Rule 90    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 91    typed_variables_lst -> variables_lst HYPHEN type
Rule 92    variables_lst -> VARIABLE variables_lst
Rule 93    variables_lst -> VARIABLE
Rule 94    type -> NAME
Rule 95    constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 42
ADL_KEY              : 20
AND_KEY              : 11 13 47 53 64 65 77 78
CONSTANTS_KEY        : 23 24
DEFINE_KEY           : 3 4 5 6
DOMAIN_KEY           : 8
DOMAIN_PKEY          : 7
EFFECT_KEY           : 62
EQUALITY_KEY         : 18
EQUALS               : 85 88
EXISTS_KEY           : 51 58
FORALL_KEY           : 52 59 70 71
GOAL_KEY             : 13
HYPHEN               : 38 39 90 91
IMPLY_KEY            : 50 56
INIT_KEY             : 11 12
LPAREN               : 3 4 5 6 7 8 9 10 11 11 12 13 13 14 22 23 24 27 30 31 34 35 42 43 44 45 51 52 53 54 55 56 57 58 58 59 59 62 68 69 70 70 71 71 71 78 79 82 84 85 86
NAME                 : 7 8 9 25 26 30 31 34 35 42 84 86 87 89 94 95
ND_KEY               : 21
NOT_KEY              : 49 55 82
OBJECTS_KEY          : 10
ONEOF_KEY            : 66 68
OR_KEY               : 48 54
PARAMETERS_KEY       : 43 44
PRECONDITION_KEY     : 45
PREDICATES_KEY       : 27
PROBLEM_KEY          : 9
REQUIREMENTS_KEY     : 14
RPAREN               : 3 4 5 6 7 8 9 10 11 11 12 13 13 14 22 23 24 27 30 31 34 35 42 43 44 45 51 52 53 54 55 56 57 58 58 59 59 62 68 69 70 70 71 71 71 78 79 82 84 85 86
STRIPS_KEY           : 17
TYPES_KEY            : 22
TYPING_KEY           : 19
VARIABLE             : 85 85 88 88 92 93
WHEN_KEY             : 67 69 71 79
error                : 

Nonterminals, with rules where they appear

action_def           : 40 41
action_def_lst       : 3 4 5 40
atomic_eff           : 67 69 70 71 74 75 79
atomic_eff_lst       : 66 68 74
constant             : 36 37
constants_def        : 3
constants_lst        : 34 36 38 39
domain               : 1
domain_def           : 3 4 5
domain_pdef          : 6
effects_def          : 42
formula              : 45 49 50 50 51 52 55 56 56 58 59 60 61 67 69 71 79
formula_lst          : 47 48 53 54 60
goal_def             : 6
ground_predicate     : 32 33
ground_predicates_lst : 11 12 13 32
init_def             : 6
literal              : 46 57 63 76 80 81
literal_lst          : 77 78 80
names_lst            : 22 24 25
objects_def          : 6
one_eff_formula      : 62 72 73
one_eff_formula_lst  : 64 72
parameters_def       : 42
pddl                 : 0
precond_def          : 42
predicate            : 82 83
predicate_def        : 28 29
predicate_def_lst    : 27 28
predicates_def       : 3 4 5
problem              : 2
problem_def          : 6
require_def          : 3 4 5
require_key          : 15 16
require_key_lst      : 14 15
type                 : 38 39 90 91
typed_constants_lst  : 10 23 38
typed_variables_lst  : 30 43 51 52 58 59 70 71 90
types_def            : 3 4
variables_lst        : 84 87 90 91 92

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (3) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) domain -> . LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
    (6) problem -> . LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN

    LPAREN          shift and go to state 4

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 3

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 4

    (3) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) domain -> LPAREN . DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
    (6) problem -> LPAREN . DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 5

    (3) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (5) domain -> LPAREN DEFINE_KEY . domain_def require_def predicates_def action_def_lst RPAREN
    (6) problem -> LPAREN DEFINE_KEY . problem_def domain_pdef objects_def init_def goal_def RPAREN
    (8) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (9) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (8) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (9) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (3) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (5) domain -> LPAREN DEFINE_KEY domain_def . require_def predicates_def action_def_lst RPAREN
    (14) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 11

    require_def                    shift and go to state 12

state 8

    (6) problem -> LPAREN DEFINE_KEY problem_def . domain_pdef objects_def init_def goal_def RPAREN
    (7) domain_pdef -> . LPAREN DOMAIN_PKEY NAME RPAREN

    LPAREN          shift and go to state 13

    domain_pdef                    shift and go to state 14

state 9

    (8) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 15


state 10

    (9) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 16


state 11

    (14) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 17


state 12

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (5) domain -> LPAREN DEFINE_KEY domain_def require_def . predicates_def action_def_lst RPAREN
    (22) types_def -> . LPAREN TYPES_KEY names_lst RPAREN
    (27) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 18

    types_def                      shift and go to state 19
    predicates_def                 shift and go to state 20

state 13

    (7) domain_pdef -> LPAREN . DOMAIN_PKEY NAME RPAREN

    DOMAIN_PKEY     shift and go to state 21


state 14

    (6) problem -> LPAREN DEFINE_KEY problem_def domain_pdef . objects_def init_def goal_def RPAREN
    (10) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN

    LPAREN          shift and go to state 22

    objects_def                    shift and go to state 23

state 15

    (8) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 24


state 16

    (9) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 25


state 17

    (14) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (15) require_key_lst -> . require_key require_key_lst
    (16) require_key_lst -> . require_key
    (17) require_key -> . STRIPS_KEY
    (18) require_key -> . EQUALITY_KEY
    (19) require_key -> . TYPING_KEY
    (20) require_key -> . ADL_KEY
    (21) require_key -> . ND_KEY

    STRIPS_KEY      shift and go to state 28
    EQUALITY_KEY    shift and go to state 29
    TYPING_KEY      shift and go to state 30
    ADL_KEY         shift and go to state 31
    ND_KEY          shift and go to state 32

    require_key_lst                shift and go to state 26
    require_key                    shift and go to state 27

state 18

    (22) types_def -> LPAREN . TYPES_KEY names_lst RPAREN
    (27) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    TYPES_KEY       shift and go to state 33
    PREDICATES_KEY  shift and go to state 34


state 19

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . constants_def predicates_def action_def_lst RPAREN
    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (23) constants_def -> . LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
    (24) constants_def -> . LPAREN CONSTANTS_KEY names_lst RPAREN
    (27) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 35

    constants_def                  shift and go to state 36
    predicates_def                 shift and go to state 37

state 20

    (5) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def . action_def_lst RPAREN
    (40) action_def_lst -> . action_def action_def_lst
    (41) action_def_lst -> . action_def
    (42) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 38

    action_def_lst                 shift and go to state 39
    action_def                     shift and go to state 40

state 21

    (7) domain_pdef -> LPAREN DOMAIN_PKEY . NAME RPAREN

    NAME            shift and go to state 41


state 22

    (10) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN

    OBJECTS_KEY     shift and go to state 42


state 23

    (6) problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def . init_def goal_def RPAREN
    (11) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (12) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 43

    init_def                       shift and go to state 44

state 24

    (8) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 8 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 25

    (9) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 9 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 26

    (14) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 45


state 27

    (15) require_key_lst -> require_key . require_key_lst
    (16) require_key_lst -> require_key .
    (15) require_key_lst -> . require_key require_key_lst
    (16) require_key_lst -> . require_key
    (17) require_key -> . STRIPS_KEY
    (18) require_key -> . EQUALITY_KEY
    (19) require_key -> . TYPING_KEY
    (20) require_key -> . ADL_KEY
    (21) require_key -> . ND_KEY

    RPAREN          reduce using rule 16 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 28
    EQUALITY_KEY    shift and go to state 29
    TYPING_KEY      shift and go to state 30
    ADL_KEY         shift and go to state 31
    ND_KEY          shift and go to state 32

    require_key                    shift and go to state 27
    require_key_lst                shift and go to state 46

state 28

    (17) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 17 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 17 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 17 (require_key -> STRIPS_KEY .)
    ADL_KEY         reduce using rule 17 (require_key -> STRIPS_KEY .)
    ND_KEY          reduce using rule 17 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 17 (require_key -> STRIPS_KEY .)


state 29

    (18) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 18 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 18 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 18 (require_key -> EQUALITY_KEY .)
    ADL_KEY         reduce using rule 18 (require_key -> EQUALITY_KEY .)
    ND_KEY          reduce using rule 18 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 18 (require_key -> EQUALITY_KEY .)


state 30

    (19) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 19 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 19 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 19 (require_key -> TYPING_KEY .)
    ADL_KEY         reduce using rule 19 (require_key -> TYPING_KEY .)
    ND_KEY          reduce using rule 19 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 19 (require_key -> TYPING_KEY .)


state 31

    (20) require_key -> ADL_KEY .

    STRIPS_KEY      reduce using rule 20 (require_key -> ADL_KEY .)
    EQUALITY_KEY    reduce using rule 20 (require_key -> ADL_KEY .)
    TYPING_KEY      reduce using rule 20 (require_key -> ADL_KEY .)
    ADL_KEY         reduce using rule 20 (require_key -> ADL_KEY .)
    ND_KEY          reduce using rule 20 (require_key -> ADL_KEY .)
    RPAREN          reduce using rule 20 (require_key -> ADL_KEY .)


state 32

    (21) require_key -> ND_KEY .

    STRIPS_KEY      reduce using rule 21 (require_key -> ND_KEY .)
    EQUALITY_KEY    reduce using rule 21 (require_key -> ND_KEY .)
    TYPING_KEY      reduce using rule 21 (require_key -> ND_KEY .)
    ADL_KEY         reduce using rule 21 (require_key -> ND_KEY .)
    ND_KEY          reduce using rule 21 (require_key -> ND_KEY .)
    RPAREN          reduce using rule 21 (require_key -> ND_KEY .)


state 33

    (22) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (25) names_lst -> . NAME names_lst
    (26) names_lst -> . NAME

    NAME            shift and go to state 48

    names_lst                      shift and go to state 47

state 34

    (27) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (28) predicate_def_lst -> . predicate_def predicate_def_lst
    (29) predicate_def_lst -> . predicate_def
    (30) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (31) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 49

    predicate_def_lst              shift and go to state 50
    predicate_def                  shift and go to state 51

state 35

    (23) constants_def -> LPAREN . CONSTANTS_KEY typed_constants_lst RPAREN
    (24) constants_def -> LPAREN . CONSTANTS_KEY names_lst RPAREN
    (27) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    CONSTANTS_KEY   shift and go to state 52
    PREDICATES_KEY  shift and go to state 34


state 36

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def . predicates_def action_def_lst RPAREN
    (27) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 53

    predicates_def                 shift and go to state 54

state 37

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (40) action_def_lst -> . action_def action_def_lst
    (41) action_def_lst -> . action_def
    (42) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 38

    action_def_lst                 shift and go to state 55
    action_def                     shift and go to state 40

state 38

    (42) action_def -> LPAREN . ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    ACTION_KEY      shift and go to state 56


state 39

    (5) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 57


state 40

    (40) action_def_lst -> action_def . action_def_lst
    (41) action_def_lst -> action_def .
    (40) action_def_lst -> . action_def action_def_lst
    (41) action_def_lst -> . action_def
    (42) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    RPAREN          reduce using rule 41 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 38

    action_def                     shift and go to state 40
    action_def_lst                 shift and go to state 58

state 41

    (7) domain_pdef -> LPAREN DOMAIN_PKEY NAME . RPAREN

    RPAREN          shift and go to state 59


state 42

    (10) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (38) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (39) typed_constants_lst -> . constants_lst HYPHEN type
    (36) constants_lst -> . constant constants_lst
    (37) constants_lst -> . constant
    (95) constant -> . NAME

    NAME            shift and go to state 63

    typed_constants_lst            shift and go to state 60
    constants_lst                  shift and go to state 61
    constant                       shift and go to state 62

state 43

    (11) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (12) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    INIT_KEY        shift and go to state 64


state 44

    (6) problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def . goal_def RPAREN
    (13) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 65

    goal_def                       shift and go to state 66

state 45

    (14) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 14 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 46

    (15) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 15 (require_key_lst -> require_key require_key_lst .)


state 47

    (22) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 67


state 48

    (25) names_lst -> NAME . names_lst
    (26) names_lst -> NAME .
    (25) names_lst -> . NAME names_lst
    (26) names_lst -> . NAME

    RPAREN          reduce using rule 26 (names_lst -> NAME .)
    NAME            shift and go to state 48

    names_lst                      shift and go to state 68

state 49

    (30) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (31) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 69


state 50

    (27) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 70


state 51

    (28) predicate_def_lst -> predicate_def . predicate_def_lst
    (29) predicate_def_lst -> predicate_def .
    (28) predicate_def_lst -> . predicate_def predicate_def_lst
    (29) predicate_def_lst -> . predicate_def
    (30) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (31) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 29 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 49

    predicate_def                  shift and go to state 51
    predicate_def_lst              shift and go to state 71

state 52

    (23) constants_def -> LPAREN CONSTANTS_KEY . typed_constants_lst RPAREN
    (24) constants_def -> LPAREN CONSTANTS_KEY . names_lst RPAREN
    (38) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (39) typed_constants_lst -> . constants_lst HYPHEN type
    (25) names_lst -> . NAME names_lst
    (26) names_lst -> . NAME
    (36) constants_lst -> . constant constants_lst
    (37) constants_lst -> . constant
    (95) constant -> . NAME

    NAME            shift and go to state 74

    typed_constants_lst            shift and go to state 72
    names_lst                      shift and go to state 73
    constants_lst                  shift and go to state 61
    constant                       shift and go to state 62

state 53

    (27) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 34


state 54

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def . action_def_lst RPAREN
    (40) action_def_lst -> . action_def action_def_lst
    (41) action_def_lst -> . action_def
    (42) action_def -> . LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN

    LPAREN          shift and go to state 38

    action_def_lst                 shift and go to state 75
    action_def                     shift and go to state 40

state 55

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 76


state 56

    (42) action_def -> LPAREN ACTION_KEY . NAME parameters_def precond_def effects_def RPAREN

    NAME            shift and go to state 77


state 57

    (5) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 5 (domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN .)


state 58

    (40) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 40 (action_def_lst -> action_def action_def_lst .)


state 59

    (7) domain_pdef -> LPAREN DOMAIN_PKEY NAME RPAREN .

    LPAREN          reduce using rule 7 (domain_pdef -> LPAREN DOMAIN_PKEY NAME RPAREN .)


state 60

    (10) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 78


state 61

    (38) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (39) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 79


state 62

    (36) constants_lst -> constant . constants_lst
    (37) constants_lst -> constant .
    (36) constants_lst -> . constant constants_lst
    (37) constants_lst -> . constant
    (95) constant -> . NAME

    HYPHEN          reduce using rule 37 (constants_lst -> constant .)
    RPAREN          reduce using rule 37 (constants_lst -> constant .)
    NAME            shift and go to state 63

    constant                       shift and go to state 62
    constants_lst                  shift and go to state 80

state 63

    (95) constant -> NAME .

    NAME            reduce using rule 95 (constant -> NAME .)
    HYPHEN          reduce using rule 95 (constant -> NAME .)
    RPAREN          reduce using rule 95 (constant -> NAME .)


state 64

    (11) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (12) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (32) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (33) ground_predicates_lst -> . ground_predicate
    (34) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (35) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 81

    ground_predicates_lst          shift and go to state 82
    ground_predicate               shift and go to state 83

state 65

    (13) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    GOAL_KEY        shift and go to state 84


state 66

    (6) problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 85


state 67

    (22) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 22 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 68

    (25) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 25 (names_lst -> NAME names_lst .)


state 69

    (30) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (31) predicate_def -> LPAREN NAME . RPAREN
    (90) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> . variables_lst HYPHEN type
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 87
    VARIABLE        shift and go to state 89

    typed_variables_lst            shift and go to state 86
    variables_lst                  shift and go to state 88

state 70

    (27) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 27 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 71

    (28) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 28 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 72

    (23) constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 90


state 73

    (24) constants_def -> LPAREN CONSTANTS_KEY names_lst . RPAREN

    RPAREN          shift and go to state 91


state 74

    (25) names_lst -> NAME . names_lst
    (26) names_lst -> NAME .
    (95) constant -> NAME .
    (25) names_lst -> . NAME names_lst
    (26) names_lst -> . NAME

  ! shift/reduce conflict for NAME resolved as shift
    RPAREN          reduce using rule 26 (names_lst -> NAME .)
    HYPHEN          reduce using rule 95 (constant -> NAME .)
    NAME            shift and go to state 48

  ! NAME            [ reduce using rule 95 (constant -> NAME .) ]

    names_lst                      shift and go to state 68

state 75

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 92


state 76

    (4) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 4 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 77

    (42) action_def -> LPAREN ACTION_KEY NAME . parameters_def precond_def effects_def RPAREN
    (43) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (44) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 94

    parameters_def                 shift and go to state 93

state 78

    (10) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 10 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 79

    (38) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (39) typed_constants_lst -> constants_lst HYPHEN . type
    (94) type -> . NAME

    NAME            shift and go to state 96

    type                           shift and go to state 95

state 80

    (36) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 36 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 36 (constants_lst -> constant constants_lst .)


state 81

    (11) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (34) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (35) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 97
    NAME            shift and go to state 98


state 82

    (12) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 99


state 83

    (32) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (33) ground_predicates_lst -> ground_predicate .
    (32) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (33) ground_predicates_lst -> . ground_predicate
    (34) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (35) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 33 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 101

    ground_predicate               shift and go to state 83
    ground_predicates_lst          shift and go to state 100

state 84

    (13) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 102


state 85

    (6) problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN .

    $end            reduce using rule 6 (problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN .)


state 86

    (30) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 103


state 87

    (31) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 31 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 31 (predicate_def -> LPAREN NAME RPAREN .)


state 88

    (90) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 104


state 89

    (92) variables_lst -> VARIABLE . variables_lst
    (93) variables_lst -> VARIABLE .
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 93 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 93 (variables_lst -> VARIABLE .)
    AND_KEY         reduce using rule 93 (variables_lst -> VARIABLE .)
    OR_KEY          reduce using rule 93 (variables_lst -> VARIABLE .)
    NOT_KEY         reduce using rule 93 (variables_lst -> VARIABLE .)
    IMPLY_KEY       reduce using rule 93 (variables_lst -> VARIABLE .)
    EXISTS_KEY      reduce using rule 93 (variables_lst -> VARIABLE .)
    FORALL_KEY      reduce using rule 93 (variables_lst -> VARIABLE .)
    LPAREN          reduce using rule 93 (variables_lst -> VARIABLE .)
    NAME            reduce using rule 93 (variables_lst -> VARIABLE .)
    EQUALS          reduce using rule 93 (variables_lst -> VARIABLE .)
    ONEOF_KEY       reduce using rule 93 (variables_lst -> VARIABLE .)
    WHEN_KEY        reduce using rule 93 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 89

    variables_lst                  shift and go to state 105

state 90

    (23) constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 23 (constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .)


state 91

    (24) constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN .

    LPAREN          reduce using rule 24 (constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN .)


state 92

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 3 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN .)


state 93

    (42) action_def -> LPAREN ACTION_KEY NAME parameters_def . precond_def effects_def RPAREN
    (45) precond_def -> . PRECONDITION_KEY LPAREN formula RPAREN

    PRECONDITION_KEY shift and go to state 107

    precond_def                    shift and go to state 106

state 94

    (43) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (44) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 108


state 95

    (38) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (39) typed_constants_lst -> constants_lst HYPHEN type .
    (38) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (39) typed_constants_lst -> . constants_lst HYPHEN type
    (36) constants_lst -> . constant constants_lst
    (37) constants_lst -> . constant
    (95) constant -> . NAME

    RPAREN          reduce using rule 39 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 63

    constants_lst                  shift and go to state 61
    typed_constants_lst            shift and go to state 109
    constant                       shift and go to state 62

state 96

    (94) type -> NAME .

    NAME            reduce using rule 94 (type -> NAME .)
    RPAREN          reduce using rule 94 (type -> NAME .)
    VARIABLE        reduce using rule 94 (type -> NAME .)


state 97

    (11) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (32) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (33) ground_predicates_lst -> . ground_predicate
    (34) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (35) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 101

    ground_predicates_lst          shift and go to state 110
    ground_predicate               shift and go to state 83

state 98

    (34) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (35) ground_predicate -> LPAREN NAME . RPAREN
    (36) constants_lst -> . constant constants_lst
    (37) constants_lst -> . constant
    (95) constant -> . NAME

    RPAREN          shift and go to state 112
    NAME            shift and go to state 63

    constants_lst                  shift and go to state 111
    constant                       shift and go to state 62

state 99

    (12) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 12 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 100

    (32) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 32 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 101

    (34) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (35) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 98


state 102

    (13) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN

    AND_KEY         shift and go to state 113


state 103

    (30) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 30 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 30 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 104

    (90) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (91) typed_variables_lst -> variables_lst HYPHEN . type
    (94) type -> . NAME

    NAME            shift and go to state 96

    type                           shift and go to state 114

state 105

    (92) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    AND_KEY         reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    OR_KEY          reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    NOT_KEY         reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    IMPLY_KEY       reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    EXISTS_KEY      reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    FORALL_KEY      reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    LPAREN          reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    NAME            reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    EQUALS          reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    ONEOF_KEY       reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)
    WHEN_KEY        reduce using rule 92 (variables_lst -> VARIABLE variables_lst .)


state 106

    (42) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def . effects_def RPAREN
    (62) effects_def -> . EFFECT_KEY LPAREN one_eff_formula RPAREN

    EFFECT_KEY      shift and go to state 116

    effects_def                    shift and go to state 115

state 107

    (45) precond_def -> PRECONDITION_KEY . LPAREN formula RPAREN

    LPAREN          shift and go to state 117


state 108

    (43) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (44) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (90) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> . variables_lst HYPHEN type
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 119
    VARIABLE        shift and go to state 89

    typed_variables_lst            shift and go to state 118
    variables_lst                  shift and go to state 88

state 109

    (38) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 38 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 110

    (11) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 120


state 111

    (34) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 121


state 112

    (35) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 35 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 35 (ground_predicate -> LPAREN NAME RPAREN .)


state 113

    (13) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (32) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (33) ground_predicates_lst -> . ground_predicate
    (34) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (35) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 101

    ground_predicates_lst          shift and go to state 122
    ground_predicate               shift and go to state 83

state 114

    (90) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (91) typed_variables_lst -> variables_lst HYPHEN type .
    (90) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> . variables_lst HYPHEN type
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 91 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 89

    variables_lst                  shift and go to state 88
    typed_variables_lst            shift and go to state 123

state 115

    (42) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def . RPAREN

    RPAREN          shift and go to state 124


state 116

    (62) effects_def -> EFFECT_KEY . LPAREN one_eff_formula RPAREN

    LPAREN          shift and go to state 125


state 117

    (45) precond_def -> PRECONDITION_KEY LPAREN . formula RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 127
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 118

    (43) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 138


state 119

    (44) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 44 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 120

    (11) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 139


state 121

    (34) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 34 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 34 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 122

    (13) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 140


state 123

    (90) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 90 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 124

    (42) action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .

    LPAREN          reduce using rule 42 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)
    RPAREN          reduce using rule 42 (action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN .)


state 125

    (62) effects_def -> EFFECT_KEY LPAREN . one_eff_formula RPAREN
    (63) one_eff_formula -> . literal
    (64) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (65) one_eff_formula -> . AND_KEY
    (66) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (67) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (68) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (69) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (70) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (71) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 144
    ONEOF_KEY       shift and go to state 145
    WHEN_KEY        shift and go to state 146
    LPAREN          shift and go to state 141
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    one_eff_formula                shift and go to state 142
    literal                        shift and go to state 143
    predicate                      shift and go to state 135

state 126

    (53) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (54) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (55) formula -> LPAREN . NOT_KEY formula RPAREN
    (56) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (57) formula -> LPAREN . literal RPAREN
    (58) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> LPAREN . NOT_KEY predicate RPAREN
    (84) predicate -> LPAREN . NAME variables_lst RPAREN
    (85) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> LPAREN . NAME RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 148
    OR_KEY          shift and go to state 149
    NOT_KEY         shift and go to state 150
    IMPLY_KEY       shift and go to state 151
    EXISTS_KEY      shift and go to state 153
    FORALL_KEY      shift and go to state 154
    NAME            shift and go to state 155
    EQUALS          shift and go to state 156
    LPAREN          shift and go to state 147

    literal                        shift and go to state 152
    predicate                      shift and go to state 135

state 127

    (45) precond_def -> PRECONDITION_KEY LPAREN formula . RPAREN

    RPAREN          shift and go to state 157


state 128

    (46) formula -> literal .

    RPAREN          reduce using rule 46 (formula -> literal .)
    AND_KEY         reduce using rule 46 (formula -> literal .)
    OR_KEY          reduce using rule 46 (formula -> literal .)
    NOT_KEY         reduce using rule 46 (formula -> literal .)
    IMPLY_KEY       reduce using rule 46 (formula -> literal .)
    EXISTS_KEY      reduce using rule 46 (formula -> literal .)
    FORALL_KEY      reduce using rule 46 (formula -> literal .)
    LPAREN          reduce using rule 46 (formula -> literal .)
    NAME            reduce using rule 46 (formula -> literal .)
    EQUALS          reduce using rule 46 (formula -> literal .)


state 129

    (47) formula -> AND_KEY . formula_lst
    (60) formula_lst -> . formula formula_lst
    (61) formula_lst -> . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula_lst                    shift and go to state 158
    formula                        shift and go to state 159
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 130

    (48) formula -> OR_KEY . formula_lst
    (60) formula_lst -> . formula formula_lst
    (61) formula_lst -> . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula_lst                    shift and go to state 160
    formula                        shift and go to state 159
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 131

    (49) formula -> NOT_KEY . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 161
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 132

    (50) formula -> IMPLY_KEY . formula formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 162
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 133

    (51) formula -> EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 163


state 134

    (52) formula -> FORALL_KEY . LPAREN typed_variables_lst RPAREN formula

    LPAREN          shift and go to state 164


state 135

    (83) literal -> predicate .

    RPAREN          reduce using rule 83 (literal -> predicate .)
    AND_KEY         reduce using rule 83 (literal -> predicate .)
    OR_KEY          reduce using rule 83 (literal -> predicate .)
    NOT_KEY         reduce using rule 83 (literal -> predicate .)
    IMPLY_KEY       reduce using rule 83 (literal -> predicate .)
    EXISTS_KEY      reduce using rule 83 (literal -> predicate .)
    FORALL_KEY      reduce using rule 83 (literal -> predicate .)
    LPAREN          reduce using rule 83 (literal -> predicate .)
    NAME            reduce using rule 83 (literal -> predicate .)
    EQUALS          reduce using rule 83 (literal -> predicate .)
    ONEOF_KEY       reduce using rule 83 (literal -> predicate .)
    WHEN_KEY        reduce using rule 83 (literal -> predicate .)


state 136

    (87) predicate -> NAME . variables_lst
    (89) predicate -> NAME .
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 89 (predicate -> NAME .)
    AND_KEY         reduce using rule 89 (predicate -> NAME .)
    OR_KEY          reduce using rule 89 (predicate -> NAME .)
    NOT_KEY         reduce using rule 89 (predicate -> NAME .)
    IMPLY_KEY       reduce using rule 89 (predicate -> NAME .)
    EXISTS_KEY      reduce using rule 89 (predicate -> NAME .)
    FORALL_KEY      reduce using rule 89 (predicate -> NAME .)
    LPAREN          reduce using rule 89 (predicate -> NAME .)
    NAME            reduce using rule 89 (predicate -> NAME .)
    EQUALS          reduce using rule 89 (predicate -> NAME .)
    ONEOF_KEY       reduce using rule 89 (predicate -> NAME .)
    WHEN_KEY        reduce using rule 89 (predicate -> NAME .)
    VARIABLE        shift and go to state 89

    variables_lst                  shift and go to state 165

state 137

    (88) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 166


state 138

    (43) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 43 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 139

    (11) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 11 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 140

    (13) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 167


state 141

    (68) one_eff_formula -> LPAREN . ONEOF_KEY atomic_eff_lst RPAREN
    (69) one_eff_formula -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (70) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (71) one_eff_formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (82) literal -> LPAREN . NOT_KEY predicate RPAREN
    (84) predicate -> LPAREN . NAME variables_lst RPAREN
    (85) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> LPAREN . NAME RPAREN

    ONEOF_KEY       shift and go to state 168
    WHEN_KEY        shift and go to state 169
    FORALL_KEY      shift and go to state 170
    NOT_KEY         shift and go to state 171
    NAME            shift and go to state 172
    EQUALS          shift and go to state 173


state 142

    (62) effects_def -> EFFECT_KEY LPAREN one_eff_formula . RPAREN

    RPAREN          shift and go to state 174


state 143

    (63) one_eff_formula -> literal .

    RPAREN          reduce using rule 63 (one_eff_formula -> literal .)
    AND_KEY         reduce using rule 63 (one_eff_formula -> literal .)
    ONEOF_KEY       reduce using rule 63 (one_eff_formula -> literal .)
    WHEN_KEY        reduce using rule 63 (one_eff_formula -> literal .)
    LPAREN          reduce using rule 63 (one_eff_formula -> literal .)
    NAME            reduce using rule 63 (one_eff_formula -> literal .)
    EQUALS          reduce using rule 63 (one_eff_formula -> literal .)


state 144

    (64) one_eff_formula -> AND_KEY . one_eff_formula_lst
    (65) one_eff_formula -> AND_KEY .
    (72) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (73) one_eff_formula_lst -> . one_eff_formula
    (63) one_eff_formula -> . literal
    (64) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (65) one_eff_formula -> . AND_KEY
    (66) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (67) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (68) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (69) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (70) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (71) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for ONEOF_KEY resolved as shift
  ! shift/reduce conflict for WHEN_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 65 (one_eff_formula -> AND_KEY .)
    AND_KEY         shift and go to state 144
    ONEOF_KEY       shift and go to state 145
    WHEN_KEY        shift and go to state 146
    LPAREN          shift and go to state 141
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

  ! AND_KEY         [ reduce using rule 65 (one_eff_formula -> AND_KEY .) ]
  ! ONEOF_KEY       [ reduce using rule 65 (one_eff_formula -> AND_KEY .) ]
  ! WHEN_KEY        [ reduce using rule 65 (one_eff_formula -> AND_KEY .) ]
  ! LPAREN          [ reduce using rule 65 (one_eff_formula -> AND_KEY .) ]
  ! NAME            [ reduce using rule 65 (one_eff_formula -> AND_KEY .) ]
  ! EQUALS          [ reduce using rule 65 (one_eff_formula -> AND_KEY .) ]

    one_eff_formula_lst            shift and go to state 175
    one_eff_formula                shift and go to state 176
    literal                        shift and go to state 143
    predicate                      shift and go to state 135

state 145

    (66) one_eff_formula -> ONEOF_KEY . atomic_eff_lst
    (74) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (75) atomic_eff_lst -> . atomic_eff
    (76) atomic_eff -> . literal
    (77) atomic_eff -> . AND_KEY literal_lst
    (78) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (79) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 180
    LPAREN          shift and go to state 181
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    atomic_eff_lst                 shift and go to state 177
    atomic_eff                     shift and go to state 178
    literal                        shift and go to state 179
    predicate                      shift and go to state 135

state 146

    (67) one_eff_formula -> WHEN_KEY . formula atomic_eff
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 182
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 147

    (82) literal -> LPAREN . NOT_KEY predicate RPAREN
    (84) predicate -> LPAREN . NAME variables_lst RPAREN
    (85) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 171
    NAME            shift and go to state 172
    EQUALS          shift and go to state 173


state 148

    (53) formula -> LPAREN AND_KEY . formula_lst RPAREN
    (60) formula_lst -> . formula formula_lst
    (61) formula_lst -> . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula_lst                    shift and go to state 183
    formula                        shift and go to state 159
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 149

    (54) formula -> LPAREN OR_KEY . formula_lst RPAREN
    (60) formula_lst -> . formula formula_lst
    (61) formula_lst -> . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula_lst                    shift and go to state 184
    formula                        shift and go to state 159
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 150

    (55) formula -> LPAREN NOT_KEY . formula RPAREN
    (82) literal -> LPAREN NOT_KEY . predicate RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 185
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 186
    predicate                      shift and go to state 187
    literal                        shift and go to state 128

state 151

    (56) formula -> LPAREN IMPLY_KEY . formula formula RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 188
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 152

    (57) formula -> LPAREN literal . RPAREN

    RPAREN          shift and go to state 189


state 153

    (58) formula -> LPAREN EXISTS_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 190


state 154

    (59) formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN formula RPAREN

    LPAREN          shift and go to state 191


state 155

    (84) predicate -> LPAREN NAME . variables_lst RPAREN
    (86) predicate -> LPAREN NAME . RPAREN
    (87) predicate -> NAME . variables_lst
    (89) predicate -> NAME .
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 193
    VARIABLE        shift and go to state 89

  ! RPAREN          [ reduce using rule 89 (predicate -> NAME .) ]

    variables_lst                  shift and go to state 192

state 156

    (85) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN
    (88) predicate -> EQUALS . VARIABLE VARIABLE

    VARIABLE        shift and go to state 194


state 157

    (45) precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .

    EFFECT_KEY      reduce using rule 45 (precond_def -> PRECONDITION_KEY LPAREN formula RPAREN .)


state 158

    (47) formula -> AND_KEY formula_lst .

    RPAREN          reduce using rule 47 (formula -> AND_KEY formula_lst .)
    AND_KEY         reduce using rule 47 (formula -> AND_KEY formula_lst .)
    OR_KEY          reduce using rule 47 (formula -> AND_KEY formula_lst .)
    NOT_KEY         reduce using rule 47 (formula -> AND_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 47 (formula -> AND_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 47 (formula -> AND_KEY formula_lst .)
    FORALL_KEY      reduce using rule 47 (formula -> AND_KEY formula_lst .)
    LPAREN          reduce using rule 47 (formula -> AND_KEY formula_lst .)
    NAME            reduce using rule 47 (formula -> AND_KEY formula_lst .)
    EQUALS          reduce using rule 47 (formula -> AND_KEY formula_lst .)


state 159

    (60) formula_lst -> formula . formula_lst
    (61) formula_lst -> formula .
    (60) formula_lst -> . formula formula_lst
    (61) formula_lst -> . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for OR_KEY resolved as shift
  ! shift/reduce conflict for NOT_KEY resolved as shift
  ! shift/reduce conflict for IMPLY_KEY resolved as shift
  ! shift/reduce conflict for EXISTS_KEY resolved as shift
  ! shift/reduce conflict for FORALL_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 61 (formula_lst -> formula .)
    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

  ! AND_KEY         [ reduce using rule 61 (formula_lst -> formula .) ]
  ! OR_KEY          [ reduce using rule 61 (formula_lst -> formula .) ]
  ! NOT_KEY         [ reduce using rule 61 (formula_lst -> formula .) ]
  ! IMPLY_KEY       [ reduce using rule 61 (formula_lst -> formula .) ]
  ! EXISTS_KEY      [ reduce using rule 61 (formula_lst -> formula .) ]
  ! FORALL_KEY      [ reduce using rule 61 (formula_lst -> formula .) ]
  ! LPAREN          [ reduce using rule 61 (formula_lst -> formula .) ]
  ! NAME            [ reduce using rule 61 (formula_lst -> formula .) ]
  ! EQUALS          [ reduce using rule 61 (formula_lst -> formula .) ]

    formula                        shift and go to state 159
    formula_lst                    shift and go to state 195
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 160

    (48) formula -> OR_KEY formula_lst .

    RPAREN          reduce using rule 48 (formula -> OR_KEY formula_lst .)
    AND_KEY         reduce using rule 48 (formula -> OR_KEY formula_lst .)
    OR_KEY          reduce using rule 48 (formula -> OR_KEY formula_lst .)
    NOT_KEY         reduce using rule 48 (formula -> OR_KEY formula_lst .)
    IMPLY_KEY       reduce using rule 48 (formula -> OR_KEY formula_lst .)
    EXISTS_KEY      reduce using rule 48 (formula -> OR_KEY formula_lst .)
    FORALL_KEY      reduce using rule 48 (formula -> OR_KEY formula_lst .)
    LPAREN          reduce using rule 48 (formula -> OR_KEY formula_lst .)
    NAME            reduce using rule 48 (formula -> OR_KEY formula_lst .)
    EQUALS          reduce using rule 48 (formula -> OR_KEY formula_lst .)


state 161

    (49) formula -> NOT_KEY formula .

    RPAREN          reduce using rule 49 (formula -> NOT_KEY formula .)
    AND_KEY         reduce using rule 49 (formula -> NOT_KEY formula .)
    OR_KEY          reduce using rule 49 (formula -> NOT_KEY formula .)
    NOT_KEY         reduce using rule 49 (formula -> NOT_KEY formula .)
    IMPLY_KEY       reduce using rule 49 (formula -> NOT_KEY formula .)
    EXISTS_KEY      reduce using rule 49 (formula -> NOT_KEY formula .)
    FORALL_KEY      reduce using rule 49 (formula -> NOT_KEY formula .)
    LPAREN          reduce using rule 49 (formula -> NOT_KEY formula .)
    NAME            reduce using rule 49 (formula -> NOT_KEY formula .)
    EQUALS          reduce using rule 49 (formula -> NOT_KEY formula .)


state 162

    (50) formula -> IMPLY_KEY formula . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 196
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 163

    (51) formula -> EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula
    (90) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> . variables_lst HYPHEN type
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 89

    typed_variables_lst            shift and go to state 197
    variables_lst                  shift and go to state 88

state 164

    (52) formula -> FORALL_KEY LPAREN . typed_variables_lst RPAREN formula
    (90) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> . variables_lst HYPHEN type
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 89

    typed_variables_lst            shift and go to state 198
    variables_lst                  shift and go to state 88

state 165

    (87) predicate -> NAME variables_lst .

    RPAREN          reduce using rule 87 (predicate -> NAME variables_lst .)
    AND_KEY         reduce using rule 87 (predicate -> NAME variables_lst .)
    OR_KEY          reduce using rule 87 (predicate -> NAME variables_lst .)
    NOT_KEY         reduce using rule 87 (predicate -> NAME variables_lst .)
    IMPLY_KEY       reduce using rule 87 (predicate -> NAME variables_lst .)
    EXISTS_KEY      reduce using rule 87 (predicate -> NAME variables_lst .)
    FORALL_KEY      reduce using rule 87 (predicate -> NAME variables_lst .)
    LPAREN          reduce using rule 87 (predicate -> NAME variables_lst .)
    NAME            reduce using rule 87 (predicate -> NAME variables_lst .)
    EQUALS          reduce using rule 87 (predicate -> NAME variables_lst .)
    ONEOF_KEY       reduce using rule 87 (predicate -> NAME variables_lst .)
    WHEN_KEY        reduce using rule 87 (predicate -> NAME variables_lst .)


state 166

    (88) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 199


state 167

    (13) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 13 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 168

    (68) one_eff_formula -> LPAREN ONEOF_KEY . atomic_eff_lst RPAREN
    (74) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (75) atomic_eff_lst -> . atomic_eff
    (76) atomic_eff -> . literal
    (77) atomic_eff -> . AND_KEY literal_lst
    (78) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (79) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 180
    LPAREN          shift and go to state 181
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    atomic_eff_lst                 shift and go to state 200
    atomic_eff                     shift and go to state 178
    literal                        shift and go to state 179
    predicate                      shift and go to state 135

state 169

    (69) one_eff_formula -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 201
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 170

    (70) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (71) one_eff_formula -> LPAREN FORALL_KEY . LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    LPAREN          shift and go to state 202


state 171

    (82) literal -> LPAREN NOT_KEY . predicate RPAREN
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    LPAREN          shift and go to state 203
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    predicate                      shift and go to state 204

state 172

    (84) predicate -> LPAREN NAME . variables_lst RPAREN
    (86) predicate -> LPAREN NAME . RPAREN
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 193
    VARIABLE        shift and go to state 89

    variables_lst                  shift and go to state 205

state 173

    (85) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 206


state 174

    (62) effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .

    RPAREN          reduce using rule 62 (effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN .)


state 175

    (64) one_eff_formula -> AND_KEY one_eff_formula_lst .

    RPAREN          reduce using rule 64 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    AND_KEY         reduce using rule 64 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 64 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    WHEN_KEY        reduce using rule 64 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    LPAREN          reduce using rule 64 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    NAME            reduce using rule 64 (one_eff_formula -> AND_KEY one_eff_formula_lst .)
    EQUALS          reduce using rule 64 (one_eff_formula -> AND_KEY one_eff_formula_lst .)


state 176

    (72) one_eff_formula_lst -> one_eff_formula . one_eff_formula_lst
    (73) one_eff_formula_lst -> one_eff_formula .
    (72) one_eff_formula_lst -> . one_eff_formula one_eff_formula_lst
    (73) one_eff_formula_lst -> . one_eff_formula
    (63) one_eff_formula -> . literal
    (64) one_eff_formula -> . AND_KEY one_eff_formula_lst
    (65) one_eff_formula -> . AND_KEY
    (66) one_eff_formula -> . ONEOF_KEY atomic_eff_lst
    (67) one_eff_formula -> . WHEN_KEY formula atomic_eff
    (68) one_eff_formula -> . LPAREN ONEOF_KEY atomic_eff_lst RPAREN
    (69) one_eff_formula -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (70) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN
    (71) one_eff_formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for ONEOF_KEY resolved as shift
  ! shift/reduce conflict for WHEN_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 73 (one_eff_formula_lst -> one_eff_formula .)
    AND_KEY         shift and go to state 144
    ONEOF_KEY       shift and go to state 145
    WHEN_KEY        shift and go to state 146
    LPAREN          shift and go to state 141
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

  ! AND_KEY         [ reduce using rule 73 (one_eff_formula_lst -> one_eff_formula .) ]
  ! ONEOF_KEY       [ reduce using rule 73 (one_eff_formula_lst -> one_eff_formula .) ]
  ! WHEN_KEY        [ reduce using rule 73 (one_eff_formula_lst -> one_eff_formula .) ]
  ! LPAREN          [ reduce using rule 73 (one_eff_formula_lst -> one_eff_formula .) ]
  ! NAME            [ reduce using rule 73 (one_eff_formula_lst -> one_eff_formula .) ]
  ! EQUALS          [ reduce using rule 73 (one_eff_formula_lst -> one_eff_formula .) ]

    one_eff_formula                shift and go to state 176
    one_eff_formula_lst            shift and go to state 207
    literal                        shift and go to state 143
    predicate                      shift and go to state 135

state 177

    (66) one_eff_formula -> ONEOF_KEY atomic_eff_lst .

    RPAREN          reduce using rule 66 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    AND_KEY         reduce using rule 66 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 66 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    WHEN_KEY        reduce using rule 66 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    LPAREN          reduce using rule 66 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    NAME            reduce using rule 66 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)
    EQUALS          reduce using rule 66 (one_eff_formula -> ONEOF_KEY atomic_eff_lst .)


state 178

    (74) atomic_eff_lst -> atomic_eff . atomic_eff_lst
    (75) atomic_eff_lst -> atomic_eff .
    (74) atomic_eff_lst -> . atomic_eff atomic_eff_lst
    (75) atomic_eff_lst -> . atomic_eff
    (76) atomic_eff -> . literal
    (77) atomic_eff -> . AND_KEY literal_lst
    (78) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (79) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

  ! shift/reduce conflict for AND_KEY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    RPAREN          reduce using rule 75 (atomic_eff_lst -> atomic_eff .)
    ONEOF_KEY       reduce using rule 75 (atomic_eff_lst -> atomic_eff .)
    WHEN_KEY        reduce using rule 75 (atomic_eff_lst -> atomic_eff .)
    AND_KEY         shift and go to state 180
    LPAREN          shift and go to state 181
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

  ! AND_KEY         [ reduce using rule 75 (atomic_eff_lst -> atomic_eff .) ]
  ! LPAREN          [ reduce using rule 75 (atomic_eff_lst -> atomic_eff .) ]
  ! NAME            [ reduce using rule 75 (atomic_eff_lst -> atomic_eff .) ]
  ! EQUALS          [ reduce using rule 75 (atomic_eff_lst -> atomic_eff .) ]

    atomic_eff                     shift and go to state 178
    atomic_eff_lst                 shift and go to state 208
    literal                        shift and go to state 179
    predicate                      shift and go to state 135

state 179

    (76) atomic_eff -> literal .

    AND_KEY         reduce using rule 76 (atomic_eff -> literal .)
    LPAREN          reduce using rule 76 (atomic_eff -> literal .)
    NAME            reduce using rule 76 (atomic_eff -> literal .)
    EQUALS          reduce using rule 76 (atomic_eff -> literal .)
    RPAREN          reduce using rule 76 (atomic_eff -> literal .)
    ONEOF_KEY       reduce using rule 76 (atomic_eff -> literal .)
    WHEN_KEY        reduce using rule 76 (atomic_eff -> literal .)


state 180

    (77) atomic_eff -> AND_KEY . literal_lst
    (80) literal_lst -> . literal literal_lst
    (81) literal_lst -> . literal
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    LPAREN          shift and go to state 147
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    literal_lst                    shift and go to state 209
    literal                        shift and go to state 210
    predicate                      shift and go to state 135

state 181

    (78) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (79) atomic_eff -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> LPAREN . NOT_KEY predicate RPAREN
    (84) predicate -> LPAREN . NAME variables_lst RPAREN
    (85) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 211
    WHEN_KEY        shift and go to state 212
    NOT_KEY         shift and go to state 171
    NAME            shift and go to state 172
    EQUALS          shift and go to state 173


state 182

    (67) one_eff_formula -> WHEN_KEY formula . atomic_eff
    (76) atomic_eff -> . literal
    (77) atomic_eff -> . AND_KEY literal_lst
    (78) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (79) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 180
    LPAREN          shift and go to state 181
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    atomic_eff                     shift and go to state 213
    literal                        shift and go to state 179
    predicate                      shift and go to state 135

state 183

    (53) formula -> LPAREN AND_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 214


state 184

    (54) formula -> LPAREN OR_KEY formula_lst . RPAREN

    RPAREN          shift and go to state 215


state 185

    (53) formula -> LPAREN . AND_KEY formula_lst RPAREN
    (54) formula -> LPAREN . OR_KEY formula_lst RPAREN
    (55) formula -> LPAREN . NOT_KEY formula RPAREN
    (56) formula -> LPAREN . IMPLY_KEY formula formula RPAREN
    (57) formula -> LPAREN . literal RPAREN
    (58) formula -> LPAREN . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> LPAREN . FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (84) predicate -> LPAREN . NAME variables_lst RPAREN
    (85) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> LPAREN . NAME RPAREN
    (82) literal -> LPAREN . NOT_KEY predicate RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 148
    OR_KEY          shift and go to state 149
    NOT_KEY         shift and go to state 150
    IMPLY_KEY       shift and go to state 151
    EXISTS_KEY      shift and go to state 153
    FORALL_KEY      shift and go to state 154
    NAME            shift and go to state 155
    EQUALS          shift and go to state 156
    LPAREN          shift and go to state 147

    literal                        shift and go to state 152
    predicate                      shift and go to state 135

state 186

    (55) formula -> LPAREN NOT_KEY formula . RPAREN

    RPAREN          shift and go to state 216


state 187

    (82) literal -> LPAREN NOT_KEY predicate . RPAREN
    (83) literal -> predicate .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 217

  ! RPAREN          [ reduce using rule 83 (literal -> predicate .) ]


state 188

    (56) formula -> LPAREN IMPLY_KEY formula . formula RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 218
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 189

    (57) formula -> LPAREN literal RPAREN .

    RPAREN          reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    AND_KEY         reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    OR_KEY          reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    NOT_KEY         reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    IMPLY_KEY       reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    EXISTS_KEY      reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    FORALL_KEY      reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    LPAREN          reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    NAME            reduce using rule 57 (formula -> LPAREN literal RPAREN .)
    EQUALS          reduce using rule 57 (formula -> LPAREN literal RPAREN .)


state 190

    (58) formula -> LPAREN EXISTS_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (90) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> . variables_lst HYPHEN type
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 89

    typed_variables_lst            shift and go to state 219
    variables_lst                  shift and go to state 88

state 191

    (59) formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN formula RPAREN
    (90) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> . variables_lst HYPHEN type
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 89

    typed_variables_lst            shift and go to state 220
    variables_lst                  shift and go to state 88

state 192

    (84) predicate -> LPAREN NAME variables_lst . RPAREN
    (87) predicate -> NAME variables_lst .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 221

  ! RPAREN          [ reduce using rule 87 (predicate -> NAME variables_lst .) ]


state 193

    (86) predicate -> LPAREN NAME RPAREN .

    RPAREN          reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    AND_KEY         reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    OR_KEY          reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    NOT_KEY         reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    IMPLY_KEY       reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    EXISTS_KEY      reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    FORALL_KEY      reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    NAME            reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    EQUALS          reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    ONEOF_KEY       reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)
    WHEN_KEY        reduce using rule 86 (predicate -> LPAREN NAME RPAREN .)


state 194

    (85) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN
    (88) predicate -> EQUALS VARIABLE . VARIABLE

    VARIABLE        shift and go to state 222


state 195

    (60) formula_lst -> formula formula_lst .

    AND_KEY         reduce using rule 60 (formula_lst -> formula formula_lst .)
    OR_KEY          reduce using rule 60 (formula_lst -> formula formula_lst .)
    NOT_KEY         reduce using rule 60 (formula_lst -> formula formula_lst .)
    IMPLY_KEY       reduce using rule 60 (formula_lst -> formula formula_lst .)
    EXISTS_KEY      reduce using rule 60 (formula_lst -> formula formula_lst .)
    FORALL_KEY      reduce using rule 60 (formula_lst -> formula formula_lst .)
    LPAREN          reduce using rule 60 (formula_lst -> formula formula_lst .)
    NAME            reduce using rule 60 (formula_lst -> formula formula_lst .)
    EQUALS          reduce using rule 60 (formula_lst -> formula formula_lst .)
    RPAREN          reduce using rule 60 (formula_lst -> formula formula_lst .)


state 196

    (50) formula -> IMPLY_KEY formula formula .

    RPAREN          reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    AND_KEY         reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    OR_KEY          reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    NOT_KEY         reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    IMPLY_KEY       reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    EXISTS_KEY      reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    FORALL_KEY      reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    LPAREN          reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    NAME            reduce using rule 50 (formula -> IMPLY_KEY formula formula .)
    EQUALS          reduce using rule 50 (formula -> IMPLY_KEY formula formula .)


state 197

    (51) formula -> EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 223


state 198

    (52) formula -> FORALL_KEY LPAREN typed_variables_lst . RPAREN formula

    RPAREN          shift and go to state 224


state 199

    (88) predicate -> EQUALS VARIABLE VARIABLE .

    RPAREN          reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    AND_KEY         reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    OR_KEY          reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    NOT_KEY         reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    IMPLY_KEY       reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    EXISTS_KEY      reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    FORALL_KEY      reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    LPAREN          reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    NAME            reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    EQUALS          reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    ONEOF_KEY       reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)
    WHEN_KEY        reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .)


state 200

    (68) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst . RPAREN

    RPAREN          shift and go to state 225


state 201

    (69) one_eff_formula -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (76) atomic_eff -> . literal
    (77) atomic_eff -> . AND_KEY literal_lst
    (78) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (79) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 180
    LPAREN          shift and go to state 181
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    atomic_eff                     shift and go to state 226
    literal                        shift and go to state 179
    predicate                      shift and go to state 135

state 202

    (70) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN atomic_eff RPAREN
    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN . typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (90) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (91) typed_variables_lst -> . variables_lst HYPHEN type
    (92) variables_lst -> . VARIABLE variables_lst
    (93) variables_lst -> . VARIABLE

    VARIABLE        shift and go to state 89

    typed_variables_lst            shift and go to state 227
    variables_lst                  shift and go to state 88

state 203

    (84) predicate -> LPAREN . NAME variables_lst RPAREN
    (85) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 172
    EQUALS          shift and go to state 173


state 204

    (82) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 217


state 205

    (84) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 221


state 206

    (85) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 228


state 207

    (72) one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .

    AND_KEY         reduce using rule 72 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    ONEOF_KEY       reduce using rule 72 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    WHEN_KEY        reduce using rule 72 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    LPAREN          reduce using rule 72 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    NAME            reduce using rule 72 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    EQUALS          reduce using rule 72 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)
    RPAREN          reduce using rule 72 (one_eff_formula_lst -> one_eff_formula one_eff_formula_lst .)


state 208

    (74) atomic_eff_lst -> atomic_eff atomic_eff_lst .

    RPAREN          reduce using rule 74 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    AND_KEY         reduce using rule 74 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    ONEOF_KEY       reduce using rule 74 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    WHEN_KEY        reduce using rule 74 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    LPAREN          reduce using rule 74 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    NAME            reduce using rule 74 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)
    EQUALS          reduce using rule 74 (atomic_eff_lst -> atomic_eff atomic_eff_lst .)


state 209

    (77) atomic_eff -> AND_KEY literal_lst .

    AND_KEY         reduce using rule 77 (atomic_eff -> AND_KEY literal_lst .)
    LPAREN          reduce using rule 77 (atomic_eff -> AND_KEY literal_lst .)
    NAME            reduce using rule 77 (atomic_eff -> AND_KEY literal_lst .)
    EQUALS          reduce using rule 77 (atomic_eff -> AND_KEY literal_lst .)
    RPAREN          reduce using rule 77 (atomic_eff -> AND_KEY literal_lst .)
    ONEOF_KEY       reduce using rule 77 (atomic_eff -> AND_KEY literal_lst .)
    WHEN_KEY        reduce using rule 77 (atomic_eff -> AND_KEY literal_lst .)


state 210

    (80) literal_lst -> literal . literal_lst
    (81) literal_lst -> literal .
    (80) literal_lst -> . literal literal_lst
    (81) literal_lst -> . literal
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    AND_KEY         reduce using rule 81 (literal_lst -> literal .)
    RPAREN          reduce using rule 81 (literal_lst -> literal .)
    ONEOF_KEY       reduce using rule 81 (literal_lst -> literal .)
    WHEN_KEY        reduce using rule 81 (literal_lst -> literal .)
    LPAREN          shift and go to state 147
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

  ! LPAREN          [ reduce using rule 81 (literal_lst -> literal .) ]
  ! NAME            [ reduce using rule 81 (literal_lst -> literal .) ]
  ! EQUALS          [ reduce using rule 81 (literal_lst -> literal .) ]

    literal                        shift and go to state 210
    literal_lst                    shift and go to state 229
    predicate                      shift and go to state 135

state 211

    (78) atomic_eff -> LPAREN AND_KEY . literal_lst RPAREN
    (80) literal_lst -> . literal literal_lst
    (81) literal_lst -> . literal
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    LPAREN          shift and go to state 147
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    literal_lst                    shift and go to state 230
    literal                        shift and go to state 210
    predicate                      shift and go to state 135

state 212

    (79) atomic_eff -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 231
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 213

    (67) one_eff_formula -> WHEN_KEY formula atomic_eff .

    RPAREN          reduce using rule 67 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    AND_KEY         reduce using rule 67 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    ONEOF_KEY       reduce using rule 67 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    WHEN_KEY        reduce using rule 67 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    LPAREN          reduce using rule 67 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    NAME            reduce using rule 67 (one_eff_formula -> WHEN_KEY formula atomic_eff .)
    EQUALS          reduce using rule 67 (one_eff_formula -> WHEN_KEY formula atomic_eff .)


state 214

    (53) formula -> LPAREN AND_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    NAME            reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 53 (formula -> LPAREN AND_KEY formula_lst RPAREN .)


state 215

    (54) formula -> LPAREN OR_KEY formula_lst RPAREN .

    RPAREN          reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    AND_KEY         reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    OR_KEY          reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NOT_KEY         reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    IMPLY_KEY       reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EXISTS_KEY      reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    FORALL_KEY      reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    LPAREN          reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    NAME            reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)
    EQUALS          reduce using rule 54 (formula -> LPAREN OR_KEY formula_lst RPAREN .)


state 216

    (55) formula -> LPAREN NOT_KEY formula RPAREN .

    RPAREN          reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    AND_KEY         reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    OR_KEY          reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NOT_KEY         reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    IMPLY_KEY       reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EXISTS_KEY      reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    FORALL_KEY      reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    LPAREN          reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    NAME            reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)
    EQUALS          reduce using rule 55 (formula -> LPAREN NOT_KEY formula RPAREN .)


state 217

    (82) literal -> LPAREN NOT_KEY predicate RPAREN .

    RPAREN          reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    AND_KEY         reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    OR_KEY          reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NOT_KEY         reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    IMPLY_KEY       reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EXISTS_KEY      reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    FORALL_KEY      reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NAME            reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EQUALS          reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    ONEOF_KEY       reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    WHEN_KEY        reduce using rule 82 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 218

    (56) formula -> LPAREN IMPLY_KEY formula formula . RPAREN

    RPAREN          shift and go to state 232


state 219

    (58) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 233


state 220

    (59) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN formula RPAREN

    RPAREN          shift and go to state 234


state 221

    (84) predicate -> LPAREN NAME variables_lst RPAREN .

    RPAREN          reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    AND_KEY         reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    OR_KEY          reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NOT_KEY         reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    IMPLY_KEY       reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EXISTS_KEY      reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    FORALL_KEY      reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NAME            reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EQUALS          reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    ONEOF_KEY       reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)
    WHEN_KEY        reduce using rule 84 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 222

    (85) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN
    (88) predicate -> EQUALS VARIABLE VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 235

  ! RPAREN          [ reduce using rule 88 (predicate -> EQUALS VARIABLE VARIABLE .) ]


state 223

    (51) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 236
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 224

    (52) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN . formula
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 237
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 225

    (68) one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .

    RPAREN          reduce using rule 68 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    AND_KEY         reduce using rule 68 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    ONEOF_KEY       reduce using rule 68 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    WHEN_KEY        reduce using rule 68 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    LPAREN          reduce using rule 68 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    NAME            reduce using rule 68 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)
    EQUALS          reduce using rule 68 (one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN .)


state 226

    (69) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 238


state 227

    (70) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN atomic_eff RPAREN
    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst . RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN

    RPAREN          shift and go to state 239


state 228

    (85) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 235


state 229

    (80) literal_lst -> literal literal_lst .

    AND_KEY         reduce using rule 80 (literal_lst -> literal literal_lst .)
    LPAREN          reduce using rule 80 (literal_lst -> literal literal_lst .)
    NAME            reduce using rule 80 (literal_lst -> literal literal_lst .)
    EQUALS          reduce using rule 80 (literal_lst -> literal literal_lst .)
    RPAREN          reduce using rule 80 (literal_lst -> literal literal_lst .)
    ONEOF_KEY       reduce using rule 80 (literal_lst -> literal literal_lst .)
    WHEN_KEY        reduce using rule 80 (literal_lst -> literal literal_lst .)


state 230

    (78) atomic_eff -> LPAREN AND_KEY literal_lst . RPAREN

    RPAREN          shift and go to state 240


state 231

    (79) atomic_eff -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (76) atomic_eff -> . literal
    (77) atomic_eff -> . AND_KEY literal_lst
    (78) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (79) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 180
    LPAREN          shift and go to state 181
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    atomic_eff                     shift and go to state 241
    literal                        shift and go to state 179
    predicate                      shift and go to state 135

state 232

    (56) formula -> LPAREN IMPLY_KEY formula formula RPAREN .

    RPAREN          reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    AND_KEY         reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    OR_KEY          reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NOT_KEY         reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    IMPLY_KEY       reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EXISTS_KEY      reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    FORALL_KEY      reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    LPAREN          reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    NAME            reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)
    EQUALS          reduce using rule 56 (formula -> LPAREN IMPLY_KEY formula formula RPAREN .)


state 233

    (58) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 242
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 234

    (59) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . formula RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 243
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 235

    (85) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    RPAREN          reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    AND_KEY         reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    OR_KEY          reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NOT_KEY         reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    IMPLY_KEY       reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EXISTS_KEY      reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    FORALL_KEY      reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NAME            reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EQUALS          reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    ONEOF_KEY       reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    WHEN_KEY        reduce using rule 85 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 236

    (51) formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 51 (formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula .)


state 237

    (52) formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .

    RPAREN          reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    AND_KEY         reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    OR_KEY          reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NOT_KEY         reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    IMPLY_KEY       reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EXISTS_KEY      reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    FORALL_KEY      reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    LPAREN          reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    NAME            reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)
    EQUALS          reduce using rule 52 (formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula .)


state 238

    (69) one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    RPAREN          reduce using rule 69 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    AND_KEY         reduce using rule 69 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 69 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 69 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 69 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 69 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 69 (one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 239

    (70) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . atomic_eff RPAREN
    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN . LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN
    (76) atomic_eff -> . literal
    (77) atomic_eff -> . AND_KEY literal_lst
    (78) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (79) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    LPAREN          shift and go to state 244
    AND_KEY         shift and go to state 180
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    atomic_eff                     shift and go to state 245
    literal                        shift and go to state 179
    predicate                      shift and go to state 135

state 240

    (78) atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .

    AND_KEY         reduce using rule 78 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    LPAREN          reduce using rule 78 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    NAME            reduce using rule 78 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    EQUALS          reduce using rule 78 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    RPAREN          reduce using rule 78 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    ONEOF_KEY       reduce using rule 78 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)
    WHEN_KEY        reduce using rule 78 (atomic_eff -> LPAREN AND_KEY literal_lst RPAREN .)


state 241

    (79) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 246


state 242

    (58) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 247


state 243

    (59) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula . RPAREN

    RPAREN          shift and go to state 248


state 244

    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN . WHEN_KEY formula atomic_eff RPAREN RPAREN
    (78) atomic_eff -> LPAREN . AND_KEY literal_lst RPAREN
    (79) atomic_eff -> LPAREN . WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> LPAREN . NOT_KEY predicate RPAREN
    (84) predicate -> LPAREN . NAME variables_lst RPAREN
    (85) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> LPAREN . NAME RPAREN

    WHEN_KEY        shift and go to state 249
    AND_KEY         shift and go to state 211
    NOT_KEY         shift and go to state 171
    NAME            shift and go to state 172
    EQUALS          shift and go to state 173


state 245

    (70) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff . RPAREN

    RPAREN          shift and go to state 250


state 246

    (79) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

    AND_KEY         reduce using rule 79 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    LPAREN          reduce using rule 79 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    NAME            reduce using rule 79 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    EQUALS          reduce using rule 79 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    RPAREN          reduce using rule 79 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 79 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 79 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .)


state 247

    (58) formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 58 (formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 248

    (59) formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .

    RPAREN          reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    AND_KEY         reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    OR_KEY          reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NOT_KEY         reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    IMPLY_KEY       reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EXISTS_KEY      reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    FORALL_KEY      reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    LPAREN          reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    NAME            reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)
    EQUALS          reduce using rule 59 (formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN .)


state 249

    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY . formula atomic_eff RPAREN RPAREN
    (79) atomic_eff -> LPAREN WHEN_KEY . formula atomic_eff RPAREN
    (46) formula -> . literal
    (47) formula -> . AND_KEY formula_lst
    (48) formula -> . OR_KEY formula_lst
    (49) formula -> . NOT_KEY formula
    (50) formula -> . IMPLY_KEY formula formula
    (51) formula -> . EXISTS_KEY LPAREN typed_variables_lst RPAREN formula
    (52) formula -> . FORALL_KEY LPAREN typed_variables_lst RPAREN formula
    (53) formula -> . LPAREN AND_KEY formula_lst RPAREN
    (54) formula -> . LPAREN OR_KEY formula_lst RPAREN
    (55) formula -> . LPAREN NOT_KEY formula RPAREN
    (56) formula -> . LPAREN IMPLY_KEY formula formula RPAREN
    (57) formula -> . LPAREN literal RPAREN
    (58) formula -> . LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (59) formula -> . LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 129
    OR_KEY          shift and go to state 130
    NOT_KEY         shift and go to state 131
    IMPLY_KEY       shift and go to state 132
    EXISTS_KEY      shift and go to state 133
    FORALL_KEY      shift and go to state 134
    LPAREN          shift and go to state 126
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    formula                        shift and go to state 251
    literal                        shift and go to state 128
    predicate                      shift and go to state 135

state 250

    (70) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .

    RPAREN          reduce using rule 70 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    AND_KEY         reduce using rule 70 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    ONEOF_KEY       reduce using rule 70 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    WHEN_KEY        reduce using rule 70 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    LPAREN          reduce using rule 70 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    NAME            reduce using rule 70 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)
    EQUALS          reduce using rule 70 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN .)


state 251

    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula . atomic_eff RPAREN RPAREN
    (79) atomic_eff -> LPAREN WHEN_KEY formula . atomic_eff RPAREN
    (76) atomic_eff -> . literal
    (77) atomic_eff -> . AND_KEY literal_lst
    (78) atomic_eff -> . LPAREN AND_KEY literal_lst RPAREN
    (79) atomic_eff -> . LPAREN WHEN_KEY formula atomic_eff RPAREN
    (82) literal -> . LPAREN NOT_KEY predicate RPAREN
    (83) literal -> . predicate
    (84) predicate -> . LPAREN NAME variables_lst RPAREN
    (85) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (86) predicate -> . LPAREN NAME RPAREN
    (87) predicate -> . NAME variables_lst
    (88) predicate -> . EQUALS VARIABLE VARIABLE
    (89) predicate -> . NAME

    AND_KEY         shift and go to state 180
    LPAREN          shift and go to state 181
    NAME            shift and go to state 136
    EQUALS          shift and go to state 137

    atomic_eff                     shift and go to state 252
    literal                        shift and go to state 179
    predicate                      shift and go to state 135

state 252

    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff . RPAREN RPAREN
    (79) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff . RPAREN

    RPAREN          shift and go to state 253


state 253

    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN . RPAREN
    (79) atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 254

  ! RPAREN          [ reduce using rule 79 (atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN .) ]


state 254

    (71) one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .

    RPAREN          reduce using rule 71 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    AND_KEY         reduce using rule 71 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    ONEOF_KEY       reduce using rule 71 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    WHEN_KEY        reduce using rule 71 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    LPAREN          reduce using rule 71 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    NAME            reduce using rule 71 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)
    EQUALS          reduce using rule 71 (one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NAME in state 74 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 144 resolved as shift
WARNING: shift/reduce conflict for ONEOF_KEY in state 144 resolved as shift
WARNING: shift/reduce conflict for WHEN_KEY in state 144 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for NAME in state 144 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 144 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 155 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 159 resolved as shift
WARNING: shift/reduce conflict for OR_KEY in state 159 resolved as shift
WARNING: shift/reduce conflict for NOT_KEY in state 159 resolved as shift
WARNING: shift/reduce conflict for IMPLY_KEY in state 159 resolved as shift
WARNING: shift/reduce conflict for EXISTS_KEY in state 159 resolved as shift
WARNING: shift/reduce conflict for FORALL_KEY in state 159 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 159 resolved as shift
WARNING: shift/reduce conflict for NAME in state 159 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 159 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 176 resolved as shift
WARNING: shift/reduce conflict for ONEOF_KEY in state 176 resolved as shift
WARNING: shift/reduce conflict for WHEN_KEY in state 176 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 176 resolved as shift
WARNING: shift/reduce conflict for NAME in state 176 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 176 resolved as shift
WARNING: shift/reduce conflict for AND_KEY in state 178 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 178 resolved as shift
WARNING: shift/reduce conflict for NAME in state 178 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 178 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 187 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 192 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 210 resolved as shift
WARNING: shift/reduce conflict for NAME in state 210 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 210 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 222 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 253 resolved as shift
