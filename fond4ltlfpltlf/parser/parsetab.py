# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "ACTION_KEY ADL_KEY AND_KEY CONSTANTS_KEY DEFINE_KEY DOMAIN_KEY DOMAIN_PKEY EFFECT_KEY EQUALITY_KEY EQUALS EXISTS_KEY FORALL_KEY GOAL_KEY HYPHEN IMPLY_KEY INIT_KEY LPAREN NAME ND_KEY NOT_KEY OBJECTS_KEY ONEOF_KEY OR_KEY PARAMETERS_KEY PRECONDITION_KEY PREDICATES_KEY PROBLEM_KEY REQUIREMENTS_KEY RPAREN STRIPS_KEY TYPES_KEY TYPING_KEY VARIABLE WHEN_KEYpddl : domain\n                | problemdomain : LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN\n                  | LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN\n                  | LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN\n                  | LPAREN DEFINE_KEY domain_def predicates_def action_def_lst RPAREN\n                  | LPAREN DEFINE_KEY domain_def action_def_lst RPARENproblem : LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPARENdomain_pdef : LPAREN DOMAIN_PKEY NAME RPARENdomain_def : LPAREN DOMAIN_KEY NAME RPARENproblem_def : LPAREN PROBLEM_KEY NAME RPARENobjects_def : LPAREN OBJECTS_KEY typed_constants_lst RPARENinit_def : LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                    | LPAREN INIT_KEY ground_predicates_lst RPARENgoal_def : LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPARENrequire_def : LPAREN REQUIREMENTS_KEY require_key_lst RPARENrequire_key_lst : require_key require_key_lst\n                           | require_keyrequire_key : STRIPS_KEY\n                       | EQUALITY_KEY\n                       | TYPING_KEY\n                       | ADL_KEY\n                       | ND_KEYtypes_def : LPAREN TYPES_KEY typed_lst_name RPARENconstants_def : LPAREN CONSTANTS_KEY typed_constants_lst RPAREN\n                         | LPAREN CONSTANTS_KEY names_lst RPARENtyped_lst_name : names_lstnames_lst : NAME names_lst\n                     | NAMEpredicates_def : LPAREN PREDICATES_KEY predicate_def_lst RPARENpredicate_def_lst : predicate_def predicate_def_lst\n                             | predicate_defpredicate_def : LPAREN NAME typed_variables_lst RPAREN\n                         | LPAREN NAME RPARENground_predicates_lst : ground_predicate ground_predicates_lst\n                                 | ground_predicateground_predicate : LPAREN NAME RPAREN\n                            | LPAREN NAME constants_lst RPARENconstants_lst : constant constants_lst\n                         | constanttyped_constants_lst : constants_lst HYPHEN type typed_constants_lst\n                               | constants_lst HYPHEN typeaction_def_lst : action_def action_def_lst\n                          | action_defaction_def : LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPARENparameters_def : PARAMETERS_KEY LPAREN typed_variables_lst RPAREN\n                          | PARAMETERS_KEY LPAREN RPARENprecond_def : PRECONDITION_KEY LPAREN formula RPARENformula : literal\n                   | AND_KEY formula_lst\n                   | OR_KEY formula_lst\n                   | NOT_KEY formula\n                   | IMPLY_KEY formula formula\n                   | EXISTS_KEY LPAREN typed_variables_lst RPAREN formula\n                   | FORALL_KEY LPAREN typed_variables_lst RPAREN formula\n                   | LPAREN AND_KEY formula_lst RPAREN\n                   | LPAREN OR_KEY formula_lst RPAREN\n                   | LPAREN NOT_KEY formula RPAREN\n                   | LPAREN IMPLY_KEY formula formula RPAREN\n                   | LPAREN literal RPAREN\n                   | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN\n                   | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPARENformula_lst : formula formula_lst\n                       | formulaeffects_def : EFFECT_KEY LPAREN one_eff_formula RPARENone_eff_formula : literal\n                           | AND_KEY\n                           | AND_KEY one_eff_formula_lst\n                           | ONEOF_KEY atomic_eff_lst\n                           | WHEN_KEY formula atomic_eff\n                           | LPAREN ONEOF_KEY atomic_eff_lst RPAREN\n                           | LPAREN WHEN_KEY formula atomic_eff RPAREN\n                           | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN\n                           | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPARENone_eff_formula_lst : one_eff_formula one_eff_formula_lst\n                               | one_eff_formulaatomic_eff_lst : atomic_eff atomic_eff_lst\n                          | atomic_effatomic_eff : literal\n                      | AND_KEY literal_lst\n                      | LPAREN AND_KEY RPAREN\n                      | LPAREN AND_KEY literal_lst RPAREN\n                      | LPAREN WHEN_KEY formula atomic_eff RPARENliteral_lst : literal literal_lst\n                       | literalliteral : LPAREN NOT_KEY predicate RPAREN\n                   | predicatepredicate : LPAREN NAME variables_lst RPAREN\n                     | LPAREN EQUALS VARIABLE VARIABLE RPAREN\n                     | LPAREN NAME RPAREN\n                     | NAME variables_lst\n                     | EQUALS VARIABLE VARIABLE\n                     | NAMEtyped_variables_lst : variables_lst HYPHEN type typed_variables_lst\n                               | variables_lst HYPHEN typevariables_lst : VARIABLE variables_lst\n                         | VARIABLEtype : NAMEconstant : NAME"

_lr_action_items = {
    "LPAREN": (
        [
            0,
            5,
            7,
            8,
            12,
            13,
            15,
            17,
            21,
            24,
            25,
            32,
            33,
            34,
            44,
            48,
            49,
            55,
            56,
            59,
            62,
            68,
            71,
            76,
            80,
            82,
            84,
            86,
            93,
            98,
            99,
            101,
            103,
            105,
            106,
            109,
            110,
            114,
            116,
            121,
            122,
            123,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            138,
            140,
            144,
            145,
            146,
            147,
            149,
            150,
            151,
            152,
            154,
            155,
            159,
            160,
            161,
            162,
            163,
            166,
            169,
            171,
            172,
            173,
            174,
            178,
            179,
            180,
            181,
            182,
            183,
            185,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            203,
            206,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            231,
            235,
            236,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            253,
            254,
            255,
            256,
            257,
            258,
            261,
        ],
        [
            4,
            6,
            11,
            16,
            23,
            26,
            26,
            31,
            42,
            47,
            26,
            54,
            -10,
            -11,
            42,
            67,
            26,
            77,
            -16,
            -30,
            85,
            26,
            -9,
            96,
            -34,
            -97,
            106,
            -24,
            -12,
            118,
            119,
            -33,
            -96,
            122,
            123,
            -25,
            -26,
            118,
            -14,
            -45,
            142,
            148,
            -49,
            123,
            123,
            123,
            123,
            164,
            165,
            -87,
            -93,
            -37,
            118,
            -66,
            142,
            184,
            123,
            123,
            123,
            188,
            123,
            193,
            194,
            -50,
            123,
            -51,
            -52,
            123,
            -91,
            -38,
            184,
            123,
            207,
            208,
            -68,
            142,
            -69,
            184,
            -79,
            148,
            184,
            148,
            123,
            -60,
            -90,
            -63,
            -53,
            -92,
            -13,
            184,
            -75,
            -77,
            -80,
            148,
            148,
            123,
            -70,
            -56,
            -57,
            -58,
            -86,
            -88,
            123,
            123,
            -71,
            -84,
            -81,
            184,
            -59,
            123,
            123,
            -89,
            -54,
            -55,
            -72,
            251,
            -82,
            -83,
            -61,
            -62,
            123,
            -73,
            184,
            -74,
        ],
    ),
    "$end": (
        [1, 2, 3, 28, 51, 70, 92, 100, 111,],
        [0, -1, -2, -7, -6, -5, -4, -8, -3,],
    ),
    "DEFINE_KEY": ([4,], [5,]),
    "DOMAIN_KEY": ([6,], [9,]),
    "PROBLEM_KEY": ([6,], [10,]),
    "NAME": (
        [
            9,
            10,
            22,
            30,
            42,
            46,
            53,
            65,
            66,
            74,
            75,
            82,
            90,
            94,
            96,
            102,
            103,
            106,
            112,
            113,
            115,
            118,
            122,
            123,
            125,
            126,
            127,
            128,
            129,
            132,
            133,
            142,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            159,
            160,
            161,
            162,
            163,
            166,
            171,
            172,
            174,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            206,
            208,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            231,
            235,
            236,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            251,
            253,
            254,
            255,
            256,
            257,
            258,
            261,
        ],
        [
            18,
            19,
            45,
            52,
            58,
            65,
            75,
            65,
            90,
            75,
            -99,
            -97,
            65,
            113,
            115,
            113,
            -96,
            133,
            75,
            -98,
            75,
            115,
            133,
            156,
            -49,
            133,
            133,
            133,
            133,
            -87,
            -93,
            175,
            -66,
            133,
            133,
            133,
            175,
            133,
            133,
            133,
            133,
            -50,
            133,
            -51,
            -52,
            133,
            -91,
            133,
            133,
            133,
            -68,
            133,
            -69,
            133,
            -79,
            133,
            175,
            133,
            156,
            133,
            -60,
            -90,
            -63,
            -53,
            -92,
            133,
            175,
            -75,
            -77,
            -80,
            133,
            133,
            133,
            -70,
            -56,
            -57,
            -58,
            -86,
            -88,
            133,
            133,
            -71,
            -84,
            -81,
            133,
            -59,
            133,
            133,
            -89,
            -54,
            -55,
            -72,
            133,
            -82,
            175,
            -83,
            -61,
            -62,
            133,
            -73,
            133,
            -74,
        ],
    ),
    "REQUIREMENTS_KEY": ([11,], [20,]),
    "PREDICATES_KEY": ([11, 23, 47, 67,], [21, 21, 21, 21,]),
    "ACTION_KEY": ([11, 26,], [22, 22,]),
    "RPAREN": (
        [
            14,
            15,
            18,
            19,
            27,
            29,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            43,
            44,
            50,
            52,
            57,
            58,
            60,
            63,
            64,
            65,
            69,
            72,
            74,
            75,
            78,
            79,
            80,
            82,
            85,
            87,
            88,
            89,
            90,
            91,
            95,
            97,
            98,
            101,
            103,
            104,
            107,
            112,
            113,
            115,
            117,
            120,
            121,
            124,
            125,
            132,
            133,
            136,
            137,
            138,
            139,
            141,
            143,
            144,
            145,
            153,
            156,
            159,
            160,
            161,
            162,
            166,
            168,
            169,
            170,
            175,
            177,
            178,
            179,
            180,
            181,
            182,
            186,
            187,
            189,
            190,
            192,
            195,
            196,
            198,
            199,
            200,
            201,
            202,
            204,
            205,
            209,
            210,
            212,
            213,
            214,
            215,
            216,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            230,
            231,
            232,
            233,
            234,
            235,
            236,
            237,
            239,
            242,
            243,
            244,
            245,
            247,
            248,
            249,
            250,
            252,
            253,
            254,
            255,
            257,
            259,
            260,
            261,
        ],
        [
            28,
            -44,
            33,
            34,
            51,
            -43,
            56,
            -18,
            -19,
            -20,
            -21,
            -22,
            -23,
            59,
            -32,
            70,
            71,
            -17,
            80,
            -31,
            86,
            -27,
            -29,
            92,
            93,
            -40,
            -99,
            100,
            101,
            -34,
            -97,
            108,
            -28,
            109,
            110,
            -29,
            111,
            -39,
            116,
            -36,
            -33,
            -96,
            121,
            135,
            -42,
            -98,
            138,
            -35,
            -95,
            -45,
            158,
            -49,
            -87,
            -93,
            -41,
            168,
            -37,
            169,
            -94,
            177,
            -66,
            -67,
            192,
            196,
            -50,
            -64,
            -51,
            -52,
            -91,
            203,
            -38,
            204,
            196,
            -65,
            -68,
            -76,
            -69,
            -78,
            -79,
            219,
            220,
            221,
            222,
            -60,
            226,
            -90,
            -63,
            -53,
            228,
            229,
            -92,
            230,
            231,
            222,
            226,
            -75,
            -77,
            -80,
            -85,
            236,
            -70,
            -56,
            -57,
            -58,
            -86,
            239,
            240,
            241,
            -88,
            242,
            -15,
            -71,
            245,
            246,
            242,
            -84,
            -81,
            247,
            -59,
            -89,
            -54,
            -55,
            -72,
            -82,
            253,
            254,
            255,
            257,
            -83,
            -61,
            -62,
            -73,
            260,
            261,
            -74,
        ],
    ),
    "DOMAIN_PKEY": ([16,], [30,]),
    "STRIPS_KEY": ([20, 36, 37, 38, 39, 40, 41,], [37, 37, -19, -20, -21, -22, -23,]),
    "EQUALITY_KEY": ([20, 36, 37, 38, 39, 40, 41,], [38, 38, -19, -20, -21, -22, -23,]),
    "TYPING_KEY": ([20, 36, 37, 38, 39, 40, 41,], [39, 39, -19, -20, -21, -22, -23,]),
    "ADL_KEY": ([20, 36, 37, 38, 39, 40, 41,], [40, 40, -19, -20, -21, -22, -23,]),
    "ND_KEY": ([20, 36, 37, 38, 39, 40, 41,], [41, 41, -19, -20, -21, -22, -23,]),
    "TYPES_KEY": ([23,], [46,]),
    "OBJECTS_KEY": ([31,], [53,]),
    "PARAMETERS_KEY": ([45,], [62,]),
    "CONSTANTS_KEY": ([47,], [66,]),
    "INIT_KEY": ([54,], [76,]),
    "VARIABLE": (
        [
            58,
            82,
            85,
            113,
            120,
            133,
            134,
            156,
            157,
            164,
            165,
            167,
            175,
            176,
            193,
            194,
            197,
            207,
            211,
        ],
        [
            82,
            82,
            82,
            -98,
            82,
            82,
            167,
            82,
            197,
            82,
            82,
            202,
            82,
            211,
            82,
            82,
            227,
            82,
            234,
        ],
    ),
    "PRECONDITION_KEY": ([61, 108, 135,], [84, -47, -46,]),
    "HYPHEN": (
        [73, 74, 75, 81, 82, 90, 95, 103,],
        [94, -40, -99, 102, -97, -99, -39, -96,],
    ),
    "GOAL_KEY": ([77,], [99,]),
    "AND_KEY": (
        [
            82,
            96,
            103,
            106,
            119,
            122,
            123,
            125,
            126,
            127,
            128,
            129,
            132,
            133,
            144,
            145,
            146,
            147,
            149,
            150,
            151,
            152,
            159,
            160,
            161,
            162,
            163,
            166,
            171,
            172,
            178,
            179,
            180,
            181,
            182,
            184,
            185,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            206,
            212,
            213,
            214,
            215,
            217,
            218,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            231,
            235,
            236,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            251,
            253,
            254,
            255,
            256,
            257,
            258,
            261,
        ],
        [
            -97,
            114,
            -96,
            126,
            140,
            145,
            149,
            -49,
            126,
            126,
            126,
            126,
            -87,
            -93,
            -66,
            145,
            183,
            126,
            126,
            126,
            126,
            126,
            -50,
            126,
            -51,
            -52,
            126,
            -91,
            183,
            126,
            -68,
            145,
            -69,
            183,
            -79,
            216,
            183,
            149,
            126,
            -60,
            -90,
            -63,
            -53,
            -92,
            183,
            -75,
            -77,
            -80,
            -85,
            126,
            -70,
            -56,
            -57,
            -58,
            -86,
            -88,
            126,
            126,
            -71,
            -84,
            -81,
            183,
            -59,
            126,
            126,
            -89,
            -54,
            -55,
            -72,
            183,
            -82,
            216,
            -83,
            -61,
            -62,
            126,
            -73,
            183,
            -74,
        ],
    ),
    "OR_KEY": (
        [
            82,
            103,
            106,
            123,
            125,
            126,
            127,
            128,
            129,
            132,
            133,
            147,
            149,
            150,
            151,
            152,
            159,
            160,
            161,
            162,
            163,
            166,
            172,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            217,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            239,
            240,
            241,
            242,
            243,
            244,
            254,
            255,
            256,
        ],
        [
            -97,
            -96,
            127,
            150,
            -49,
            127,
            127,
            127,
            127,
            -87,
            -93,
            127,
            127,
            127,
            127,
            127,
            -50,
            127,
            -51,
            -52,
            127,
            -91,
            127,
            150,
            127,
            -60,
            -90,
            -63,
            -53,
            -92,
            127,
            -56,
            -57,
            -58,
            -86,
            -88,
            127,
            127,
            -59,
            127,
            127,
            -89,
            -54,
            -55,
            -61,
            -62,
            127,
        ],
    ),
    "NOT_KEY": (
        [
            82,
            103,
            106,
            123,
            125,
            126,
            127,
            128,
            129,
            132,
            133,
            142,
            147,
            148,
            149,
            150,
            151,
            152,
            159,
            160,
            161,
            162,
            163,
            166,
            172,
            184,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            217,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            239,
            240,
            241,
            242,
            243,
            244,
            251,
            254,
            255,
            256,
        ],
        [
            -97,
            -96,
            128,
            151,
            -49,
            128,
            128,
            128,
            128,
            -87,
            -93,
            174,
            128,
            174,
            128,
            128,
            128,
            128,
            -50,
            128,
            -51,
            -52,
            128,
            -91,
            128,
            174,
            151,
            128,
            -60,
            -90,
            -63,
            -53,
            -92,
            128,
            -56,
            -57,
            -58,
            -86,
            -88,
            128,
            128,
            -59,
            128,
            128,
            -89,
            -54,
            -55,
            174,
            -61,
            -62,
            128,
        ],
    ),
    "IMPLY_KEY": (
        [
            82,
            103,
            106,
            123,
            125,
            126,
            127,
            128,
            129,
            132,
            133,
            147,
            149,
            150,
            151,
            152,
            159,
            160,
            161,
            162,
            163,
            166,
            172,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            217,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            239,
            240,
            241,
            242,
            243,
            244,
            254,
            255,
            256,
        ],
        [
            -97,
            -96,
            129,
            152,
            -49,
            129,
            129,
            129,
            129,
            -87,
            -93,
            129,
            129,
            129,
            129,
            129,
            -50,
            129,
            -51,
            -52,
            129,
            -91,
            129,
            152,
            129,
            -60,
            -90,
            -63,
            -53,
            -92,
            129,
            -56,
            -57,
            -58,
            -86,
            -88,
            129,
            129,
            -59,
            129,
            129,
            -89,
            -54,
            -55,
            -61,
            -62,
            129,
        ],
    ),
    "EXISTS_KEY": (
        [
            82,
            103,
            106,
            123,
            125,
            126,
            127,
            128,
            129,
            132,
            133,
            147,
            149,
            150,
            151,
            152,
            159,
            160,
            161,
            162,
            163,
            166,
            172,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            217,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            239,
            240,
            241,
            242,
            243,
            244,
            254,
            255,
            256,
        ],
        [
            -97,
            -96,
            130,
            154,
            -49,
            130,
            130,
            130,
            130,
            -87,
            -93,
            130,
            130,
            130,
            130,
            130,
            -50,
            130,
            -51,
            -52,
            130,
            -91,
            130,
            154,
            130,
            -60,
            -90,
            -63,
            -53,
            -92,
            130,
            -56,
            -57,
            -58,
            -86,
            -88,
            130,
            130,
            -59,
            130,
            130,
            -89,
            -54,
            -55,
            -61,
            -62,
            130,
        ],
    ),
    "FORALL_KEY": (
        [
            82,
            103,
            106,
            123,
            125,
            126,
            127,
            128,
            129,
            132,
            133,
            142,
            147,
            149,
            150,
            151,
            152,
            159,
            160,
            161,
            162,
            163,
            166,
            172,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            217,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            239,
            240,
            241,
            242,
            243,
            244,
            254,
            255,
            256,
        ],
        [
            -97,
            -96,
            131,
            155,
            -49,
            131,
            131,
            131,
            131,
            -87,
            -93,
            173,
            131,
            131,
            131,
            131,
            131,
            -50,
            131,
            -51,
            -52,
            131,
            -91,
            131,
            155,
            131,
            -60,
            -90,
            -63,
            -53,
            -92,
            131,
            -56,
            -57,
            -58,
            -86,
            -88,
            131,
            131,
            -59,
            131,
            131,
            -89,
            -54,
            -55,
            -61,
            -62,
            131,
        ],
    ),
    "EQUALS": (
        [
            82,
            103,
            106,
            122,
            123,
            125,
            126,
            127,
            128,
            129,
            132,
            133,
            142,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            159,
            160,
            161,
            162,
            163,
            166,
            171,
            172,
            174,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            188,
            191,
            192,
            196,
            198,
            199,
            202,
            206,
            208,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            226,
            228,
            229,
            231,
            235,
            236,
            238,
            239,
            240,
            241,
            242,
            243,
            244,
            245,
            246,
            247,
            251,
            253,
            254,
            255,
            256,
            257,
            258,
            261,
        ],
        [
            -97,
            -96,
            134,
            134,
            157,
            -49,
            134,
            134,
            134,
            134,
            -87,
            -93,
            176,
            -66,
            134,
            134,
            134,
            176,
            134,
            134,
            134,
            134,
            -50,
            134,
            -51,
            -52,
            134,
            -91,
            134,
            134,
            134,
            -68,
            134,
            -69,
            134,
            -79,
            134,
            176,
            134,
            157,
            134,
            -60,
            -90,
            -63,
            -53,
            -92,
            134,
            176,
            -75,
            -77,
            -80,
            134,
            134,
            134,
            -70,
            -56,
            -57,
            -58,
            -86,
            -88,
            134,
            134,
            -71,
            -84,
            -81,
            134,
            -59,
            134,
            134,
            -89,
            -54,
            -55,
            -72,
            134,
            -82,
            176,
            -83,
            -61,
            -62,
            134,
            -73,
            134,
            -74,
        ],
    ),
    "ONEOF_KEY": (
        [
            82,
            103,
            122,
            132,
            133,
            142,
            144,
            145,
            166,
            178,
            179,
            180,
            181,
            182,
            196,
            202,
            212,
            213,
            214,
            215,
            218,
            222,
            226,
            231,
            235,
            236,
            242,
            245,
            247,
            253,
            257,
            261,
        ],
        [
            -97,
            -96,
            146,
            -87,
            -93,
            171,
            -66,
            146,
            -91,
            -68,
            146,
            -69,
            -78,
            -79,
            -90,
            -92,
            -75,
            -77,
            -80,
            -85,
            -70,
            -86,
            -88,
            -71,
            -84,
            -81,
            -89,
            -72,
            -82,
            -83,
            -73,
            -74,
        ],
    ),
    "WHEN_KEY": (
        [
            82,
            103,
            122,
            132,
            133,
            142,
            144,
            145,
            166,
            178,
            179,
            180,
            181,
            182,
            184,
            196,
            202,
            212,
            213,
            214,
            215,
            218,
            222,
            226,
            231,
            235,
            236,
            242,
            245,
            247,
            251,
            253,
            257,
            261,
        ],
        [
            -97,
            -96,
            147,
            -87,
            -93,
            172,
            -66,
            147,
            -91,
            -68,
            147,
            -69,
            -78,
            -79,
            217,
            -90,
            -92,
            -75,
            -77,
            -80,
            -85,
            -70,
            -86,
            -88,
            -71,
            -84,
            -81,
            -89,
            -72,
            -82,
            256,
            -83,
            -73,
            -74,
        ],
    ),
    "EFFECT_KEY": ([83, 158,], [105, -48,]),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "pddl": ([0,], [1,]),
    "domain": ([0,], [2,]),
    "problem": ([0,], [3,]),
    "domain_def": ([5,], [7,]),
    "problem_def": ([5,], [8,]),
    "require_def": ([7,], [12,]),
    "predicates_def": ([7, 12, 24, 48,], [13, 25, 49, 68,]),
    "action_def_lst": ([7, 13, 15, 25, 49, 68,], [14, 27, 29, 50, 69, 91,]),
    "action_def": ([7, 13, 15, 25, 49, 68,], [15, 15, 15, 15, 15, 15,]),
    "domain_pdef": ([8,], [17,]),
    "types_def": ([12,], [24,]),
    "objects_def": ([17,], [32,]),
    "require_key_lst": ([20, 36,], [35, 57,]),
    "require_key": ([20, 36,], [36, 36,]),
    "predicate_def_lst": ([21, 44,], [43, 60,]),
    "predicate_def": ([21, 44,], [44, 44,]),
    "constants_def": ([24,], [48,]),
    "init_def": ([32,], [55,]),
    "parameters_def": ([45,], [61,]),
    "typed_lst_name": ([46,], [63,]),
    "names_lst": ([46, 65, 66, 90,], [64, 87, 89, 87,]),
    "typed_constants_lst": ([53, 66, 112,], [72, 88, 136,]),
    "constants_lst": ([53, 66, 74, 112, 115,], [73, 73, 95, 73, 139,]),
    "constant": ([53, 66, 74, 112, 115,], [74, 74, 74, 74, 74,]),
    "goal_def": ([55,], [78,]),
    "typed_variables_lst": (
        [58, 85, 120, 164, 165, 193, 194, 207,],
        [79, 107, 141, 200, 201, 224, 225, 233,],
    ),
    "variables_lst": (
        [58, 82, 85, 120, 133, 156, 164, 165, 175, 193, 194, 207,],
        [81, 103, 81, 81, 166, 195, 81, 81, 210, 81, 81, 81,],
    ),
    "precond_def": ([61,], [83,]),
    "ground_predicates_lst": ([76, 98, 114, 140,], [97, 117, 137, 170,]),
    "ground_predicate": ([76, 98, 114, 140,], [98, 98, 98, 98,]),
    "effects_def": ([83,], [104,]),
    "type": ([94, 102,], [112, 120,]),
    "formula": (
        [
            106,
            126,
            127,
            128,
            129,
            147,
            149,
            150,
            151,
            152,
            160,
            163,
            172,
            191,
            217,
            228,
            229,
            240,
            241,
            256,
        ],
        [
            124,
            160,
            160,
            162,
            163,
            185,
            160,
            160,
            189,
            191,
            160,
            199,
            206,
            223,
            238,
            243,
            244,
            249,
            250,
            258,
        ],
    ),
    "literal": (
        [
            106,
            122,
            123,
            126,
            127,
            128,
            129,
            145,
            146,
            147,
            149,
            150,
            151,
            152,
            160,
            163,
            171,
            172,
            179,
            181,
            183,
            185,
            188,
            191,
            206,
            215,
            216,
            217,
            228,
            229,
            238,
            240,
            241,
            246,
            256,
            258,
        ],
        [
            125,
            144,
            153,
            125,
            125,
            125,
            125,
            144,
            182,
            125,
            125,
            125,
            125,
            125,
            125,
            125,
            182,
            125,
            144,
            182,
            215,
            182,
            153,
            125,
            182,
            215,
            215,
            125,
            125,
            125,
            182,
            125,
            125,
            182,
            125,
            182,
        ],
    ),
    "predicate": (
        [
            106,
            122,
            123,
            126,
            127,
            128,
            129,
            145,
            146,
            147,
            149,
            150,
            151,
            152,
            160,
            163,
            171,
            172,
            174,
            179,
            181,
            183,
            185,
            188,
            191,
            206,
            215,
            216,
            217,
            228,
            229,
            238,
            240,
            241,
            246,
            256,
            258,
        ],
        [
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            190,
            132,
            132,
            132,
            132,
            132,
            209,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
        ],
    ),
    "one_eff_formula": ([122, 145, 179,], [143, 179, 179,]),
    "formula_lst": ([126, 127, 149, 150, 160,], [159, 161, 186, 187, 198,]),
    "one_eff_formula_lst": ([145, 179,], [178, 212,]),
    "atomic_eff_lst": ([146, 171, 181,], [180, 205, 213,]),
    "atomic_eff": (
        [146, 171, 181, 185, 206, 238, 246, 258,],
        [181, 181, 181, 218, 232, 248, 252, 259,],
    ),
    "literal_lst": ([183, 215, 216,], [214, 235, 237,]),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> pddl", "S'", 1, None, None, None),
    ("pddl -> domain", "pddl", 1, "p_pddl", "parser.py", 34),
    ("pddl -> problem", "pddl", 1, "p_pddl", "parser.py", 35),
    (
        "domain -> LPAREN DEFINE_KEY domain_def require_def types_def constants_def predicates_def action_def_lst RPAREN",
        "domain",
        9,
        "p_domain",
        "parser.py",
        39,
    ),
    (
        "domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN",
        "domain",
        8,
        "p_domain",
        "parser.py",
        40,
    ),
    (
        "domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN",
        "domain",
        7,
        "p_domain",
        "parser.py",
        41,
    ),
    (
        "domain -> LPAREN DEFINE_KEY domain_def predicates_def action_def_lst RPAREN",
        "domain",
        6,
        "p_domain",
        "parser.py",
        42,
    ),
    (
        "domain -> LPAREN DEFINE_KEY domain_def action_def_lst RPAREN",
        "domain",
        5,
        "p_domain",
        "parser.py",
        43,
    ),
    (
        "problem -> LPAREN DEFINE_KEY problem_def domain_pdef objects_def init_def goal_def RPAREN",
        "problem",
        8,
        "p_problem",
        "parser.py",
        57,
    ),
    (
        "domain_pdef -> LPAREN DOMAIN_PKEY NAME RPAREN",
        "domain_pdef",
        4,
        "p_domain_pdef",
        "parser.py",
        61,
    ),
    (
        "domain_def -> LPAREN DOMAIN_KEY NAME RPAREN",
        "domain_def",
        4,
        "p_domain_def",
        "parser.py",
        65,
    ),
    (
        "problem_def -> LPAREN PROBLEM_KEY NAME RPAREN",
        "problem_def",
        4,
        "p_problem_def",
        "parser.py",
        69,
    ),
    (
        "objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN",
        "objects_def",
        4,
        "p_objects_def",
        "parser.py",
        73,
    ),
    (
        "init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN",
        "init_def",
        7,
        "p_init_def",
        "parser.py",
        77,
    ),
    (
        "init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN",
        "init_def",
        4,
        "p_init_def",
        "parser.py",
        78,
    ),
    (
        "goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN",
        "goal_def",
        7,
        "p_goal_def",
        "parser.py",
        85,
    ),
    (
        "require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN",
        "require_def",
        4,
        "p_require_def",
        "parser.py",
        90,
    ),
    (
        "require_key_lst -> require_key require_key_lst",
        "require_key_lst",
        2,
        "p_require_key_lst",
        "parser.py",
        94,
    ),
    (
        "require_key_lst -> require_key",
        "require_key_lst",
        1,
        "p_require_key_lst",
        "parser.py",
        95,
    ),
    ("require_key -> STRIPS_KEY", "require_key", 1, "p_require_key", "parser.py", 102),
    (
        "require_key -> EQUALITY_KEY",
        "require_key",
        1,
        "p_require_key",
        "parser.py",
        103,
    ),
    ("require_key -> TYPING_KEY", "require_key", 1, "p_require_key", "parser.py", 104),
    ("require_key -> ADL_KEY", "require_key", 1, "p_require_key", "parser.py", 105),
    ("require_key -> ND_KEY", "require_key", 1, "p_require_key", "parser.py", 106),
    (
        "types_def -> LPAREN TYPES_KEY typed_lst_name RPAREN",
        "types_def",
        4,
        "p_types_def",
        "parser.py",
        110,
    ),
    (
        "constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN",
        "constants_def",
        4,
        "p_constants_def",
        "parser.py",
        114,
    ),
    (
        "constants_def -> LPAREN CONSTANTS_KEY names_lst RPAREN",
        "constants_def",
        4,
        "p_constants_def",
        "parser.py",
        115,
    ),
    (
        "typed_lst_name -> names_lst",
        "typed_lst_name",
        1,
        "p_typed_lst_name",
        "parser.py",
        119,
    ),
    ("names_lst -> NAME names_lst", "names_lst", 2, "p_names_lst", "parser.py", 126),
    ("names_lst -> NAME", "names_lst", 1, "p_names_lst", "parser.py", 127),
    (
        "predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN",
        "predicates_def",
        4,
        "p_predicates_def",
        "parser.py",
        136,
    ),
    (
        "predicate_def_lst -> predicate_def predicate_def_lst",
        "predicate_def_lst",
        2,
        "p_predicate_def_lst",
        "parser.py",
        140,
    ),
    (
        "predicate_def_lst -> predicate_def",
        "predicate_def_lst",
        1,
        "p_predicate_def_lst",
        "parser.py",
        141,
    ),
    (
        "predicate_def -> LPAREN NAME typed_variables_lst RPAREN",
        "predicate_def",
        4,
        "p_predicate_def",
        "parser.py",
        148,
    ),
    (
        "predicate_def -> LPAREN NAME RPAREN",
        "predicate_def",
        3,
        "p_predicate_def",
        "parser.py",
        149,
    ),
    (
        "ground_predicates_lst -> ground_predicate ground_predicates_lst",
        "ground_predicates_lst",
        2,
        "p_ground_predicates_lst",
        "parser.py",
        156,
    ),
    (
        "ground_predicates_lst -> ground_predicate",
        "ground_predicates_lst",
        1,
        "p_ground_predicates_lst",
        "parser.py",
        157,
    ),
    (
        "ground_predicate -> LPAREN NAME RPAREN",
        "ground_predicate",
        3,
        "p_ground_predicate",
        "parser.py",
        164,
    ),
    (
        "ground_predicate -> LPAREN NAME constants_lst RPAREN",
        "ground_predicate",
        4,
        "p_ground_predicate",
        "parser.py",
        165,
    ),
    (
        "constants_lst -> constant constants_lst",
        "constants_lst",
        2,
        "p_constants_lst",
        "parser.py",
        172,
    ),
    (
        "constants_lst -> constant",
        "constants_lst",
        1,
        "p_constants_lst",
        "parser.py",
        173,
    ),
    (
        "typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst",
        "typed_constants_lst",
        4,
        "p_typed_constants_lst",
        "parser.py",
        180,
    ),
    (
        "typed_constants_lst -> constants_lst HYPHEN type",
        "typed_constants_lst",
        3,
        "p_typed_constants_lst",
        "parser.py",
        181,
    ),
    (
        "action_def_lst -> action_def action_def_lst",
        "action_def_lst",
        2,
        "p_action_def_lst",
        "parser.py",
        188,
    ),
    (
        "action_def_lst -> action_def",
        "action_def_lst",
        1,
        "p_action_def_lst",
        "parser.py",
        189,
    ),
    (
        "action_def -> LPAREN ACTION_KEY NAME parameters_def precond_def effects_def RPAREN",
        "action_def",
        7,
        "p_action_def",
        "parser.py",
        196,
    ),
    (
        "parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN",
        "parameters_def",
        4,
        "p_parameters_def",
        "parser.py",
        200,
    ),
    (
        "parameters_def -> PARAMETERS_KEY LPAREN RPAREN",
        "parameters_def",
        3,
        "p_parameters_def",
        "parser.py",
        201,
    ),
    (
        "precond_def -> PRECONDITION_KEY LPAREN formula RPAREN",
        "precond_def",
        4,
        "p_precond_def",
        "parser.py",
        208,
    ),
    ("formula -> literal", "formula", 1, "p_formula", "parser.py", 212),
    ("formula -> AND_KEY formula_lst", "formula", 2, "p_formula", "parser.py", 213),
    ("formula -> OR_KEY formula_lst", "formula", 2, "p_formula", "parser.py", 214),
    ("formula -> NOT_KEY formula", "formula", 2, "p_formula", "parser.py", 215),
    (
        "formula -> IMPLY_KEY formula formula",
        "formula",
        3,
        "p_formula",
        "parser.py",
        216,
    ),
    (
        "formula -> EXISTS_KEY LPAREN typed_variables_lst RPAREN formula",
        "formula",
        5,
        "p_formula",
        "parser.py",
        217,
    ),
    (
        "formula -> FORALL_KEY LPAREN typed_variables_lst RPAREN formula",
        "formula",
        5,
        "p_formula",
        "parser.py",
        218,
    ),
    (
        "formula -> LPAREN AND_KEY formula_lst RPAREN",
        "formula",
        4,
        "p_formula",
        "parser.py",
        219,
    ),
    (
        "formula -> LPAREN OR_KEY formula_lst RPAREN",
        "formula",
        4,
        "p_formula",
        "parser.py",
        220,
    ),
    (
        "formula -> LPAREN NOT_KEY formula RPAREN",
        "formula",
        4,
        "p_formula",
        "parser.py",
        221,
    ),
    (
        "formula -> LPAREN IMPLY_KEY formula formula RPAREN",
        "formula",
        5,
        "p_formula",
        "parser.py",
        222,
    ),
    ("formula -> LPAREN literal RPAREN", "formula", 3, "p_formula", "parser.py", 223),
    (
        "formula -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN formula RPAREN",
        "formula",
        7,
        "p_formula",
        "parser.py",
        224,
    ),
    (
        "formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN formula RPAREN",
        "formula",
        7,
        "p_formula",
        "parser.py",
        225,
    ),
    (
        "formula_lst -> formula formula_lst",
        "formula_lst",
        2,
        "p_formula_lst",
        "parser.py",
        261,
    ),
    ("formula_lst -> formula", "formula_lst", 1, "p_formula_lst", "parser.py", 262),
    (
        "effects_def -> EFFECT_KEY LPAREN one_eff_formula RPAREN",
        "effects_def",
        4,
        "p_effects_def",
        "parser.py",
        269,
    ),
    (
        "one_eff_formula -> literal",
        "one_eff_formula",
        1,
        "p_one_eff_formula",
        "parser.py",
        285,
    ),
    (
        "one_eff_formula -> AND_KEY",
        "one_eff_formula",
        1,
        "p_one_eff_formula",
        "parser.py",
        286,
    ),
    (
        "one_eff_formula -> AND_KEY one_eff_formula_lst",
        "one_eff_formula",
        2,
        "p_one_eff_formula",
        "parser.py",
        287,
    ),
    (
        "one_eff_formula -> ONEOF_KEY atomic_eff_lst",
        "one_eff_formula",
        2,
        "p_one_eff_formula",
        "parser.py",
        288,
    ),
    (
        "one_eff_formula -> WHEN_KEY formula atomic_eff",
        "one_eff_formula",
        3,
        "p_one_eff_formula",
        "parser.py",
        289,
    ),
    (
        "one_eff_formula -> LPAREN ONEOF_KEY atomic_eff_lst RPAREN",
        "one_eff_formula",
        4,
        "p_one_eff_formula",
        "parser.py",
        290,
    ),
    (
        "one_eff_formula -> LPAREN WHEN_KEY formula atomic_eff RPAREN",
        "one_eff_formula",
        5,
        "p_one_eff_formula",
        "parser.py",
        291,
    ),
    (
        "one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN atomic_eff RPAREN",
        "one_eff_formula",
        7,
        "p_one_eff_formula",
        "parser.py",
        292,
    ),
    (
        "one_eff_formula -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN WHEN_KEY formula atomic_eff RPAREN RPAREN",
        "one_eff_formula",
        11,
        "p_one_eff_formula",
        "parser.py",
        293,
    ),
    (
        "one_eff_formula_lst -> one_eff_formula one_eff_formula_lst",
        "one_eff_formula_lst",
        2,
        "p_one_eff_formula_lst",
        "parser.py",
        318,
    ),
    (
        "one_eff_formula_lst -> one_eff_formula",
        "one_eff_formula_lst",
        1,
        "p_one_eff_formula_lst",
        "parser.py",
        319,
    ),
    (
        "atomic_eff_lst -> atomic_eff atomic_eff_lst",
        "atomic_eff_lst",
        2,
        "p_atomic_eff_lst",
        "parser.py",
        326,
    ),
    (
        "atomic_eff_lst -> atomic_eff",
        "atomic_eff_lst",
        1,
        "p_atomic_eff_lst",
        "parser.py",
        327,
    ),
    ("atomic_eff -> literal", "atomic_eff", 1, "p_atomic_eff", "parser.py", 334),
    (
        "atomic_eff -> AND_KEY literal_lst",
        "atomic_eff",
        2,
        "p_atomic_eff",
        "parser.py",
        335,
    ),
    (
        "atomic_eff -> LPAREN AND_KEY RPAREN",
        "atomic_eff",
        3,
        "p_atomic_eff",
        "parser.py",
        336,
    ),
    (
        "atomic_eff -> LPAREN AND_KEY literal_lst RPAREN",
        "atomic_eff",
        4,
        "p_atomic_eff",
        "parser.py",
        337,
    ),
    (
        "atomic_eff -> LPAREN WHEN_KEY formula atomic_eff RPAREN",
        "atomic_eff",
        5,
        "p_atomic_eff",
        "parser.py",
        338,
    ),
    (
        "literal_lst -> literal literal_lst",
        "literal_lst",
        2,
        "p_literal_lst",
        "parser.py",
        357,
    ),
    ("literal_lst -> literal", "literal_lst", 1, "p_literal_lst", "parser.py", 358),
    (
        "literal -> LPAREN NOT_KEY predicate RPAREN",
        "literal",
        4,
        "p_literal",
        "parser.py",
        365,
    ),
    ("literal -> predicate", "literal", 1, "p_literal", "parser.py", 366),
    (
        "predicate -> LPAREN NAME variables_lst RPAREN",
        "predicate",
        4,
        "p_predicate",
        "parser.py",
        373,
    ),
    (
        "predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN",
        "predicate",
        5,
        "p_predicate",
        "parser.py",
        374,
    ),
    (
        "predicate -> LPAREN NAME RPAREN",
        "predicate",
        3,
        "p_predicate",
        "parser.py",
        375,
    ),
    (
        "predicate -> NAME variables_lst",
        "predicate",
        2,
        "p_predicate",
        "parser.py",
        376,
    ),
    (
        "predicate -> EQUALS VARIABLE VARIABLE",
        "predicate",
        3,
        "p_predicate",
        "parser.py",
        377,
    ),
    ("predicate -> NAME", "predicate", 1, "p_predicate", "parser.py", 378),
    (
        "typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst",
        "typed_variables_lst",
        4,
        "p_typed_variables_lst",
        "parser.py",
        394,
    ),
    (
        "typed_variables_lst -> variables_lst HYPHEN type",
        "typed_variables_lst",
        3,
        "p_typed_variables_lst",
        "parser.py",
        395,
    ),
    (
        "variables_lst -> VARIABLE variables_lst",
        "variables_lst",
        2,
        "p_variables_lst",
        "parser.py",
        402,
    ),
    (
        "variables_lst -> VARIABLE",
        "variables_lst",
        1,
        "p_variables_lst",
        "parser.py",
        403,
    ),
    ("type -> NAME", "type", 1, "p_type", "parser.py", 410),
    ("constant -> NAME", "constant", 1, "p_constant", "parser.py", 414),
]
